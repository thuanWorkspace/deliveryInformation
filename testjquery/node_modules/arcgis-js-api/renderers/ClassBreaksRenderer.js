/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../symbols","../core/jsonMap","../core/lang","../core/Logger","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/ensureType","../layers/support/fieldUtils","./Renderer","./mixins/VisualVariablesMixin","./support/ClassBreakInfo","./support/commonProperties","./support/LegendOptions","../support/arcadeOnDemand"],(function(e,s,t,r,a,o,i,l,n,c,u,p,d,h,m,y,f,g,b){"use strict";var k;const x="log",I="percent-of-total",v="field",B=new t.JSONMap({esriNormalizeByLog:x,esriNormalizeByPercentOfTotal:I,esriNormalizeByField:v}),_=p.ensureType(y);let F=k=class extends(m.VisualVariablesMixin(h)){constructor(e){super(e),this._compiledValueExpression={valueExpression:null,compiledFunction:null},this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type="class-breaks",this.valueExpression=null,this.valueExpressionTitle=null,this._set("classBreakInfos",[])}readClassBreakInfos(e,s,t){if(!Array.isArray(e))return;let r=s.minValue;return e.map((e=>{const s=new y;return s.read(e,t),null==s.minValue&&(s.minValue=r),null==s.maxValue&&(s.maxValue=s.minValue),r=s.maxValue,s}))}writeClassBreakInfos(e,s,t,r){const a=e.map((e=>e.write({},r)));this._areClassBreaksConsecutive()&&a.forEach((e=>delete e.classMinValue)),s[t]=a}castField(e){return null==e?e:"function"==typeof e?(a.getLogger(this).error(".field: field must be a string value"),null):p.ensureString(e)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let e=this._get("normalizationType");const s=!!this.normalizationField,t=null!=this.normalizationTotal;return s||t?(e=s&&v||t&&I||null,s&&t&&a.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")):e!==v&&e!==I||(e=null),e}set normalizationType(e){this._set("normalizationType",e)}addClassBreakInfo(e,t,a){let o=null;o="number"==typeof e?new y({minValue:e,maxValue:t,symbol:s.ensureType(a)}):_(r.clone(e)),this.classBreakInfos.push(o),1===this.classBreakInfos.length&&this.notifyChange("minValue")}removeClassBreakInfo(e,s){const t=this.classBreakInfos.length;for(let r=0;r<t;r++){const t=[this.classBreakInfos[r].minValue,this.classBreakInfos[r].maxValue];if(t[0]===e&&t[1]===s){this.classBreakInfos.splice(r,1);break}}}getBreakIndex(e,s){return this.valueExpression&&null==s?.arcade&&a.getLogger(this).warn(""),this.valueExpression?this._getBreakIndexForExpression(e,s):this._getBreakIndexForField(e)}async getClassBreakInfo(e,s){let t=s;this.valueExpression&&null==s?.arcade&&(t={...t,arcade:await b.loadArcade()});const r=this.getBreakIndex(e,t);return-1!==r?this.classBreakInfos[r]:null}getSymbol(e,s){if(this.valueExpression&&null==s?.arcade)return void a.getLogger(this).error("#getSymbol()","Please use getSymbolAsync if valueExpression is used");const t=this.getBreakIndex(e,s);return t>-1?this.classBreakInfos[t].symbol:this.defaultSymbol}async getSymbolAsync(e,s){let t=s;if(this.valueExpression&&null==s?.arcade){const e=await b.loadArcade(),{arcadeUtils:s}=e;s.hasGeometryOperations(this.valueExpression)&&await s.enableGeometryOperations(),t={...t,arcade:e}}const r=this.getBreakIndex(e,t);return r>-1?this.classBreakInfos[r].symbol:this.defaultSymbol}getSymbols(){const e=[];return this.classBreakInfos.forEach((s=>{s.symbol&&e.push(s.symbol)})),this.defaultSymbol&&e.push(this.defaultSymbol),e}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce(((e,s)=>e+s.getAttributeHash()),"")}getMeshHash(){const e=JSON.stringify(this.backgroundFillSymbol),s=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${e}.${s}.${this.classBreakInfos.reduce(((e,s)=>e+s.getMeshHash()),"")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new k({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol?.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol?.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:r.clone(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:r.clone(this.visualVariables),legendOptions:r.clone(this.legendOptions),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}async collectRequiredFields(e,s){const t=[this.collectVVRequiredFields(e,s),this.collectSymbolFields(e,s)];await Promise.all(t)}async collectSymbolFields(e,s){const t=[...this.getSymbols().map((t=>t.collectRequiredFields(e,s))),d.collectArcadeFieldNames(e,s,this.valueExpression)];d.collectField(e,s,this.field),d.collectField(e,s,this.normalizationField),await Promise.all(t)}_getBreakIndexForExpression(e,s){const{viewingMode:t,scale:r,spatialReference:a,arcade:o,timeZone:i}=s??{},{valueExpression:l}=this;let n=this._compiledValueExpression.valueExpression===l?this._compiledValueExpression.compiledFunction:null;const c=o.arcadeUtils;if(!n){const e=c.createSyntaxTree(l);n=c.createFunction(e),this._compiledValueExpression.compiledFunction=n}this._compiledValueExpression.valueExpression=l;const u=c.executeFunction(n,c.createExecContext(e,c.getViewInfo({viewingMode:t,scale:r,spatialReference:a}),i));return this._getBreakIndexfromInfos(u)}_getBreakIndexForField(e){const s=this.field,t=e.attributes,r=this.normalizationType;let a=parseFloat(t[s]);if(r){const e=this.normalizationTotal,s=parseFloat(this.normalizationField?t[this.normalizationField]:void 0);if(r===x)a=Math.log(a)*Math.LOG10E;else if(r!==I||null==e||isNaN(e)){if(r===v&&!isNaN(s)){if(isNaN(a)||isNaN(s))return-1;a/=s}}else a=a/e*100}return this._getBreakIndexfromInfos(a)}_getBreakIndexfromInfos(e){const s=this.isMaxInclusive;if(null!=e&&"number"==typeof e&&!isNaN(e))for(let t=0;t<this.classBreakInfos.length;t++){const r=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(r[0]<=e&&(s?e<=r[1]:e<r[1]))return t}return-1}_areClassBreaksConsecutive(){const e=this.classBreakInfos,s=e.length;for(let t=1;t<s;t++)if(e[t-1].maxValue!==e[t].minValue)return!1;return!0}};e.__decorate([o.property(f.rendererBackgroundFillSymbolProperty)],F.prototype,"backgroundFillSymbol",void 0),e.__decorate([o.property({type:[y]})],F.prototype,"classBreakInfos",void 0),e.__decorate([n.reader("classBreakInfos")],F.prototype,"readClassBreakInfos",null),e.__decorate([u.writer("classBreakInfos")],F.prototype,"writeClassBreakInfos",null),e.__decorate([o.property({type:String,json:{write:!0}})],F.prototype,"defaultLabel",void 0),e.__decorate([o.property(f.rendererSymbolProperty)],F.prototype,"defaultSymbol",void 0),e.__decorate([o.property({type:String,json:{write:!0}})],F.prototype,"field",void 0),e.__decorate([i.cast("field")],F.prototype,"castField",null),e.__decorate([o.property({type:Boolean})],F.prototype,"isMaxInclusive",void 0),e.__decorate([o.property({type:g.LegendOptions,json:{write:!0}})],F.prototype,"legendOptions",void 0),e.__decorate([o.property({type:Number,readOnly:!0,value:null,json:{read:!1,write:{overridePolicy(){return 0!==this.classBreakInfos.length&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],F.prototype,"minValue",null),e.__decorate([o.property({type:String,json:{write:!0}})],F.prototype,"normalizationField",void 0),e.__decorate([o.property({type:Number,cast:e=>p.ensureNumber(e),json:{write:!0}})],F.prototype,"normalizationTotal",void 0),e.__decorate([o.property({type:B.apiValues,value:null,json:{type:B.jsonValues,read:B.read,write:B.write}})],F.prototype,"normalizationType",null),e.__decorate([l.enumeration({classBreaks:"class-breaks"})],F.prototype,"type",void 0),e.__decorate([o.property({type:String,json:{write:!0}})],F.prototype,"valueExpression",void 0),e.__decorate([o.property({type:String,json:{write:!0}})],F.prototype,"valueExpressionTitle",void 0),F=k=e.__decorate([c.subclass("esri.renderers.ClassBreaksRenderer")],F);return F}));
