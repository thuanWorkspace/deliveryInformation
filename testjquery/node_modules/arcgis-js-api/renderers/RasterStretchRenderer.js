/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../core/JSONSupport","../core/lang","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","./support/stretchRendererUtils","../rest/support/colorRamps"],(function(t,e,r,o,s,p,a,i,c,n,m){"use strict";var u;let d=u=class extends e.JSONSupport{constructor(t){super(t),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.statistics=[],this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(t){if(t)return m.fromJSON(t)}writeStatistics(t,e,r){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[r]=t)}readStretchType(t,e){let r=e.stretchType;return"number"==typeof r&&(r=n.stretchTypeFunctionEnum[r]),n.stretchTypeJSONDict.read(r)}clone(){return new u({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:r.clone(this.statistics),gamma:r.clone(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:r.clone(this.colorRamp),histograms:r.clone(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment})}};t.__decorate([o.property({types:m.types,json:{write:!0}})],d.prototype,"colorRamp",void 0),t.__decorate([a.reader("colorRamp")],d.prototype,"readColorRamp",null),t.__decorate([o.property({type:Boolean,json:{write:!0}})],d.prototype,"computeGamma",void 0),t.__decorate([o.property({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],d.prototype,"dynamicRangeAdjustment",void 0),t.__decorate([o.property({type:[Number],json:{write:!0}})],d.prototype,"gamma",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"maxPercent",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"minPercent",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"numberOfStandardDeviations",void 0),t.__decorate([o.property({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],d.prototype,"outputMax",void 0),t.__decorate([o.property({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],d.prototype,"outputMin",void 0),t.__decorate([o.property({type:Number,json:{write:!0}})],d.prototype,"sigmoidStrengthLevel",void 0),t.__decorate([o.property({json:{type:[[Number]],write:!0}})],d.prototype,"statistics",void 0),t.__decorate([o.property()],d.prototype,"histograms",void 0),t.__decorate([c.writer("statistics")],d.prototype,"writeStatistics",null),t.__decorate([o.property({type:Boolean,json:{write:!0}})],d.prototype,"useGamma",void 0),t.__decorate([o.property({type:n.stretchTypeJSONDict.apiValues,json:{type:n.stretchTypeJSONDict.jsonValues,write:n.stretchTypeJSONDict.write}})],d.prototype,"stretchType",void 0),t.__decorate([a.reader("stretchType",["stretchType"])],d.prototype,"readStretchType",null),t.__decorate([p.enumeration({rasterStretch:"raster-stretch"})],d.prototype,"type",void 0),d=u=t.__decorate([i.subclass("esri.renderers.RasterStretchRenderer")],d);return d}));
