/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../core/Error","../../core/Logger","../../core/promiseUtils","./actions"],(function(e,t,r,o,n){"use strict";const i="esri.widgets.Popup.PopupViewModel",a=r.getLogger(i),s=e=>{const{event:r,view:i,viewModel:a}=e,{action:s}=r;if(!s)return Promise.reject(new t("trigger-action:missing-arguments","Event has no action"));const{disabled:u,id:c}=s;if(!c)return Promise.reject(new t("trigger-action:invalid-action","action.id is missing"));if(u)return Promise.reject(new t("trigger-action:invalid-action","Action is disabled"));if(c===n.zoomToFeature.id)return d(a).catch(o.throwIfNotAbortError);if(c===n.zoomToClusteredFeatures.id)return g(a);if(c===n.browseClusteredFeatures.id)return a.browseClusterEnabled=!a.browseClusterEnabled,a.featureMenuOpen=a.browseClusterEnabled,Promise.resolve();if(c===n.removeSelectedFeature.id){a.visible=!1;const{selectedFeature:e}=a;if(!e)return Promise.reject(new t(`trigger-action:${n.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:e}));const{sourceLayer:r}=e;return r?r.remove(e):i?.graphics.remove(e),Promise.resolve()}return Promise.resolve()};function u(e){const{selectedFeature:t,location:r,view:o}=e;return o?t??r??null:null}function c(e){return!!e&&e.isAggregate&&"cluster"===e.sourceLayer?.featureReduction?.type}async function l(e,t){if("3d"!==t?.type||!e||"esri.Graphic"!==e.declaredClass)return!0;const r=t.getViewForGraphic(e);if(r&&"whenGraphicBounds"in r){let t=null;try{t=await r.whenGraphicBounds(e,{useViewElevation:!0})}catch(o){}return!t||!t.boundingBox||t.boundingBox[0]===t.boundingBox[3]&&t.boundingBox[1]===t.boundingBox[4]&&t.boundingBox[2]===t.boundingBox[5]}return!0}async function d(e){const{location:r,selectedFeature:o,view:i,zoomFactor:s}=e,c=u(e);if(!i||!c){const e=new t("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:c,view:i});throw a.error(e),e}const d=i.scale/s,g=e.selectedFeature?.geometry,w=g??r,m=null!=w&&"point"===w.type&&await l(o,i);n.zoomToFeature.active=!0,n.zoomToFeature.disabled=!0;try{await e.zoomTo({target:{target:c,scale:m?d:void 0}})}catch(f){const e=new t("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:o});a.error(e)}finally{n.zoomToFeature.active=!1,n.zoomToFeature.disabled=!1,e.zoomToLocation=null,m&&(e.location=w)}}async function g(e){const{selectedFeature:r,view:o}=e;if("2d"!==o?.type){const e=new t("zoomToCluster:invalid-view","View must be 2d MapView.",{view:o});throw a.error(e),e}if(!r||!c(r)){const e=new t("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:r});throw a.error(e),e}const[i,s]=await f(o,r);n.zoomToClusteredFeatures.active=!0,n.zoomToClusteredFeatures.disabled=!0;const{extent:u}=await i.queryExtent(s);await e.zoomTo({target:u}),n.zoomToClusteredFeatures.active=!1,n.zoomToClusteredFeatures.disabled=!1}async function w(e){const{view:t,selectedFeature:r}=e;if(!t||!r)return;const[o,n]=await f(t,r),{extent:i}=await o.queryExtent(n);e.selectedClusterBoundaryFeature.geometry=i,t.graphics.add(e.selectedClusterBoundaryFeature)}async function m(e){const{selectedFeature:t,view:r}=e;if(!r||!t)return;const[o,i]=await f(r,t);n.browseClusteredFeatures.active=!0,n.browseClusteredFeatures.disabled=!0;const{features:a}=await o.queryFeatures(i);n.browseClusteredFeatures.active=!1,n.browseClusteredFeatures.disabled=!1,n.browseClusteredFeatures.value=!0,e?.open({features:[t].concat(a),featureMenuOpen:!0})}async function f(e,t){const r=await e.whenLayerView(t.sourceLayer),o=r.createQuery(),n=t.getObjectId();return o.aggregateIds=null!=n?[n]:[],[r,o]}function v(e){n.browseClusteredFeatures.value=!1;const t=e.features.filter((e=>c(e)));t.length&&(e.features=t)}function F(e){if(null==e)return null;switch(e.type){case"point":return e;case"extent":return e.center;case"polygon":return e.centroid;case"multipoint":case"polyline":return e.extent?.center;default:return null}}e.browseAggregateFeatures=m,e.displayClusterExtent=w,e.getPointFromGeometry=F,e.getSelectedTarget=u,e.isClusterFeature=c,e.removeClusteredFeaturesForBrowsing=v,e.triggerAction=s,e.zoomToClusterExtent=g,e.zoomToLocation=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
