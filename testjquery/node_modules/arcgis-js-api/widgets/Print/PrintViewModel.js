/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../request","../../core/Collection","../../core/Error","../../core/lang","../../core/Loadable","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../intl/date","../../intl/locale","../../portal/Portal","../../rest/geoprocessor/execute","../../rest/geoprocessor/GPOptions","../../core/has","../../geometry/support/normalizeUtils","../../layers/support/Field","../../layers/support/MapImage","../../config","../../kernel","../../core/urlUtils","../../rest/support/DataFile","../../rest/support/FeatureSet","../../rest/support/LinearUnit","../../rest/support/ParameterValue","../../rest/support/RasterData","../../rest/support/JobInfo","../../rest/print","../../rest/support/fileFormat","../../rest/support/layoutTemplate","../../rest/support/PrintParameters","../../rest/support/PrintTemplate","./CustomTemplate"],(function(e,t,r,o,s,a,i,l,n,p,c,u,d,m,h,f,y,v,T,_,w,x,S,g,O,E,b,P,C,L,I,U,D){"use strict";const F=r.ofType(D);function N(e){var t;e.layoutOptions??(e.layoutOptions={}),(t=e.layoutOptions).customTextElements??(t.customTextElements=[]);const r="date";if(!e.layoutOptions.customTextElements.find((e=>r in e))){const{customTextElements:t}=e.layoutOptions;let r=p.formatDate(Date.now(),p.convertDateFormatToIntlOptions("short-date"));"ar"===c.getLanguage()&&(r="‏"+r),t.push({date:r})}}let V=class extends a{constructor(e){super(e),this._serviceTemplateCustomTextElements=null,this.allowedFormats="all",this.allowedLayouts="all",this.defaultTemplates=new F,this.extraParameters=null,this.includeDefaultTemplates=!0,this.error=null,this.portal=u.getDefault(),this.printServiceUrl=null,this.printTimeout=12e4,this.templatesInfo=null,this.updateDelay=1e3,this.view=null,this.templateCustomTextElements=null,this.print=this.print.bind(this)}destroy(){this.view=null}get effectivePrintServiceUrl(){return this.printServiceUrl??null}get effectiveTemplateCustomTextElements(){if(!this._serviceTemplateCustomTextElements)return{};const e=s.clone(this._serviceTemplateCustomTextElements);return this.templateCustomTextElements&&Object.keys(this.templateCustomTextElements).forEach((t=>{const r=e[t];if(r){const e=this.templateCustomTextElements?.[t];r.forEach((t=>{const[r]=Object.entries(t)[0];e?.forEach((e=>{const[o,s]=Object.entries(e)[0];r===o&&(t[r]=s)}))}))}})),Object.freeze(e)}get state(){return"loading"===this.loadStatus?"initializing":this.error||"failed"===this.loadStatus?"error":this.view?.ready&&"loaded"===this.loadStatus?"ready":"disabled"}async load(e){return this.addResolvingPromise(this._loadResources(e).catch((e=>this.error=e))),this}async print(e){const{view:t,extraParameters:r,updateDelay:s}=this;if(!t)throw new o("print:view-required","view is not set");N(e);const a=new I({view:t,template:e,extraParameters:r,updateDelay:s});try{return await P.execute(this.effectivePrintServiceUrl,a,{timeout:this.printTimeout})}catch(i){throw new o("print:export-error","An error occurred while exporting the web map.",{error:i})}}toPrintTemplate({attributionEnabled:e,author:t,copyright:r,customTextElements:o,dpi:s,forceFeatureAttributes:a,format:i,height:l,includeTables:n,layout:p,legendEnabled:c,northArrowEnabled:u,scale:d,scaleEnabled:m,title:h,width:f}){const y=new U({attributionVisible:e,forceFeatureAttributes:a,format:i,includeTables:n,layout:p,layoutOptions:{authorText:t||"",copyrightText:r||"",customTextElements:o,titleText:h||""},outScale:d??0,scalePreserved:m});f&&(y.exportOptions.width=f),l&&(y.exportOptions.height=l),s&&(y.exportOptions.dpi=s),!c&&y.layoutOptions&&(y.layoutOptions.legendLayers=[]);const v=this.templateToNorthArrowInfo[p];if(v){!(v.visible===u)&&y.layoutOptions&&(y.layoutOptions.elementOverrides={[v.name]:{visible:u}})}return y}async _loadResources(e){let t=[];const{printServiceUrl:r}=this;if(!r){if(this.destroyed)return;const{portal:r}=this;try{await r.load(e)}catch(a){throw new o("print:could-not-load-portal","Cannot load print resource information from portal",{url:this.effectivePrintServiceUrl})}const s=r.helperServices?.printTask;s&&(this._set("effectivePrintServiceUrl",s.url),t=(s?.templates??[]).map((e=>D.fromJSON(e))))}t.length>0&&this.defaultTemplates.addMany(t);const s=this.effectivePrintServiceUrl?.toLowerCase().split("/");if(-1===(s?.indexOf("gpserver")??-1))throw new o("print:invalid-print-service-url","Can't fetch print templates information from provided URL",{url:this.effectivePrintServiceUrl});this._processLayoutTemplateInfos(await this._getLayoutTemplatesInfo(e)),await this._loadServiceDescription(e)}async _loadServiceDescription(e){const t=await this._getPrintTemplatesFromService(e);this._set("templatesInfo",t)}async _getLayoutTemplatesInfo(e){let t=[];const r=async t=>{const r=this.effectivePrintServiceUrl.replace(/(\/GPServer\/).+/i,`$1${encodeURI(t)}`);return(await d.execute(r,null,null,e)).results[0].value};try{t=await r("Get Layout Templates Info Task")}catch(o){}if(!t||t.length<1)try{t=await r("Get Layout Templates Info")}catch(o){}return t}_processLayoutTemplateInfos(e){const t={},r={};e.forEach((({layoutTemplate:e,layoutOptions:{customTextElements:o,mapSurroundInfos:s}})=>{const a=L.fromJSON(e);t[a]=o,s&&(r[a]=s.find((e=>"CIMMarkerNorthArrow"===e.type)))})),this._serviceTemplateCustomTextElements=Object.freeze(t),this.templateToNorthArrowInfo=r}async _getPrintTemplatesFromService(e){return t(this.effectivePrintServiceUrl,{...e,query:{f:"json"},timeout:this.printTimeout}).then((e=>{const t=e?.data,r=t?.parameters;let o=null,s=null;r.forEach((e=>{let t=e.choiceList?.slice(),r=-1;t?.length&&e.defaultValue&&(r=t.indexOf(e.defaultValue)),r>-1&&(t.splice(r,1),t.unshift(e.defaultValue));const a=(e,t)=>{const r="all"===t?e:e.filter((e=>t.includes(e)));return 0===r.length?e:r};if("Format"===e.name){const r=a(t.map(C.fromJSON),this.allowedFormats),s=C.fromJSON(e.defaultValue);o={defaultValue:r.includes(s)?s:r[0],choiceList:r}}else if("Layout_Template"===e.name){t=t.filter((e=>"map_only"!==e.toLowerCase()));let r,o=-1;t.some(((e,t)=>{const r=e.toLowerCase();return r.includes("letter")&&r.includes("landscape")?(o=t,!0):!(!r.includes("a4")||!r.includes("landscape"))&&(o=t,!1)})),o>0&&(r=t[o],t.splice(o,1),t.unshift(r));const i=a(t.map(L.fromJSON),this.allowedLayouts),l=L.fromJSON(e.defaultValue);s={defaultValue:i.includes(l)?l:i[0],choiceList:i}}})),this.error=null;return{format:o,layout:s}})).catch((e=>{throw new o("print:unavailable-service-info","Can't fetch templates info from service",{error:e})}))}};e.__decorate([i.property()],V.prototype,"_serviceTemplateCustomTextElements",void 0),e.__decorate([i.property()],V.prototype,"allowedFormats",void 0),e.__decorate([i.property()],V.prototype,"allowedLayouts",void 0),e.__decorate([i.property({type:F})],V.prototype,"defaultTemplates",void 0),e.__decorate([i.property()],V.prototype,"extraParameters",void 0),e.__decorate([i.property()],V.prototype,"includeDefaultTemplates",void 0),e.__decorate([i.property({readOnly:!0})],V.prototype,"effectivePrintServiceUrl",null),e.__decorate([i.property()],V.prototype,"effectiveTemplateCustomTextElements",null),e.__decorate([i.property()],V.prototype,"error",void 0),e.__decorate([i.property({type:u})],V.prototype,"portal",void 0),e.__decorate([i.property()],V.prototype,"printServiceUrl",void 0),e.__decorate([i.property()],V.prototype,"printTimeout",void 0),e.__decorate([i.property({readOnly:!0})],V.prototype,"state",null),e.__decorate([i.property({readOnly:!0})],V.prototype,"templatesInfo",void 0),e.__decorate([i.property()],V.prototype,"updateDelay",void 0),e.__decorate([i.property()],V.prototype,"view",void 0),e.__decorate([i.property()],V.prototype,"templateCustomTextElements",void 0),e.__decorate([i.property()],V.prototype,"templateToNorthArrowInfo",void 0),V=e.__decorate([n.subclass("esri.widgets.Print.PrintViewModel")],V);return V}));
