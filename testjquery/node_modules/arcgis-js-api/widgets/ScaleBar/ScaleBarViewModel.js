/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../geometry","../../core/Accessor","../../core/screenUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../geometry/support/geodesicUtils","../../geometry/support/normalizeUtils","../../geometry/support/spatialReferenceUtils","../../geometry/support/webMercatorUtils","../../geometry/SpatialReference","../../geometry/Polyline","../../geometry/Point"],(function(e,t,r,i,n,s,o,c,a,l,u,p,d,m,h,g,w){"use strict";function y(e){return e>.5?{min:.5,max:1}:e>.2?{min:.2,max:.5}:{min:.1,max:.2}}function f(e,t){switch(t){case"metric":return e>1e3?{distance:n.convertUnit(e,"meters","kilometers"),unit:"kilometer"}:e>1?{distance:e,unit:"meter"}:e>.01?{distance:n.convertUnit(e,"meters","centimeters"),unit:"centimeter"}:{distance:n.convertUnit(e,"meters","millimeters"),unit:"millimeter"};case"imperial":case"non-metric":return e>1609.344?{distance:n.convertUnit(e,"meters","miles"),unit:"mile"}:e>.3048?{distance:n.convertUnit(e,"meters","feet"),unit:"foot"}:{distance:n.convertUnit(e,"meters","inches"),unit:"inch"}}}function S(e){const{isWebMercator:t,wkt:r,wkt2:i}=e;return t||((i||r)?.includes("WGS_1984_Web_Mercator")??!1)}function v({state:{paddedViewState:e},spatialReference:t,width:r}){return t.isWrappable&&e.worldScreenWidth<r}function _(e,t){const{x:r,y:i}=e?m.webMercatorToGeographic(t,!0):t;return[r,i]}let U=class extends r{constructor(e){super(e),this.scaleComputedFrom=i.createScreenPoint(),this.view=null}get state(){return this.view?.ready&&"2d"===this.view?.type?"ready":"disabled"}getScaleBarProperties(e,t){if("disabled"===this.state||isNaN(e)||!t||!this.view)return null;const r=this._getDistanceInMeters();return null==r?null:this._getScaleBarProps(e,r,t)}_getDistanceInMeters(){const{state:e,spatialReference:t}=this.view;if(!d.isValid(t))return null;const{isGeographic:r}=t,i=S(t);if(!r&&!i){return e.extent.width*(n.getMetersPerUnit(t)??1)}const[s,o]=this._getScaleMeasuringPoints(),c=i||r&&!u.isSupported(t)?h.WGS84:t,a=new g({paths:[[_(i,s),_(i,o)]],spatialReference:c}),l=p.straightLineDensify(a,10);let m;try{[m]=u.geodesicLengths([l],"meters")}catch{return null}return m}_getScaleMeasuringPoints(){const e=this.view,{width:t,height:r,position:n,spatialReference:s}=e;if(v(e)){const e=d.getInfo(s),{valid:t}=e;return[new w(t[0],0,s),new w(t[1],0,s)]}let o=this.scaleComputedFrom.y-n[1];o>r?o=r:o<0&&(o=0);const c=i.createScreenPoint(0,o),a=i.createScreenPoint(t,o);return[e.toMap(c),e.toMap(a)]}_getScaleBarProps(e,t,r){const i=this.view,n=e*t/(v(i)?i.state.paddedViewState.worldScreenWidth:i.width);if(n<.001)return null;const s=f(n,r),{distance:o,unit:c}=s;let a=o,l=0;for(;a>=1;)a/=10,l++;const{min:u,max:p}=y(a),d=p/a>=a/u?u:p;return{length:e*(d/a),value:10**l*d,unit:c}}};e.__decorate([s.property()],U.prototype,"scaleComputedFrom",void 0),e.__decorate([s.property({readOnly:!0})],U.prototype,"state",null),e.__decorate([s.property()],U.prototype,"view",void 0),U=e.__decorate([l.subclass("esri.widgets.Scalebar.ScaleBarViewModel")],U);return U}));
