/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/asyncUtils","../../core/handleUtils","../../core/maybe","../../core/reactiveUtils","../../core/screenUtils","../../core/throttle","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass"],(function(e,t,o,a,i,r,d,s,n,c,l,h,p,u){"use strict";var w;!function(e){e.PointerMove="pointer-move",e.Main="main"}(w||(w={}));const T=300;e.ShadowTooltipViewModel=class extends o{constructor(e){super(e),this._screenPoint=null,this._accumulatedShadowTime=null,this._shadowTimeTask=null,this._updateAccumulatedShadowTime=(e,t)=>{this._shadowTimeTask=r.abortMaybe(this._shadowTimeTask),this._shadowTimeTask=a.createTask((async o=>{const{results:a,ground:i}=await e.hitTest(t);if(0===a.length&&!i.mapPoint)return void(this._accumulatedShadowTime=null);const r=await this.getDuration(t,o);this._accumulatedShadowTime=r}))},this._throttledUpdateAccumulatedShadowTime=n.throttle(this._updateAccumulatedShadowTime,T)}initialize(){this.addHandles(d.watch((()=>({enabled:this.enabled,view:this.view})),(({enabled:e,view:t})=>{e&&null!=t?this._startTracking(t):this._stopTracking()}),d.syncAndInitial))}get screenPoint(){return this.enabled?this._screenPoint:null}get accumulatedShadowTime(){return this.enabled?this._accumulatedShadowTime:null}get testData(){return{setThrottleDelay:e=>{this._throttledUpdateAccumulatedShadowTime.remove(),this._throttledUpdateAccumulatedShadowTime=n.throttle(this._updateAccumulatedShadowTime,e)}}}_startTracking(e){if(this.hasHandles(w.Main))return;const t=()=>{this.hasHandles(w.PointerMove)||this.addHandles(e.on("pointer-move",(t=>{const o=s.createScreenPoint(t.x,t.y);this._screenPoint=o,this._throttledUpdateAccumulatedShadowTime(e,o)})),w.PointerMove)},o=()=>{this.removeHandles(w.PointerMove),this._screenPoint=null,this._accumulatedShadowTime=null};this.addHandles([this._throttledUpdateAccumulatedShadowTime,e.on("pointer-enter",t),e.on("pointer-leave",o),e.on("pointer-down",o),e.on("pointer-drag",o),e.on("pointer-up",t),e.on("click",(t=>{const o=s.createScreenPoint(t.x,t.y);this._screenPoint=o,this._updateAccumulatedShadowTime(e,o)})),i.makeHandle((()=>{this._shadowTimeTask=r.abortMaybe(this._shadowTimeTask)}))],w.Main),t()}_stopTracking(){this.removeHandles(w.Main)}},t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"getDuration",void 0),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"view",void 0),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"enabled",void 0),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"screenPoint",null),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"accumulatedShadowTime",null),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"_screenPoint",void 0),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"_accumulatedShadowTime",void 0),t.__decorate([c.property()],e.ShadowTooltipViewModel.prototype,"_shadowTimeTask",void 0),e.ShadowTooltipViewModel=t.__decorate([u.subclass("esri.widgets.ShadowCast.ShadowTooltipViewModel")],e.ShadowTooltipViewModel),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
