/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../chunks/tslib.es6","../../core/Accessor","../../core/asyncUtils","../../core/Error","../../core/events","../../core/promiseUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../geometry/Point","../../layers/graphics/sources/support/uploadProgressWeights","../../layers/support/infoFor3D","../../support/progressUtils"],(function(e,r,o,t,s,l,a,i,n,p,c,d,u,h,y,f,_){"use strict";const g=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));r.Upload=class extends t{constructor(){super({}),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const e=this._uploadTask;return e&&0!==this.files.length?e.finished?e.error?"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(r){this.cancel(),this.files=[],this._layer=r,this._uploadTask=s.createTask((async o=>{const t=await T(r);i.throwIfAborted(o),this.progress=0,this.files=t;const s=_.makeProgressManager(y.uploadProgressWeights.upload,(e=>{this.progress=e}),"Upload.uploadTo");if(0===t.length)return null;const{default:a}=await new Promise(((r,o)=>e(["../../geometry/Mesh"],(e=>r(g(e))),o)));i.throwIfAborted(o);const n=await a.extractAndFilterFiles(t,r);i.throwIfAborted(o),n.length>0&&(this.files=n);const p=new h({x:0,y:0,z:0,spatialReference:r.spatialReference}),c=await a.createFromFiles(p,n,{layer:r,signal:o,onProgress:s.makeOnProgress("createFromFiles")});if(i.throwIfAborted(o),!c)throw new l("editor:upload","could not upload or convert model");const d=n.reduce(((e,r)=>e+r.size),0),u=s.simulate("loadMesh",_.estimatedTransferTime(d));try{await c.load()}finally{u.remove()}return c}))}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){this._uploadTask?.abort()}},o.__decorate([n.property()],r.Upload.prototype,"files",void 0),o.__decorate([n.property()],r.Upload.prototype,"progress",void 0),o.__decorate([n.property()],r.Upload.prototype,"state",null),o.__decorate([n.property()],r.Upload.prototype,"result",null),o.__decorate([n.property()],r.Upload.prototype,"error",null),o.__decorate([n.property()],r.Upload.prototype,"_uploadTask",void 0),o.__decorate([n.property()],r.Upload.prototype,"_layer",void 0),r.Upload=o.__decorate([u.subclass("esri.widgets.Editor.Upload")],r.Upload);let m=null;async function T(e){const{resolve:r,promise:o}=i.createResolver(),t=document.createElement("input");t.type="file",t.multiple=!1,t.accept=[...f.getSupportedExtensions(e.infoFor3D),".zip"].join(","),t.style.display="none",document.body.appendChild(t);const s=a.on(t,"change",(()=>r(t.files?Array.from(t.files):[])));return m?m(t):t.click(),o.finally((()=>{s.remove(),t.remove()}))}function v(e){m=r=>{Promise.resolve().then((()=>e)).then((e=>{if(!m)return;const o=new DataTransfer;e.forEach((e=>o.items.add(e))),r.files=o.files,r.dispatchEvent(new Event("change"))}))}}function b(){m=null}r.clearPromptForFilesStub=b,r.stubFilePickerToSelect=v,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
