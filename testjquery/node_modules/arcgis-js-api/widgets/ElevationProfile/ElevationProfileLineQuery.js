/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../Color","../../core/handleUtils","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","./ElevationProfileLine","./support/elevationQuerySourceUtils"],(function(e,r,o,t,s,i,l,a,n,u,c){"use strict";let p=class extends u{constructor(e){super(e),this.type="query",this.color=new r("#db334a"),this.viewVisualizationEnabled=!0,this.source=null,this.numSamplesForPreview=50,this.numSamplesPerChunk=500}get minDemResolution(){return c.getQuerySourceMinDemResolution(this.source)}get available(){const e=this.source;return!!e&&(null==e.visible||e.visible)&&(null==e.layers||e.layers.some((e=>e.visible)))}queryElevation(e,r){if(!this.source)throw new Error("No source configured for the elevation profile line");return this.source.queryElevation(e,r)}attach(e){return o.handlesGroup([super.attach(e),t.watch((()=>this.source),(()=>this._onChange()),t.sync)])}};e.__decorate([s.property({type:r,nonNullable:!0})],p.prototype,"color",void 0),e.__decorate([s.property()],p.prototype,"viewVisualizationEnabled",void 0),e.__decorate([s.property()],p.prototype,"source",void 0),e.__decorate([s.property({readOnly:!0})],p.prototype,"minDemResolution",null),e.__decorate([s.property()],p.prototype,"available",null),p=e.__decorate([n.subclass("esri.widgets.ElevationProfile.ElevationProfileLineQuery")],p);return p}));
