/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../core/arrayUtils","../core/jsonMap","../core/JSONSupport","../core/unitUtils","../core/Warning","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer"],(function(e,t,r,i,o,s,n,a,c,l,d,h){"use strict";var u;const p=r.strict()({orthometric:"gravity-related-height",gravity_related_height:"gravity-related-height",ellipsoidal:"ellipsoidal"}),g=p.jsonValues.slice();t.removeUnordered(g,"orthometric");const y=r.strict()({meter:"meters",foot:"feet","us-foot":"us-feet","clarke-foot":"clarke-feet","clarke-yard":"clarke-yards","clarke-link":"clarke-links","sears-yard":"sears-yards","sears-foot":"sears-feet","sears-chain":"sears-chains","benoit-1895-b-chain":"benoit-1895-b-chains","indian-yard":"indian-yards","indian-1937-yard":"indian-1937-yards","gold-coast-foot":"gold-coast-feet","sears-1922-truncated-chain":"sears-1922-truncated-chains","50-kilometers":"50-kilometers","150-kilometers":"150-kilometers"});let S=u=class extends i.JSONSupport{constructor(e){super(e),this.heightModel="gravity-related-height",this.heightUnit="meters",this.vertCRS=null}writeHeightModel(e,t,r){return p.write(e,t,r)}readHeightModel(e,t,r){const i=p.read(e);return i||(r?.messages&&r.messages.push(w(e,{context:r})),null)}readHeightUnit(e,t,r){const i=y.read(e);return i||(r?.messages&&r.messages.push(v(e,{context:r})),null)}readHeightUnitService(e,t,r){const i=o.unitFromRESTJSON(e)||y.read(e);return i||(r?.messages&&r.messages.push(v(e,{context:r})),null)}readVertCRS(e,t){return t.vertCRS||t.ellipsoid||t.geoid}clone(){return new u({heightModel:this.heightModel,heightUnit:this.heightUnit,vertCRS:this.vertCRS})}equals(e){return!!e&&(this===e||this.heightModel===e.heightModel&&this.heightUnit===e.heightUnit&&this.vertCRS===e.vertCRS)}static deriveUnitFromSR(e,t){const r=o.getVerticalUnitStringForSR(t);return new u({heightModel:e.heightModel,heightUnit:r,vertCRS:e.vertCRS})}write(e,t){return t={origin:"web-scene",...t},super.write(e,t)}static fromJSON(e){if(!e)return null;const t=new u;return t.read(e,{origin:"web-scene"}),t}};function v(e,t){return new s("height-unit:unsupported",`Height unit of value '${e}' is not supported`,t)}function w(e,t){return new s("height-model:unsupported",`Height model of value '${e}' is not supported`,t)}e.__decorate([n.property({type:p.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:g,default:"ellipsoidal"}}}})],S.prototype,"heightModel",void 0),e.__decorate([h.writer("web-scene","heightModel")],S.prototype,"writeHeightModel",null),e.__decorate([l.reader(["web-scene","service"],"heightModel")],S.prototype,"readHeightModel",null),e.__decorate([n.property({type:y.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:y.jsonValues,write:y.write}}}})],S.prototype,"heightUnit",void 0),e.__decorate([l.reader("web-scene","heightUnit")],S.prototype,"readHeightUnit",null),e.__decorate([l.reader("service","heightUnit")],S.prototype,"readHeightUnitService",null),e.__decorate([n.property({type:String,constructOnly:!0,json:{origins:{"web-scene":{write:!0}}}})],S.prototype,"vertCRS",void 0),e.__decorate([l.reader("service","vertCRS",["vertCRS","ellipsoid","geoid"])],S.prototype,"readVertCRS",null),S=u=e.__decorate([d.subclass("esri.geometry.HeightModelInfo")],S);return S}));
