/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../core/JSONSupport","./aaBoundingRect","./boundsUtils","./coordsUtils","./jsonUtils","./normalizeUtilsCommon","./spatialReferenceUtils"],(function(t,i,n,s,e,h,o,u){"use strict";function r(t){return x(t,!0)}function l(t){return x(t,!1)}function x(t,n){if(null==t)return null;const e=t.spatialReference,r=u.getInfo(e),l=i.isSerializable(t)?t.toJSON():t;if(!r)return l;const x=u.isWebMercator(e)?102100:4326,a=o.cutParams[x].maxX,c=o.cutParams[x].minX;if(h.isPoint(l))return _(l,a,c);if(h.isMultipoint(l))return l.points=l.points.map((t=>_(t,a,c))),l;if(h.isExtent(l))return m(l,r);if(h.isPolygon(l)||h.isPolyline(l)){const t=s.getBoundsXY(g,l),i={xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3]},e=o.offsetMagnitude(i.xmin,c)*(2*a),h=0===e?l:o.updatePolyGeometry(l,e);return i.xmin+=e,i.xmax+=e,i.xmax>a?d(h,a,n):i.xmin<c?d(h,c,n):h}return l}function m(t,i){if(!i)return t;const n=a(t,i).map((t=>t.extent));return n.length<2?n[0]||t:n.length>2?(t.xmin=i.valid[0],t.xmax=i.valid[1],t):{rings:n.map((t=>[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]))}}function _(t,i,n){if(Array.isArray(t)){const s=t[0];if(s>i){const n=o.offsetMagnitude(s,i);t[0]=s+n*(-2*i)}else if(s<n){const i=o.offsetMagnitude(s,n);t[0]=s+i*(-2*n)}}else{const s=t.x;if(s>i){const n=o.offsetMagnitude(s,i);t.x+=n*(-2*i)}else if(s<n){const i=o.offsetMagnitude(s,n);t.x+=i*(-2*n)}}return t}function a(t,i){const n=[],{ymin:s,ymax:e,xmin:h,xmax:o}=t,u=t.xmax-t.xmin,[r,l]=i.valid,{x,frameId:m}=c(t.xmin,i),{x:_,frameId:a}=c(t.xmax,i),f=x===_&&u>0;if(u>2*l){const t={xmin:h<o?x:_,ymin:s,xmax:l,ymax:e},i={xmin:r,ymin:s,xmax:h<o?_:x,ymax:e},u={xmin:0,ymin:s,xmax:l,ymax:e},c={xmin:r,ymin:s,xmax:0,ymax:e},f=[],d=[];p(t,u)&&f.push(m),p(t,c)&&d.push(m),p(i,u)&&f.push(a),p(i,c)&&d.push(a);for(let n=m+1;n<a;n++)f.push(n),d.push(n);n.push(new y(t,[m]),new y(i,[a]),new y(u,f),new y(c,d))}else x>_||f?n.push(new y({xmin:x,ymin:s,xmax:l,ymax:e},[m]),new y({xmin:r,ymin:s,xmax:_,ymax:e},[a])):n.push(new y({xmin:x,ymin:s,xmax:_,ymax:e},[m]));return n}function c(t,i){const[n,s]=i.valid,e=2*s;let h,o=0;return t>s?(h=Math.ceil(Math.abs(t-s)/e),t-=h*e,o=h):t<n&&(h=Math.ceil(Math.abs(t-n)/e),t+=h*e,o=-h),{x:t,frameId:o}}function p(t,i){const{xmin:n,ymin:s,xmax:e,ymax:h}=i;return f(t,n,s)&&f(t,n,h)&&f(t,e,h)&&f(t,e,s)}function f(t,i,n){return i>=t.xmin&&i<=t.xmax&&n>=t.ymin&&n<=t.ymax}function d(t,i,n=!0){const s=!h.isPolyline(t);if(s&&e.closeRings(t),n){return(new P).cut(t,i)}const o=s?t.rings:t.paths,u=s?4:2,r=o.length,l=-2*i;for(let e=0;e<r;e++){const t=o[e];if(t&&t.length>=u){const i=[];for(const n of t)i.push([n[0]+l,n[1]]);o.push(i)}}return s?t.rings=o:t.paths=o,t}class y{constructor(t,i){this.extent=t,this.frameIds=i}}const g=n.create();class P{constructor(){this._linesIn=[],this._linesOut=[]}cut(t,i){let n;if(this._xCut=i,t.rings)this._closed=!0,n=t.rings,this._minPts=4;else{if(!t.paths)return null;this._closed=!1,n=t.paths,this._minPts=2}for(const e of n){if(!e||e.length<this._minPts)continue;let t=!0;for(const i of e)t?(this.moveTo(i),t=!1):this.lineTo(i);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),n=[];for(const e of this._linesIn)e&&e.length>=this._minPts&&n.push(e);const s=-2*this._xCut;for(const e of this._linesOut)if(e&&e.length>=this._minPts){for(const t of e)t[0]+=s;n.push(e)}return this._closed?t.rings=n:t.paths=n,t}moveTo(t){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(t[0]),this._moveTo(t[0],t[1],this._prevSide),this._prevPt=t,this._firstPt=t}lineTo(t){const i=this._side(t[0]);if(i*this._prevSide==-1){const n=this._intersect(this._prevPt,t);this._lineTo(this._xCut,n,0),this._prevSide=0,this._lineTo(t[0],t[1],i)}else this._lineTo(t[0],t[1],i);this._prevSide=i,this._prevPt=t}close(){const t=this._firstPt,i=this._prevPt;t[0]===i[0]&&t[1]===i[1]||this.lineTo(t),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(t,i,n){this._closed?(this._lineIn.push([n<=0?t:this._xCut,i]),this._lineOut.push([n>=0?t:this._xCut,i])):(n<=0&&this._lineIn.push([t,i]),n>=0&&this._lineOut.push([t,i]))}_lineTo(t,i,n){this._closed?(this._addPolyVertex(this._lineIn,n<=0?t:this._xCut,i),this._addPolyVertex(this._lineOut,n>=0?t:this._xCut,i)):n<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([t,i])):n>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([t,i])):this._prevSide<0?(this._lineIn.push([t,i]),this._lineOut.push([t,i])):this._prevSide>0&&(this._lineOut.push([t,i]),this._lineIn.push([t,i]))}_addPolyVertex(t,i,n){const s=t.length;s>1&&t[s-1][0]===i&&t[s-2][0]===i?t[s-1][1]=n:t.push([i,n])}_checkClosingPt(t){const i=t.length;i>3&&t[0][0]===this._xCut&&t[i-2][0]===this._xCut&&t[1][0]===this._xCut&&(t[0][1]=t[i-2][1],t.pop())}_side(t){return t<this._xCut?-1:t>this._xCut?1:0}_intersect(t,i){const n=(this._xCut-t[0])/(i[0]-t[0]);return t[1]+n*(i[1]-t[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}t.CutVertical=P,t.normalizeCentralMeridianForDisplay=l,t.normalizeCentralMeridianSync=r,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
