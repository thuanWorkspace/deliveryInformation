/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../../assets","../../../request","../../../core/Error","../../../core/has","../../../core/promiseUtils","../../../core/urlUtils","../../Point","../../../views/3d/webgl-engine/lib/basicInterfaces"],(function(e,t,s,r,n,o,i,a,l,c){"use strict";async function u(t,s,r){const{source:n}=s,{loadGLTFMesh:o}=await i.whenOrAbort(new Promise(((t,s)=>e(["./loadGLTFMesh"],t,s))),r),a=await m(n,r);i.throwIfAborted(r);const c=o(new l({x:0,y:0,z:0,spatialReference:t.spatialReference}),a.url,{resolveFile:f(a),requestFile:void 0,useTransform:!0,signal:r?.signal,expectedType:a.type});c.then((()=>a.dispose()),(()=>a.dispose()));const{vertexAttributes:u,components:p}=await c;t.vertexAttributes=u,t.components=p}function f(e){const t=a.removeFile(e.url);return s=>{const r=a.makeRelative(s,t,t),n=r?r.replace(/^ *\.\//,""):null;return(n?e.files.get(n):null)??s}}async function m(e,t){if(Array.isArray(e)){if(!e.length)throw new n("mesh-load-external:missing-assets","There must be at least one file to load");return e[0]instanceof File?b(e):h(e,t)}return d(e)}async function p(e,t){const{parts:s,assetMimeType:r,assetName:n}=e;if(1===s.length)return new A(s[0].partUrl);const o=await e.toBlob(t);return i.throwIfAborted(t),A.fromBlob(o,x(n,r))}function d(e){return A.fromBlob(e,x(e.name,e.type))}function b(e){return T(e.map((e=>({name:e.name,mimeType:e.type,source:d(e)}))))}async function h(e,t){const s=await i.allSettledValues(e.map((async e=>{const s=await p(e);return i.throwIfAborted(t),{name:e.assetName,mimeType:e.assetMimeType,source:s}})));if(i.isAborted(t))throw s.forEach((e=>e.source.dispose())),i.createAbortError();return T(s)}const w=/^model\/gltf\+json$/,y=/^model\/gltf-binary$/,g=/\.gltf$/i,v=/\.glb$/i;function T(e){const t=new Map;let s,r=null;for(const{name:n,mimeType:o,source:i}of e)null===r&&(w.test(o)||g.test(n)?(r=i.url,s="gltf"):(y.test(o)||v.test(n))&&(r=i.url,s="glb")),t.set(n,i.url),i.files.forEach(((e,s)=>t.set(s,e)));if(null==r)throw new n("mesh-load-external:missing-files","Missing files to load external mesh source");return new A(r,(()=>e.forEach((({source:e})=>e.dispose()))),t,s)}class A{constructor(e,t=(()=>{}),s=new Map,r){this.url=e,this.dispose=t,this.files=s,this.type=r}static fromBlob(e,t){const s=URL.createObjectURL(e);return new A(s,(()=>URL.revokeObjectURL(s)),void 0,t)}}function x(e,t){return w.test(t)||g.test(e)?"gltf":y.test(t)||g.test(e)?"glb":void 0}t.loadExternal=u,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
