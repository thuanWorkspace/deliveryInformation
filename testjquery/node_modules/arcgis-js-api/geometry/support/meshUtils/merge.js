/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../core/Logger","../../../chunks/vec3","../../../chunks/vec3f64","../MeshComponent","../MeshTransform","../MeshVertexAttributes","./georeference"],(function(e,t,n,r,o,i,s,l){"use strict";const a=t.getLogger("esri.geometry.support.triangleMeshMerge");function c(e,t){if(0===e.length)return a.error("merge()","Must specify one more geometries to merge"),null;const n=e[0].spatialReference;for(const u of e){if(!u.spatialReference.equals(n))return a.error("merge()","Geometries must all be in the same spatial reference"),null;if(!u.loaded)return a.error("merge()","Geometries must all be loaded before merging"),null}const r=u(e);if(null==r)return null;const o=x(e),i=[],s={position:0,uv:0,normal:0,tangent:0,color:0},l=new Map,c=new Map;for(const a of e){const e=f(a,r);if(t&&t.reuseMaterials&&a.components)for(const t of a.components)t.material&&l.set(t.material,t.material);m(a,s,l,c,i),v("position",e,o,s,0),v("normal",e,o,s,0),v("tangent",e,o,s,0),v("uv",a.vertexAttributes,o,s,0),v("color",a.vertexAttributes,o,s,255)}return{vertexAttributes:o,components:i,vertexSpace:r.vertexSpace,transform:r.transform,spatialReference:n}}function u(e){let t=null,o=null,s=!0,l=!0,c=null;const u=r.create();let f=0;for(const r of e){const{vertexSpace:e,transform:i}=r;if(null==o&&(o=e,o.isRelative&&(c=o.origin)),o.type!==e.type)return a.error("merge()",`Inconsistent mesh vertex space for provided geometries. One was ${o.type} while another is ${e.type}. Unable to merge geometries.`),null;if(null==t||null!=i&&i.equals(t)||(s=!1),null!=i&&null==t&&(t=i),e.isRelative){const{origin:t}=e;c&&!n.equals(t,c)&&(l=!1),f++,n.add(u,u,e.origin)}}if(null==o)throw new Error;const p=o.clone();if(!p.isRelative)return{transform:null,vertexSpace:p,rebake:!1};if(l&&s)return{transform:t?.clone(),vertexSpace:p,rebake:!1};const g=n.scale(u,u,1/f);return p.origin=g,{transform:new i,vertexSpace:p,rebake:!0}}function f(e,t){if(!t.rebake)return e.vertexAttributes;const n=e.vertexSpace,r=t.vertexSpace;if(n.type!==r.type)throw new Error;const o=l.georeferenceApplyTransform(e.vertexAttributes,n,e.transform,e.spatialReference);return l.ungeoreference(o,r.getOriginPoint(e.spatialReference),{geographic:!r.isGeoreferenced})}function p(e,t){return t.normal>0&&!e.vertexAttributes.normal}function g(e,t,n){p(e,t)&&"source"===n.shading&&(n.shading="flat")}function m(e,t,n,r,i){if(e.components)for(const o of e.components){const s=o.cloneWithDeduplication(n,r),l=t.position/3;if(s.faces)for(let e=0;e<s.faces.length;e++)s.faces[e]+=l;else{s.faces=new Uint32Array(e.vertexAttributes.position.length/3);for(let e=0;e<s.faces.length;e++)s.faces[e]=e+l}g(e,t,s),i.push(s)}else if(e.vertexAttributes&&e.vertexAttributes.position){const n=e.vertexAttributes.position.length/3,r=new Uint32Array(n),s=t.position/3;for(let e=0;e<n;e++)r[e]=e+s;const l=new o({faces:r});g(e,t,l),i.push(l)}}function v(e,t,n,r,o){if(!t)return;const i=t.position;if(!i)return;const s=t[e],l=n[e];if(null==s){let t=r[e];const n=A[e];if(null!=l){for(let e=0;e<i.length;e+=3)for(let r=0;r<n;r++)l[t++]=o;r[e]=t}}else null!=l&&null!=s&&(h(s,0,l,r[e],s.length),r[e]+=s.length)}function h(e,t,n,r,o){for(let i=0;i<o;i++)n[r++]=e[t++];return n}function b(e){let t=!1,n=!1,r=!1,o=!1;for(const i of e){const e=i.vertexAttributes;if(e?.position&&(e.uv&&(t=!0),e.normal&&(n=!0),e.tangent&&(o=!0),e.color&&(r=!0),n&&t&&r&&o))break}return{normal:n,uv:t,color:r,tangent:o}}function x(e){let t=0,n=0,r=0,o=0,i=0;const l=b(e);for(const s of e){const e=s.vertexAttributes;e?.position&&(t+=e.position.length,l.uv&&(n+=e.position.length/A.position*A.uv),l.normal&&(r+=e.position.length/A.position*A.normal),l.color&&(o+=e.position.length/A.position*A.color),l.tangent&&(i+=e.position.length/A.position*A.tangent))}return new s.MeshVertexAttributes({position:new Float64Array(t),uv:n?new Float32Array(n):null,normal:r?new Float32Array(r):null,tangent:i?new Float32Array(i):null,color:o?new Uint8Array(o):null})}const A={position:3,normal:3,tangent:4,uv:2,color:4};e.merge=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
