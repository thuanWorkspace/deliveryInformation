/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Clonable","../../../core/Collection","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","./External"],(function(e,t,r,o,s,a,i,l,c,p,u){"use strict";e.Metadata=class extends r.Clonable{constructor(){super(),this.externalSources=new o,this._explicitDisplaySource=null,this.addHandles(s.on((()=>this.externalSources),"after-remove",(({item:e})=>{e===this._explicitDisplaySource&&(this._explicitDisplaySource=null)}),{sync:!0,onListenerRemove:()=>this._explicitDisplaySource=null}))}get displaySource(){return this._explicitDisplaySource??this._implicitDisplaySource}set displaySource(e){if(null!=e&&!u.isDisplayExternal(e))throw new Error("Cannot use this source for display: it is not in a supported format.");this._explicitDisplaySource=e,e&&this.externalSources.every((t=>!u.externalSourcesAreEqual(t,e)))&&this.externalSources.add(e)}clearSources(){this.externalSources.removeAll()}getExternalSourcesOnService(e){return this.externalSources.items.filter((t=>u.externalIsOnService(t,e)))}get _implicitDisplaySource(){return this.externalSources.find(u.isDisplayExternal)}},t.__decorate([a.property()],e.Metadata.prototype,"externalSources",void 0),t.__decorate([a.property()],e.Metadata.prototype,"displaySource",null),t.__decorate([a.property()],e.Metadata.prototype,"_implicitDisplaySource",null),t.__decorate([a.property()],e.Metadata.prototype,"_explicitDisplaySource",void 0),e.Metadata=t.__decorate([p.subclass("esri.geometry.support.meshUtils.Metadata")],e.Metadata),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
