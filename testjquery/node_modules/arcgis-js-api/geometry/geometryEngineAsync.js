/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../geometry","../core/workers/workers","./Point","./support/jsonUtils"],(function(n,e,t,r,i){"use strict";function a(n){return Array.isArray(n)?n[0]?.spatialReference:n?.spatialReference}function c(n){return n?Array.isArray(n)?n.map(c):n.toJSON?n.toJSON():n:n}function o(n){return Array.isArray(n)?n.map((n=>i.fromJSON(n))):i.fromJSON(n)}function u(n,e){let t;return Array.isArray(n)?t=n:(t=[],t.push(n),null!=e&&t.push(e)),t}let s;async function f(){return s||(s=t.open("geometryEngineWorker",{strategy:"distributed"})),s}async function l(n,e){return(await f()).invoke("executeGEOperation",{operation:n,parameters:c(e)})}async function p(n,e){const t=await f();return Promise.all(t.broadcast("executeGEOperation",{operation:n,parameters:c(e)}))}function y(n){return l("extendedSpatialReferenceInfo",[n])}async function w(n,e){return o(await l("clip",[a(n),n,e]))}async function d(n,e){return o(await l("cut",[a(n),n,e]))}function m(n,e){return l("contains",[a(n),n,e])}function g(n,e){return l("crosses",[a(n),n,e])}function S(n,e,t){return l("distance",[a(n),n,e,t])}function h(n,e){return l("equals",[a(n),n,e])}function x(n,e){return l("intersects",[a(n),n,e])}function R(n,e){return l("touches",[a(n),n,e])}function A(n,e){return l("within",[a(n),n,e])}function O(n,e){return l("disjoint",[a(n),n,e])}function J(n,e){return l("overlaps",[a(n),n,e])}function N(n,e,t){return l("relate",[a(n),n,e,t])}function D(n){return l("isSimple",[a(n),n])}async function T(n){return o(await l("simplify",[a(n),n]))}async function b(n,e=!1){return o(await l("convexHull",[a(n),n,e]))}async function v(n,e){return o(await l("difference",[a(n),n,e]))}async function L(n,e){return o(await l("symmetricDifference",[a(n),n,e]))}async function V(n,e){return o(await l("intersect",[a(n),n,e]))}async function E(n,e=null){const t=u(n,e);return o(await l("union",[a(t),t]))}async function P(n,e,t,r,i,c){return o(await l("offset",[a(n),n,e,t,r,i,c]))}async function j(n,e,t,r=!1){const i=[a(n),n,e,t,r];return o(await l("buffer",i))}async function k(n,e,t,r,i,c){const u=[a(n),n,e,t,r,i,c];return o(await l("geodesicBuffer",u))}async function z(n,e,t=!0){const i=await l("nearestCoordinate",[a(n),n,e,t]);return{...i,coordinate:r.fromJSON(i.coordinate)}}async function H(n,e){const t=await l("nearestVertex",[a(n),n,e]);return{...t,coordinate:r.fromJSON(t.coordinate)}}async function I(n,e,t,i){return(await l("nearestVertices",[a(n),n,e,t,i])).map((n=>({...n,coordinate:r.fromJSON(n.coordinate)})))}function q(n){return"xmin"in n?n.center:"x"in n?n:n.extent?.center}async function B(n,e,t){if(null==n)throw new _;const r=n.spatialReference;if(null==(t=t??q(n)))throw new _;const i=n.constructor.fromJSON(await l("rotate",[r,n,e,t]));return i.spatialReference=r,i}async function C(n,e){if(null==n)throw new _;const t=n.spatialReference;if(null==(e=e??q(n)))throw new _;const r=n.constructor.fromJSON(await l("flipHorizontal",[t,n,e]));return r.spatialReference=t,r}async function G(n,e){if(null==n)throw new _;const t=n.spatialReference;if(null==(e=e??q(n)))throw new _;const r=n.constructor.fromJSON(await l("flipVertical",[t,n,e]));return r.spatialReference=t,r}async function M(n,e,t,r){return o(await l("generalize",[a(n),n,e,t,r]))}async function U(n,e,t){return o(await l("densify",[a(n),n,e,t]))}async function W(n,e,t,r=0){return o(await l("geodesicDensify",[a(n),n,e,t,r]))}function F(n,e){return l("planarArea",[a(n),n,e])}function K(n,e){return l("planarLength",[a(n),n,e])}function Q(n,e,t){return l("geodesicArea",[a(n),n,e,t])}function X(n,e,t){return l("geodesicLength",[a(n),n,e,t])}async function Y(n,e){return o(await l("intersectLinesToPoints",[a(n),n,e]))}async function Z(n,e){await p("changeDefaultSpatialReferenceTolerance",[n,e])}async function $(n){await p("clearDefaultSpatialReferenceTolerance",[n])}class _ extends Error{constructor(){super("Illegal Argument Exception")}}n.buffer=j,n.changeDefaultSpatialReferenceTolerance=Z,n.clearDefaultSpatialReferenceTolerance=$,n.clip=w,n.contains=m,n.convexHull=b,n.crosses=g,n.cut=d,n.densify=U,n.difference=v,n.disjoint=O,n.distance=S,n.equals=h,n.extendedSpatialReferenceInfo=y,n.flipHorizontal=C,n.flipVertical=G,n.generalize=M,n.geodesicArea=Q,n.geodesicBuffer=k,n.geodesicDensify=W,n.geodesicLength=X,n.intersect=V,n.intersectLinesToPoints=Y,n.intersects=x,n.isSimple=D,n.nearestCoordinate=z,n.nearestVertex=H,n.nearestVertices=I,n.offset=P,n.overlaps=J,n.planarArea=F,n.planarLength=K,n.relate=N,n.rotate=B,n.simplify=T,n.symmetricDifference=L,n.touches=R,n.union=E,n.within=A,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})}));
