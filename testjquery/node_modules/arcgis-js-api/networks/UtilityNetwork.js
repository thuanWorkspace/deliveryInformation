/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass","../layers/FeatureLayer","../layers/support/featureQueryAll","./Network","./RulesTable","./support/NamedTraceConfiguration","./support/NetworkSystemLayers","./support/TerminalConfiguration","./support/TraceJobInfo","./support/typeUtils","../rest/support/Query"],(function(e,t,r,s,a,o,n,i,u,l,d,c,m,y,p,f,T){"use strict";const h=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));let g=class extends l{constructor(e){super(e),this.sharedNamedTraceConfigurations=[],this.type="utility"}get serviceTerritoryFeatureLayerId(){return this.dataElement?.serviceTerritoryFeatureLayerId??null}get networkSystemLayers(){return new m({rulesTableId:this.sourceJSON?.systemLayers.rulesTableId,rulesTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.rulesTableId}`:null,subnetworksTableId:this.sourceJSON?.systemLayers.subnetworksTableId,subnetworksTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.subnetworksTableId}`:null,dirtyAreasLayerId:this.sourceJSON?.systemLayers.dirtyAreasLayerId,dirtyAreasLayerUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.dirtyAreasLayerId}`:null})}get terminalConfigurations(){return this.dataElement?.terminalConfigurations.map((e=>y.fromJSON(e)))||[]}get domainNetworkNames(){return this.dataElement?.domainNetworks.map((e=>e.domainNetworkName))||[]}get _utilityLayerList(){const e=new Set;return this.dataElement?.domainNetworks?.map((t=>{t.edgeSources.map((t=>{e.add(t.layerId)})),t.junctionSources.map((t=>{e.add(t.layerId)}))})),e}async load(e){return this.addResolvingPromise(super.load(e)),this.addResolvingPromise(this._loadNamedTraceConfigurationsFromNetwork(e)),this}getTerminalConfiguration(e){let t=null,r=null;const s=e.layer;let a=null;if("feature"===s?.type){if(a=s.layerId,null===a)return null}else{if("subtype-sublayer"!==s?.type)return null;if(a=s?.parent?.layerId??null,null===a)return null}const o=e.attributes;if(null==o)return null;for(const u of Object.keys(o))"ASSETGROUP"===u.toUpperCase()&&(t=e.getAttribute(u)),"ASSETTYPE"===u.toUpperCase()&&(r=e.getAttribute(u));if(!this.dataElement)return null;let n=null;const i=this.dataElement.domainNetworks;for(const u of i){const e=u.junctionSources?.find((e=>e.layerId===a));if(e){const s=e.assetGroups?.find((e=>e.assetGroupCode===t));if(s){const e=s.assetTypes?.find((e=>e.assetTypeCode===r));if(e){n=e.terminalConfigurationId;break}}}}if(null!=n){const e=this.dataElement.terminalConfigurations,t=e?.find((e=>e.terminalConfigurationId===n));return t?y.fromJSON(t):null}return null}getTierNames(e){const t=this.dataElement?.domainNetworks.find((t=>t.domainNetworkName===e));return t?.tiers.map((e=>e.name))||[]}async getRulesTable(){return this._sharedRulesTable||(this._sharedRulesTable=this._createRulesTable()),await this._sharedRulesTable}isUtilityLayer(e){return this._utilityLayerList.has(e.layerId)}async queryAssociations(t){const[{queryAssociations:r},{default:s}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/queryAssociations"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/QueryAssociationsParameters"],(e=>t(h(e))),r)))]),a=s.from(t);a.gdbVersion=this.gdbVersion,a.moment=this.historicMoment;return(await r(this.networkServiceUrl,a)).associations}async synthesizeAssociationGeometries(t){const[{synthesizeAssociationGeometries:r},{default:s}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/synthesizeAssociationGeometries"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/SynthesizeAssociationGeometriesParameters"],(e=>t(h(e))),r)))]),a=s.from(t);return a.gdbVersion=this.gdbVersion,a.moment=this.historicMoment,r(this.networkServiceUrl,a)}async trace(t){const[{trace:r},{default:s}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/trace"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/TraceParameters"],(e=>t(h(e))),r)))]),a=s.from(t);return a.gdbVersion=this.gdbVersion,a.moment=this.historicMoment,r(this.networkServiceUrl,a)}async submitTraceJob(t){const[{submitTraceJob:r},{default:s}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/trace"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/TraceParameters"],(e=>t(h(e))),r)))]),a=s.from(t);a.gdbVersion=this.gdbVersion,a.moment=this.historicMoment;const o=await r(this.networkServiceUrl,a);return new p({statusUrl:o})}async _loadNamedTraceConfigurationsFromNetwork(e){if(0===this.sharedNamedTraceConfigurations?.length)return;const t=this.sharedNamedTraceConfigurations.map((e=>e.globalId)),r=await this.queryNamedTraceConfigurations({globalIds:t},e);for(const s of this.sharedNamedTraceConfigurations){const e=r?.find((e=>e.globalId===s.globalId));if(e){const t=e.write({},{origin:"service"});s.read(t,{origin:"service"})}}}async _createRulesTable(){const e=this.networkSystemLayers.rulesTableUrl,t=new i({url:e});await t.load();const r=this.dataElement?.domainNetworks;if(!r)return null;const s=r.flatMap((e=>[...e.edgeSources,...e.junctionSources])),a=(await this._queryRulesTable(t)).map((e=>this._hydrateRuleInfo(t,s,e)));return new d({layer:t,rules:a})}async _queryRulesTable(e){const t=new T({where:"1=1",outFields:["*"]});return(await u.queryAllJSON(e,t)).features}_hydrateRuleInfo(e,t,r){const s=e.fieldsIndex,a=s.get("RULETYPE"),o=s.get("CREATIONDATE"),n=s.get("FROMNETWORKSOURCEID"),i=s.get("FROMASSETGROUP"),u=s.get("FROMASSETTYPE"),l=s.get("FROMTERMINALID"),d=s.get("TONETWORKSOURCEID"),c=s.get("TOASSETGROUP"),m=s.get("TOASSETTYPE"),y=s.get("TOTERMINALID"),p=s.get("VIANETWORKSOURCEID"),T=s.get("VIAASSETGROUP"),h=s.get("VIAASSETTYPE"),g=s.get("VIATERMINALID"),w=r.attributes[a.name],b=new Date(r.attributes[o.name]),I=[{networkSourceId:r.attributes[n.name],assetGroupId:r.attributes[i.name],assetTypeId:r.attributes[u.name],terminalId:r.attributes[l.name]},{networkSourceId:r.attributes[d.name],assetGroupId:r.attributes[c.name],assetTypeId:r.attributes[m.name],terminalId:r.attributes[y.name]},{networkSourceId:r.attributes[p.name],assetGroupId:r.attributes[T.name],assetTypeId:r.attributes[h.name],terminalId:r.attributes[g.name]}];let S;!function(e){e[e.from=0]="from",e[e.to=1]="to",e[e.via=2]="via"}(S||(S={}));const N={ruleType:w,creationDate:b};for(const k of[S.from,S.to,S.via]){if(w!==f.RuleType.RTEdgeJunctionEdgeConnectivity&&k===S.via)continue;const e=I[k],r=t.find((t=>t.sourceId===e.networkSourceId)),s=r?.assetGroups.find((t=>t.assetGroupCode===e.assetGroupId)),a=s?.assetTypes.find((t=>t.assetTypeCode===e.assetTypeId));let o=this._getTerminal(w,a,e);w!==f.RuleType.RTContainment&&w!==f.RuleType.RTAttachment||(o=null);let n="";switch(k){case S.from:n="from";break;case S.to:n="to";break;case S.via:n="via"}N[`${n}NetworkSource`]=r,N[`${n}AssetGroup`]=s,N[`${n}AssetType`]=a,N[`${n}Terminal`]=o?.toJSON()}return N}_getTerminal(e,t,r){if(e===f.RuleType.RTAttachment||e===f.RuleType.RTContainment)return null;const s=t?.terminalConfigurationId,a=this.terminalConfigurations?.find((e=>e.id===s));return a?.terminals?.find((e=>e.id===r.terminalId))??null}};t.__decorate([r.property({type:[c],json:{origins:{"web-map":{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}},service:{read:{source:"traceConfigurations"}}},read:!1}})],g.prototype,"sharedNamedTraceConfigurations",void 0),t.__decorate([r.property({type:["utility"],readOnly:!0,json:{read:!1,write:!1}})],g.prototype,"type",void 0),t.__decorate([r.property({readOnly:!0})],g.prototype,"serviceTerritoryFeatureLayerId",null),t.__decorate([r.property({readOnly:!0})],g.prototype,"networkSystemLayers",null),t.__decorate([r.property({readOnly:!0})],g.prototype,"terminalConfigurations",null),t.__decorate([r.property({readOnly:!0})],g.prototype,"domainNetworkNames",null),g=t.__decorate([n.subclass("esri.networks.UtilityNetwork")],g);return g}));
