/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["./errorsupport","./shared","./sqlUtils","../../../core/sql/WhereClause"],(function(e,r,t,n){"use strict";function o(o){if("function"===o.parseTree.type){if(0===o.parseTree.args.value.length)return{name:o.parseTree.name,expr:null};if(o.parseTree.args.value.length>1)throw new e.SqlError(e.SqlErrorCodes.MissingStatisticParameters);const s=n.WhereClause.create(t.toWhereClauseFromTree(o.parseTree.args.value[0],r.FeatureServiceDatabaseType.Standardised,o.parameters),o.fieldsIndex,o.timeZone);return{name:o.parseTree.name,expr:s}}return null}class s{constructor(){this.field="",this.tofieldname="",this.typeofstat="MIN",this.workingexpr=null}clone(){const e=new s;return e.field=this.field,e.tofieldname=this.tofieldname,e.typeofstat=this.typeofstat,e.workingexpr=this.workingexpr,e}static parseStatField(r,t,a,i){const l=new s;l.field=r;const u=n.WhereClause.create(t,a,i),f=o(u);if(null===f)throw new e.SqlError(e.SqlErrorCodes.UnsupportedSqlFunction,{function:""});const p=f.name.toUpperCase().trim();if("MIN"===p){if(l.typeofstat="MIN",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:"min"})}else if("MAX"===p){if(l.typeofstat="MAX",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:"max"})}else if("COUNT"===p)l.typeofstat="COUNT",l.workingexpr=f.expr;else if("STDEV"===p){if(l.typeofstat="STDDEV",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:"stdev"})}else if("SUM"===p){if(l.typeofstat="SUM",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:"sum"})}else if("MEAN"===p){if(l.typeofstat="AVG",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:p})}else if("AVG"===p){if(l.typeofstat="AVG",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:"avg"})}else{if("VAR"!==p)throw new e.SqlError(e.SqlErrorCodes.UnsupportedSqlFunction,{function:p});if(l.typeofstat="VAR",l.workingexpr=f.expr,null===u)throw new e.SqlError(e.SqlErrorCodes.InvalidFunctionParameters,{function:"var"})}return l}toStatisticsName(){switch(this.typeofstat.toUpperCase()){case"MIN":return"min";case"MAX":return"max";case"SUM":return"sum";case"COUNT":default:return"count";case"VAR":return"var";case"STDDEV":return"stddev";case"AVG":return"avg"}}}return s}));
