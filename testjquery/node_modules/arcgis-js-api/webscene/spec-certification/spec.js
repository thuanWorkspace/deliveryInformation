/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../core/Error","../../portal/schemas/webScene","./utils"],(function(e,t,r,n,s){"use strict";const i=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));function a(e,t){if(t.properties){if("layerType"in t.properties)return t.properties.layerType.enum[0];if("type"in t.properties&&t.properties.type.enum)return t.properties.type.enum[0]}switch(e){case"multipoint_geometry_schema.json":return"multipoint";case"point_geometry_schema.json":return"point";case"polyline_geometry_schema.json":return"polyline";case"polygon_geometry_schema.json":return"polygon";case"extent_schema.json":return"extent"}}function o(e){return"array"===e.type?`${o(e.items)}[]`:e.type}function c(e){const t={count:e.length,refsCount:0,typesCount:0,distinctTypes:[],type:null},r=new Set;for(const n in e){const s=e[n];s.$ref?t.refsCount++:s.type&&(t.typesCount++,r.add(o(s)))}return r.forEach((e=>t.distinctTypes.push(e))),t.distinctTypes.sort(),t.refsCount===t.count?t.type="refs":2===t.count&&t.refsCount>0&&1===t.distinctTypes.length&&"null"===t.distinctTypes[0]?t.type="refsAndNull":t.typesCount===t.count?(t.type="types",t.distinctTypes=t.distinctTypes):t.type="mix",t}function l(e){return"array"===e.type||!("properties"in e)}function p(e,t,r){if(!r.hasFilteredProperties)return`${e}--${t}`;return`${e}--${t}--${r.filteredPropertiesArray.join("/")}`}async function u(e,t,r,n,s){s.schemaStack.push(e);const i=a(e,r),o=n?n.replace("<?TYPE?>",i?`<${i}>`:""):"";if(l(r)){const n=s.currentClass?null:{type:e,name:e,id:`${e}--${t}`,typeValue:t,properties:[]};return n&&s.push(null,n),await C(r,o,s),s.schemaStack.pop(),n}const c=p(e,t,s),u="drawingInfo_schema.json"!==e&&"layer_schema.json"!==e&&s.seen.get(c);if(u&&o)return s.addProperty({name:o,type:u}),s.schemaStack.pop(),u;const f={type:e,name:e,id:c,typeValue:t,properties:[]};return o&&s.addProperty({name:o,type:f}),s.push(o,f),await C(r,"",s),s.schemaStack.pop(),s.pop()}async function f(e,t,r){const n=await r.requestSchema(e.$ref),s=O(n.schema);if(s){for(const e of s){const s={...n.schema};s.properties={...s.properties,type:{type:"string",enum:[e]}};const i=t&&!t.includes("<?TYPE?>")?`${t}<?TYPE?>`:t;await u(n.schemaId,e,s,i,r)}return}const i="layer_schema.json"===n.schemaId&&r.schemaStack.length?r.schemaStack[r.schemaStack.length-1].replace(/_schema\.json/,""):null;await u(n.schemaId,i,n.schema,t,r)}function h(e,t){if(!y(e))return!1;const r=e.stack.map((e=>e.klass.type)).join("/");return/.*pointCloudLayer_schema\.json\/layerDefinition_schema\.json\/drawingInfo_schema\.json$/.test(r)&&"renderer"===t}function m(e,t){if(!y(e))return!1;const r=e.stack.map((e=>e.klass.type)).join("/");return/.*(imageServiceLayer|tiledImageServiceLayer)_schema\.json\/layerDefinition_schema\.json\/drawingInfo_schema\.json$/.test(r)&&"renderer"===t}function y(e){return!!e.currentClass&&"drawingInfo_schema.json"===e.currentClass.name}function d(e){switch(e.schemaStack[e.schemaStack.length-1]){case"operationalLayers_schema.json":case"elevationLayers_schema.json":case"baseMapLayer_schema.json":return!0}return!1}const _=/raster.*Renderer|vectorFieldRenderer/,w=/(uniqueValueRenderer|classBreaksRenderer|raster.*Renderer|vectorFieldRenderer)/,j=/(rasterUniqueValueRenderer|rasterClassBreaksRenderer)/;function g(e,t,r){if(y(r)){const n=h(r,t),s=m(r,t);return e.filter((e=>{if(/uniqueValueFromStyleRenderer_schema\.json$/.test(e.$ref))return!1;if(s)return w.test(e.$ref)&&!j.test(e.$ref);if(_.test(e.$ref))return!1;const t=/pointCloud.*Renderer/.test(e.$ref);return n===t}))}if(d(r)){const t=["kmlLayer","rasterDataElevationLayer","rasterDataLayer"];return e.filter((e=>!t.some((t=>e.$ref.replace(/.*\//,"")===`${t}_schema.json`))))}return e}async function $(e,t,r){await C(e.items,`${t}[]`,r)}async function S(e,t,r){for(const n in e.properties)if(("webscene_schema.json"!==r.currentClass?.name||"mapRangeInfo"!==n&&"widgets"!==n)&&("baseMap_schema.json"!==r.currentClass?.name||"elevationLayers"!==n)){if(y(r)){const e=r.stack.map((e=>e.klass.type)).join("/");if(/imageServiceLayer|tiledImageServiceLayer/.test(e)&&"transparency"===n)continue}await r.withFilter(n,(async()=>{const s=t?`${t}.${n}`:n;await C(e.properties[n],s,r)}))}}function P(e,t="",r=new Set){for(const n of e)if("properties"in n)for(const e in n.properties){const s=n.properties[e],i=t?`${t}.${e}`:e,a=Object.keys(s);if(0===a.length||1===a.length&&"$ref"===a[0])r.add(i);else{if(1!==a.length||"allOf"!==a[0])throw new Error(`unexpected allOf filter construct: ${JSON.stringify(s)}`);r.add(i),P(s.allOf,i,r)}}return r}async function R(e,t,r){let n=null;for(const i of e.allOf)if("$ref"in i){if(n)throw new Error("Cannot process more than 1 ref in an allOf construct");n=i}else if(!("properties"in i))throw new Error("allOf construct only allows simple top-level property filters");const s=P(e.allOf);await r.addFilter(s,(()=>f(n,t,r)))}async function k(e,t,r){const n=c(e.oneOf);if("refs"!==n.type&&"refsAndNull"!==n.type)if("types"!==n.type)for(const s in e.oneOf){const n=`.oneOf[${s}]`;await C(e.oneOf[s],`${t}${n}`,r)}else r.addProperty({name:t,type:s.sorted(n.distinctTypes).join("|")});else{const n=g(e.oneOf,t,r);for(const e of n)if("null"===e.type);else{const s=`${t||""}`+(1!==n.length?"<?TYPE?>":"");await C(e,s,r)}}}function O(e){if("layerDefinition"===e.title)return null;const t=e.properties?.type;return t?.enum?t.enum:null}async function b(e,t,r){await f(e,t,r)}async function T(e,t,r){let n="unknown";e.type&&(n=Array.isArray(e.type)?s.sorted(e.type).join("|"):e.type.replaceAll(" ","").split(",").join("|"));const i={name:t,type:n,default:e.default};e.enum&&(i.enum=s.sorted(e.enum).map((e=>"string"==typeof e?`"${e}"`:`${e}`)).join("|")),r.addProperty(i)}async function C(e,t,r){return"array"===e.type?$(e,t,r):"properties"in e?S(e,t,r):"allOf"in e?R(e,t,r):"oneOf"in e?k(e,t,r):"$ref"in e?b(e,t,r):T(e,t,r)}const L="#/definitions/";function q(e){return 0===e.indexOf(L)?e.slice(L.length):e}async function v(e,t){const r=await E.create(e,t);return u(`${e||"webscene"}_schema.json`,null,r.schemaRoot,null,r)}class E extends s.ScanContext{constructor(e,t,r){super(),this.definitions=e,this.schemaRoot=t,this.requestSchema=r,this._filteredProperties=null,this.schemaStack=[],this.requestSchema.bind(this)}get hasFilteredProperties(){return!!this._filteredProperties&&this._filteredProperties.size>0}get filteredPropertiesArray(){const e=[];return this._filteredProperties?.forEach((t=>e.push(t))),e}async withFilter(e,t){if(!this.hasFilteredProperties)return t();if(!this._filteredProperties?.has(e))return;const r=this._filteredProperties;this._filteredProperties=null;const n=e=>{this._filteredProperties||(this._filteredProperties=new Set),this._filteredProperties.add(e)};r.forEach((t=>{const r=t.split(".",2);r.length>1&&r[0]===e&&n(r[1])})),await t(),this._filteredProperties=r}async addFilter(e,t){const r=this._filteredProperties;this._filteredProperties=null;const n=e=>{this._filteredProperties||(this._filteredProperties=new Set),this._filteredProperties.add(e)};r&&r.forEach(n),e&&e.forEach(n);const s=await t();return this._filteredProperties=r,s}static async create(e,t){return t&&t.useRemoteSchema?E.createRemote(e,t?.baseUrl):E.createLocal(e)}static createLocal(e){const t=e&&"webscene"!==e?n.json.definitions[`${e}_schema.json`]:n.json;return new E(n.json.definitions,t,E._getLocalSchemaRequest())}static async createRemote(e,t){const r=await E._getRemoteSchemaRequest(t),n=new E({},null,r),s=(await n.requestSchema(`${e||"webscene"}_schema.json`)).schema;return new E(n.definitions,s,r)}static _getLocalSchemaRequest(){return function(e){const t=q(e),n=this.definitions[t];return n?Promise.resolve({schemaId:t,schema:n}):Promise.reject(new r("spec-certification:spec-invalid-local-schema","Schema reference is not a local reference"))}}static async _getRemoteSchemaRequest(t){if(!t)return Promise.reject(new r("spec-certification:spec-missing-base-url","The base url of the remote schema directory must be specified when using a remote schema"));const n=E._getLocalSchemaRequest(),s=(await new Promise(((t,r)=>e(["../../request"],(e=>t(i(e))),r)))).default;return function(e){return n.call(this,e).catch((()=>s(`${t}/${e}`,{responseType:"json"}).then((t=>(this.definitions[q(e)]=t.data,{schemaId:e,schema:t.data})))))}}}const I=Object.keys(n.json.definitions).map((e=>e.replace(/_schema\.json$/,"")));t.scan=v,t.schemaDefinitions=I,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
