/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../Color","../../Graphic","../../symbols","../../core/Accessor","../../core/Collection","../../core/mathUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../symbols/PointSymbol3D","../../symbols/SimpleFillSymbol","../../symbols/TextSymbol","../../symbols/TextSymbol3DLayer","../../symbols/support/Symbol3DVerticalOffset","../../symbols/callouts/LineCallout3D","../../symbols/callouts/LineCallout3DBorder"],(function(e,s,l,t,o,r,i,a,n,c,h,y,b,p,u,g,d,m,_,w){"use strict";const T=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];e.TileTreeDebugger=class extends r{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=T.map((e=>new u({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=e=>{if(null!=e.label)return e.label;let s=e.lij.toString();return null!=e.loadPriority&&(s+=` (${e.loadPriority})`),s},s=this.getTiles(),o=new Array,r=new Set((this._labels.size,this._labels.keys()));s.forEach(((n,c)=>{const h=n.lij.toString();r.delete(h);const y=n.lij[0],b=n.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new t({geometry:b,symbol:this._symbols[y%this._symbols.length]});this._polygons.set(h,e),o.push(e)}if(this.enableLabels){const r=e(n),y=c/(s.length-1),u=a.lerp(0,200,y),T=a.lerp(20,6,y)/.75,f=null!=n.loadPriority&&n.loadPriority>=s.length,v=new l([u,f?0:u,f?0:u]),S="3d"===this.view.type?()=>new p({verticalOffset:new m({screenLength:40/.75}),callout:new _({color:new l("white"),border:new w({color:new l("black")})}),symbolLayers:new i([new d({text:r,halo:{color:"white",size:1/.75},material:{color:v},size:T})])}):()=>new g({text:r,haloColor:"white",haloSize:1/.75,color:v,size:T}),D=this._labels.get(h);if(D){const e=S();null!=D.symbol&&JSON.stringify(e)===JSON.stringify(D.symbol)||(D.symbol=e)}else{const e=new t({geometry:b.extent.center,symbol:S()});this._labels.set(h,e),o.push(e)}}}));const n=new Array;r.forEach((e=>{const s=this._polygons.get(e);null!=s&&(n.push(s),this._polygons.delete(e));const l=this._labels.get(e);null!=l&&(n.push(l),this._labels.delete(e))})),this.view.graphics.removeMany(n),this.view.graphics.addMany(o)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}},s.__decorate([n.property({constructOnly:!0})],e.TileTreeDebugger.prototype,"view",void 0),s.__decorate([n.property({readOnly:!0})],e.TileTreeDebugger.prototype,"updating",void 0),s.__decorate([n.property()],e.TileTreeDebugger.prototype,"enabled",null),e.TileTreeDebugger=s.__decorate([b.subclass("esri.views.support.TileTreeDebugger")],e.TileTreeDebugger),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
