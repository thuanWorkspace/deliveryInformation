/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../request","../../geometry/Point","../../geometry/projection","../../layers/support/rasterFunctions/rasterProjectionHelper","../2d/engine/Bitmap","../2d/engine/webgl/VertexStream","../2d/engine/webgl/shaders/MaterialPrograms","../webgl/enums","../webgl/FramebufferObject","../webgl/rasterUtils","../webgl/RenderingContext","../webgl/Texture","../webgl/TextureDescriptor"],(function(t,e,r,a,i,n,s,o,c,h,x,p,m,u){"use strict";class d{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(d._instance)return d._instanceRefCount++,d._instance;d._instanceRefCount=1,d._instance=this,this._ownsRctx=!0;const t=document.createElement("canvas").getContext("webgl");t.getExtension("OES_texture_float"),this._rctx=new p.RenderingContext(t,{})}const e={applyProjection:!0,bilinear:!1,bicubic:!1},r=o.createProgramTemplate("raster/reproject","raster/reproject",new Map([["a_position",0]]),e);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new s(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,e,n=!1){const s=a.project(t.extent,e),o=new r({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:p,y:m}=i.projectResolution(o,e,t.extent);let d=(p+m)/2;const g=Math.round((s.xmax-s.xmin)/d),_=Math.round((s.ymax-s.ymin)/d);d=(s.width/g+s.height/_)/2;const f=new r({x:d,y:d,spatialReference:s.spatialReference}),l=i.getProjectionOffsetGrid({projectedExtent:s,srcBufferExtent:t.extent,pixelSize:f,hasWrapAround:!0,spacing:[16,16]}),w=x.createTransformTexture(this._rctx,l),b=new u.TextureDescriptor(g,_);b.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;const T=new h.FramebufferObject(this._rctx,b);this._rctx.bindFramebuffer(T),this._rctx.setViewport(0,0,g,_),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(w,1),this._quad.bind();const{width:D=0,height:R=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",D,R),this._program.setUniform2fv("u_transformSpacing",l.spacing),this._program.setUniform2fv("u_transformGridSize",l.size),this._program.setUniform2f("u_targetImageSize",g,_),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),w.dispose(),n){const{width:t,height:e}=T,r=new ImageData(t??0,e??0);T.readPixels(0,0,t??0,e??0,c.PixelFormat.RGBA,c.PixelType.UNSIGNED_BYTE,r.data);const a=T.detachColorTexture(c.ColorAttachment.COLOR_ATTACHMENT0);return T.dispose(),{texture:a,extent:s,imageData:r}}const C=T.detachColorTexture(c.ColorAttachment.COLOR_ATTACHMENT0);return T.dispose(),{texture:C,extent:s}}reprojectBitmapData(t,e){const r=n.isImageSource(t.bitmapData)?n.rasterize(t.bitmapData):t.bitmapData,a=new u.TextureDescriptor;a.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE,a.width=t.bitmapData.width,a.height=t.bitmapData.height;const i=new m.Texture(this._rctx,a,r),s=this.reprojectTexture({texture:i,extent:t.extent},e,!0);s.texture.dispose();const o=document.createElement("canvas"),h=s.imageData;o.width=h.width,o.height=h.height;return o.getContext("2d").putImageData(h,0,0),{bitmapData:o,extent:s.extent}}async loadAndReprojectBitmapData(t,r,a){const i=(await e(t,{responseType:"image"})).data,n=document.createElement("canvas");n.width=i.width,n.height=i.height;const s=n.getContext("2d");s.drawImage(i,0,0);const o=s.getImageData(0,0,n.width,n.height);if(r.spatialReference.equals(a))return{bitmapData:o,extent:r};const c=this.reprojectBitmapData({bitmapData:o,extent:r},a);return{bitmapData:c.bitmapData,extent:c.extent}}destroy(){this._ownsRctx?(d._instanceRefCount--,0===d._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),d._instance=null)):(this._quad.dispose(),this._program.dispose())}}d._instanceRefCount=0,t.ImageReprojector=d,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
