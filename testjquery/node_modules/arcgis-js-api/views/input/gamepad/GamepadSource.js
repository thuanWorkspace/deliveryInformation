/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../core/scheduling","./GamepadInputDevice","./GamepadState"],(function(e,t,a,s){"use strict";class n{constructor(e,t){this._element=e,this._input=t,this._hasEventListeners=!1,this._onConnectGamepad=e=>{this._connectGamepad(e.gamepad)},this._onDisconnectGamepad=e=>{const t=e.gamepad,a=t.index,n=this._inputDevices[a];n&&(this._emitGamepadEvent(t,s.extractState(n),!1),this._inputDevices.splice(a,1),this._latestUpdate.splice(a,1),this._input.gamepad.devices.remove(n),this.ensurePollingState())},this._frameTask=null,this._latestUpdate=new Array,this._inputDevices=new Array,this._callback=null;const a="getGamepads"in window.navigator,n=window.isSecureContext;this.supported=a&&n,this.supported&&(this._forEachGamepad((e=>this._connectGamepad(e))),window.addEventListener("gamepadconnected",this._onConnectGamepad),window.addEventListener("gamepaddisconnected",this._onDisconnectGamepad),this.ensurePollingState())}destroy(){this.hasEventListeners=!1,this.supported&&(window.removeEventListener("gamepadconnected",this._onConnectGamepad),window.removeEventListener("gamepaddisconnected",this._onDisconnectGamepad))}set hasEventListeners(e){this._hasEventListeners!==e&&(this._hasEventListeners=e,this.ensurePollingState())}get _eventsEnabled(){return this.supported&&this._inputDevices.length>0&&this._hasEventListeners}set onEvent(e){this._callback=e}_connectGamepad(e){const t=new a(e);"unknown"!==t.deviceType&&(this._inputDevices[e.index]=t,this._input.gamepad.devices.add(t)),this.ensurePollingState()}ensurePollingState(){this._eventsEnabled?this._startPolling():this._stopPolling()}_startPolling(){null==this._frameTask&&(this._frameTask=t.addFrameTask({update:()=>this._readGamepadState()}))}_stopPolling(){null!=this._frameTask&&(this._frameTask.remove(),this._frameTask=null,this._latestUpdate=new Array)}_readGamepadState(){const e=document.hasFocus(),t=this._element.contains(document.activeElement),a="document"===this._input.gamepad.enabledFocusMode&&!e||"view"===this._input.gamepad.enabledFocusMode&&!t;this._forEachGamepad((e=>{const t=this._inputDevices[e.index];if(!t)return;const n=this._latestUpdate[e.index],i=s.extractState(t),d=a||s.stateIdle(i);if(n){if(n.timestamp===e.timestamp)return;if(!n.active&&d)return;if(s.stateEqual(n.state,i))return}this._emitGamepadEvent(e,i,!d)}))}_forEachGamepad(e){const t=window.navigator.getGamepads();for(let a=0;a<t.length;a++){const s=t[a];this._validate(s)&&e(s)}}_emitGamepadEvent(e,t,a){const s=this._latestUpdate[e.index],n=s&&s.active;if(!n&&!a)return;const i=!n&&a?"start":n&&a?"update":"end";this._latestUpdate[e.index]={timestamp:e.timestamp,state:t,active:a},this._callback&&this._callback({device:this._inputDevices[e.index],state:t,action:i})}_validate(e){if(!e)return!1;if(!e.connected)return!1;for(let t=0;t<e.axes.length;t++)if(isNaN(e.axes[t]))return!1;return!0}}e.GamepadSource=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
