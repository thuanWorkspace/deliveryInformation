/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../core/Accessor","../core/Error","../core/Logger","../core/MapUtils","../core/maybe","../core/promiseUtils","../core/reactiveUtils","../core/scheduling","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass","../core/accessorSupport/get","../core/support/UpdatingHandles","../support/collectionUtils"],(function(e,r,t,i,a,s,o,l,n,y,h,c,p,w,d,u,_){"use strict";function f(e){return"tryRecycleWith"in e}class m{constructor(e,r,i){this.layer=e,this.view=r,this.layerViewImporter=i,this._controller=new AbortController,this._deferred=o.createResolver(),this._started=!1,this.done=!1,this.promise=this._deferred.promise,o.onAbort(this._controller.signal,(()=>{const r=new t("cancelled:layerview-create","layerview creation cancelled",{layer:e});this._deferred.reject(r)}))}tryRecycle(e){if(!this.done||!this.layerView||!f(this.layerView))return null;const r=this.layer.type,t=this._controller.signal;for(let i=0;i<e.length;i++){const a=e[i];if(a.type!==r)continue;const s=this.layerView.tryRecycleWith(a,{signal:t});if(s){e.splice(i,1),this.layer=a;const r=this.layerView,t=r.view;return this.promise=Promise.race([s.then((()=>(o.throwIfAborted(this._controller.signal),a.emit("layerview-destroy",{view:t,layerView:r}),t.emit("layerview-destroy",{view:t,layerView:r}),a.emit("layerview-create",{view:t,layerView:r}),t.emit("layerview-create",{view:t,layerView:r}),r))),new Promise(((e,r)=>o.onAbort(this._controller.signal,(()=>r(o.createAbortError())))))]),this.promise}}return null}destroy(){this._controller.abort();const{layerView:e}=this;if(e){const{layer:r,view:t}=this;r.emit("layerview-destroy",{view:t,layerView:e}),t.emit("layerview-destroy",{layer:r,layerView:e})}this.done=!0,this.layer=null,this.layerView=null,this.view=null,this.layerViewImporter=null,this._map=null}async start(){if(this._started)return;this._started=!0;const{_controller:{signal:e},layer:r,view:i}=this;this._map=i.map;try{let l,n;if(await r.load({signal:e}),r.prefetchResources&&await r.prefetchResources({signal:e}),v(r))l=await r.createLayerView(i,{signal:e});else{if(!this.layerViewImporter.hasLayerViewModule(r))throw new t("layer:view-not-supported","No layerview implementation was found");const a=await this.layerViewImporter.importLayerView(r);o.throwIfAborted(e),l="default"in a?new a.default({layer:r,view:i}):new a({layer:r,view:i})}const y=()=>{n=s.removeMaybe(n),l.destroyed||l.destroy(),l.layer=null,l.parent=null,l.view=null,this.done=!0};n=o.onAbort(e,y),o.throwIfAborted(e);try{await l.when()}catch(a){throw y(),a}const h=this._map?.allLayers?.includes(r);if(!h)return y(),void this._deferred.reject(new t("view:no-layerview-for-layer","The layer has been removed from the map",{layer:r}));this.layerView=l,r.emit("layerview-create",{view:i,layerView:l}),i.emit("layerview-create",{layer:r,layerView:l}),this.done=!0,this._deferred.resolve(l)}catch(a){r.emit("layerview-create-error",{view:i,error:a}),i.emit("layerview-create-error",{layer:r,error:a}),this.done=!0,this._deferred.reject(new t("layerview:create-error","layerview creation failed",{layer:r,error:a}))}}}let g=class extends r{constructor(e){super(e),this._layerLayerViewInfoMap=new Map,this._recyclingInfoMap=new Map,this._watchUpdatingTracking=new u.UpdatingHandles,this.supportsGround=!0,this._preloadLayerViewModules=()=>{const e=this.view.map?.allLayers;if(e)for(const r of e)this.layerViewImporter.hasLayerViewModule(r)&&this.layerViewImporter.importLayerView(r)},this._reschedule=()=>this.destroyed?Promise.reject():(null==this._workPromise&&(this._workPromise=o.createResolver(),this._workPromise.promise.catch((()=>{}))),this.removeHandles("reschedule"),this.addHandles(n.schedule(this._doWork),"reschedule"),this._workPromise.promise),this._doWork=()=>{if(this.destroyed)return;const e=this.view.map;if(this._map!==e&&(this.clear(),this._map=e),null==this._workPromise)return void this.notifyChange("updating");this.removeHandles("reschedule"),this.removeHandles("collection-change");const r=new Set,t=[],i=this.view.ready,a=e=>{if(null!=e)for(const s of e)if(s){r.add(s);const e=this._layerLayerViewInfoMap.get(s);e&&i?e.start():e||this._recyclingInfoMap.has(s)||t.push(s),"layers"in s&&s.layers&&a(s.layers)}};for(const o of this._rootCollectionNames)a(d.get(this,o));for(const[o,l]of this._layerLayerViewInfoMap)if(!r.has(o)){this._layerLayerViewInfoMap.delete(l.layer);const e=l.tryRecycle(t);e?(this.notifyChange("updating"),this._recyclingInfoMap.set(l.layer,l),e.then((()=>{this.notifyChange("updating"),this._recyclingInfoMap.delete(l.layer),this._layerLayerViewInfoMap.set(l.layer,l),this._reschedule()})).catch((()=>{this.notifyChange("updating"),this._recyclingInfoMap.delete(l.layer),l.destroy(),this._reschedule()}))):l.destroy()}for(const[o,l]of this._recyclingInfoMap)r.has(o)||(this.notifyChange("updating"),this._recyclingInfoMap.delete(l.layer),l.destroy());for(const o of t)this._createLayerView(o);this._refreshCollections();const s=[e?.ground?.layers,e?.basemap?.baseLayers,e?.basemap?.referenceLayers,e?.layers].filter((e=>!!e));r.forEach((e=>"layers"in e&&s.push(e.layers))),this.addHandles(s.map((e=>this._watchUpdatingTracking.addOnCollectionChange((()=>e),this._reschedule))),"collection-change"),this._workPromise.resolve(),this._workPromise=null}}initialize(){this.addHandles([l.on((()=>this.view?.map?.allLayers),"change",this._preloadLayerViewModules,{onListenerAdd:this._preloadLayerViewModules}),l.watch((()=>{const e=this.view,r=e?.map;return[r?.basemap,r?.ground,r?.layers,e?.ready]}),(()=>this._reschedule()),l.syncAndInitial)]),this._preloadLayerViewModules(),this._reschedule()}destroy(){this.clear(),_.destroyMap(this._recyclingInfoMap),_.destroyMap(this._layerLayerViewInfoMap),this._watchUpdatingTracking.destroy(),this._map=null,null!=this._workPromise&&(this._workPromise.reject(o.createAbortError()),this._workPromise=null)}get _layersToLayerViews(){const e=[["view.map.basemap.baseLayers","view.basemapView.baseLayerViews"],["view.map.layers","view.layerViews"],["view.map.basemap.referenceLayers","view.basemapView.referenceLayerViews"]];return this.supportsGround&&e.push(["view.map.ground.layers","view.groundView.layerViews"]),new Map(e)}get _rootCollectionNames(){return Array.from(this._layersToLayerViews.keys())}get updating(){return null!=this._workPromise||this._watchUpdatingTracking.updating||a.someMap(this._layerLayerViewInfoMap,(e=>!e.done))||this._recyclingInfoMap.size>0}get updatingRemaining(){let e=0;for(const r of this._layerLayerViewInfoMap.values())r.done||++e;return e}clear(){this.destroyed||(_.destroyMap(this._layerLayerViewInfoMap),this._refreshCollections())}async whenLayerView(e){if(await this._reschedule(),!this._layerLayerViewInfoMap.has(e)){if(this._recyclingInfoMap.has(e))return this._recyclingInfoMap.get(e).promise;throw new t("view:no-layerview-for-layer","No layerview has been found for the layer",{layer:e})}return this._layerLayerViewInfoMap.get(e).promise}_refreshCollections(){for(const[e,r]of this._layersToLayerViews)this._populateLayerViewsOwners(d.get(this,e),d.get(this,r),this.view);this.notifyChange("updating"),this.notifyChange("updatingRemaining")}_populateLayerViewsOwners(e,r,t){if(!e||!r)return void(r&&r.removeAll());let i=0;for(const a of e){const e=this._layerLayerViewInfoMap.get(a);if(!e?.layerView)continue;const s=e.layerView;s.layer=a,s.parent=t,r.at(i)!==s&&r.splice(i,0,s),a.layers&&this._populateLayerViewsOwners(a.layers,s.layerViews,s),i+=1}i<r.length&&r.splice(i,r.length)}_createLayerView(e){e.load().catch((()=>{})),this.layerViewImporter.hasLayerViewModule(e)&&this.layerViewImporter.importLayerView(e);const r=new m(e,this.view,this.layerViewImporter);r.promise.then((()=>this._refreshCollections()),(r=>{r&&(o.isAbortError(r)||"cancelled:layerview-create"===r.name)||i.getLogger(this).error(`Failed to create layerview for layer title:'${e.title??"no title"}', id:'${e.id??"no id"}' of type '${e.type}'.`,{layer:e,error:r}),this._refreshCollections()})),this._layerLayerViewInfoMap.set(e,r),this.view.ready&&r.start(),this.notifyChange("updating"),this.notifyChange("updatingRemaining")}};e.__decorate([y.property()],g.prototype,"_workPromise",void 0),e.__decorate([y.property({readOnly:!0})],g.prototype,"_watchUpdatingTracking",void 0),e.__decorate([y.property({readOnly:!0})],g.prototype,"_layersToLayerViews",null),e.__decorate([y.property({readOnly:!0})],g.prototype,"_rootCollectionNames",null),e.__decorate([y.property()],g.prototype,"layerViewImporter",void 0),e.__decorate([y.property()],g.prototype,"supportsGround",void 0),e.__decorate([y.property({readOnly:!0})],g.prototype,"updating",null),e.__decorate([y.property({readOnly:!0})],g.prototype,"updatingRemaining",null),e.__decorate([y.property({constructOnly:!0})],g.prototype,"view",void 0),g=e.__decorate([w.subclass("esri.views.LayerViewManager")],g);function v(e){return"createLayerView"in e&&null!=e.createLayerView}return g}));
