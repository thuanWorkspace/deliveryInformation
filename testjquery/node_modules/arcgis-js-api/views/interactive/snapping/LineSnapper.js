/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../support/elevationInfoUtils","../sketch/normalizedPoint","./SnappingAlgorithm","./snappingUtils","./candidates/LineSnappingCandidate","../support/viewUtils","../../support/geometry3dUtils","../../support/geometry2dUtils"],(function(e,t,i,n,o,s,r,d,a){"use strict";class p extends n.SnappingAlgorithm{snapNewVertex(e,i){const n=i.editGeometryOperations.data.components[0],s=n.edges.length,d=[];if(s<1)return d;const{spatialReference:a}=i,p=r.vectorToScreenPoint(e,a,t.absoluteHeightElevationInfo,this.view),{view:l}=this,g=n.edges[s-1];let h=g;do{if(this.edgeExceedsShortLineThreshold(h,i)){const t=o.editEdgeToSnappingEdge(h,l,i);this._processCandidateProposal(t.left,t.right,e,p,i,d)}h=h.leftVertex.leftEdge}while(h&&h!==g);return d}snapExistingVertex(e,n){const s=[],d=n.vertexHandle,a=d.component;if(a.edges.length<2)return s;const{view:p}=this,{spatialReference:l}=n,g=r.vectorToScreenPoint(e,l,t.absoluteHeightElevationInfo,p),h=d.leftEdge,c=d.rightEdge;h&&c&&this.edgeExceedsShortLineThreshold(h,n)&&this.edgeExceedsShortLineThreshold(c,n)&&this._processCandidateProposal(i.fromAnyMapPoint(h.leftVertex.pos,p,n),i.fromAnyMapPoint(c.rightVertex.pos,p,n),e,g,n,s);const f=a.edges[0];let E=f;do{if(E!==d.leftEdge&&E!==d.rightEdge&&this.edgeExceedsShortLineThreshold(E,n)){const t=o.editEdgeToSnappingEdge(E,p,n);this._processCandidateProposal(t.left,t.right,e,g,n,s)}E=E.rightVertex.rightEdge}while(E&&E!==f);return s}_processCandidateProposal(e,n,p,l,g,h){const{spatialReference:c,pointer:f}=g,E=i.fromVec3(d.projectPointToLineLike(p,{start:e,end:n,type:a.LineType.LINE}));o.squaredScreenDistance(l,r.vectorToScreenPoint(E,c,t.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(f)&&h.push(new s.LineSnappingCandidate({lineStart:e,lineEnd:n,targetPoint:E,isDraped:"on-the-ground"===g.elevationInfo?.mode}))}}e.LineSnapper=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
