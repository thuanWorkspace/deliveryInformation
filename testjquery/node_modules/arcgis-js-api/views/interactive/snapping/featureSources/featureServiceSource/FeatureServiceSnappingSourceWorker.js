/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../chunks/tslib.es6","../../../../../geometry","../../../../../core/Evented","../../../../../core/promiseUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/UpdatingHandles","../../../../../geometry/SpatialReference","../../../../../layers/graphics/data/FeatureStore","../../../../../layers/graphics/data/QueryEngine","../../../../../layers/support/TileInfo","../../../../../rest/support/Query","../../../../../symbols/support/ElevationInfo","../snappingCandidateElevationAlignment","../snappingCandidateElevationFilter","../symbologySnappingCandidates","./FeatureServiceTiledFetcher","./FeatureServiceTileStore","../../../../../geometry/support/jsonUtils"],(function(e,t,i,r,n,a,s,o,d,l,u,p,h,c,g,f,y,_,S,m,w,I,F){"use strict";let v=class extends i.EventedAccessor{constructor(){super(...arguments),this._isInitializing=!0,this.remoteClient=null,this._whenSetup=r.createResolver(),this._elevationAligner=_.getSnappingCandidateElevationAligner(),this._elevationFilter=S.getSnappingCandidateElevationFilter(),this._symbologyCandidatesFetcher=m.getSymbologySnappingCandidatesFetcher(),this._updatingHandles=new u.UpdatingHandles,this._editsUpdatingHandles=new u.UpdatingHandles,this._pendingApplyEdits=new Map,this._alignPointsInFeatures=async(e,t)=>{const i={query:e},n=await this.remoteClient.invoke("alignElevation",i,{signal:t});return r.throwIfAborted(t),n},this._getSymbologyCandidates=async(e,t)=>{const i={candidates:e,spatialReference:this._spatialReference.toJSON()},n=await this.remoteClient.invoke("getSymbologyCandidates",i,{signal:t});return r.throwIfAborted(t),n}}get updating(){return this.updatingExcludingEdits||this._editsUpdatingHandles.updating||this._featureFetcher.updating}get updatingExcludingEdits(){return this._featureFetcher.updatingExcludingEdits||this._isInitializing||this._updatingHandles.updating}destroy(){this._featureFetcher?.destroy(),this._queryEngine?.destroy(),this._featureStore?.clear()}async setup(e){if(this.destroyed)return{result:{}};const{geometryType:t,objectIdField:i,timeInfo:r,fieldsIndex:a}=e.serviceInfo,{hasZ:s}=e,o=p.fromJSON(e.spatialReference);this._spatialReference=o,this._featureStore=new h({...e.serviceInfo,hasZ:s,hasM:!1}),this._queryEngine=new c.QueryEngine({spatialReference:e.spatialReference,featureStore:this._featureStore,geometryType:t,fieldsIndex:a,hasZ:s,hasM:!1,objectIdField:i,timeInfo:r}),this._featureFetcher=new w.FeatureServiceTiledFetcher({store:new I.FeatureServiceTileStore({featureStore:this._featureStore}),url:e.serviceInfo.url,objectIdField:e.serviceInfo.objectIdField,globalIdField:e.serviceInfo.globalIdField,capabilities:e.serviceInfo.capabilities,spatialReference:o,sourceSpatialReference:p.fromJSON(e.serviceInfo.spatialReference)});const d="3d"===e.configuration.viewType;return this._elevationAligner=_.getSnappingCandidateElevationAligner(d,{elevationInfo:null!=e.elevationInfo?y.fromJSON(e.elevationInfo):null,alignPointsInFeatures:this._alignPointsInFeatures}),this._elevationFilter=S.getSnappingCandidateElevationFilter(d),this.addHandles([n.watch((()=>this._featureFetcher.availability),(e=>this.emit("notify-availability",{availability:e})),n.sync),n.watch((()=>this.updating),(()=>this._notifyUpdating()))]),this._whenSetup.resolve(),this._isInitializing=!1,this.configure(e.configuration)}async configure(e){return await this._updatingHandles.addPromise(this._whenSetup.promise),this._updateFeatureFetcherConfiguration(e),E}async setSuspended(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),this._featureFetcher.suspended=e,E}async updateOutFields(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),this._featureFetcher.outFields=new Set(e??[]),E}async fetchCandidates(e,t){await this._whenSetup.promise,r.throwIfAborted(t);const i=b(e),n=t?.signal,a=await this._queryEngine.executeQueryForSnapping(i,n);r.throwIfAborted(n);const s=await this._elevationAligner.alignCandidates(a.candidates,p.fromJSON(e.point.spatialReference)??p.WGS84,n);r.throwIfAborted(n);const o=await this._symbologyCandidatesFetcher.fetch(s,n);r.throwIfAborted(n);const d=0===o.length?s:s.concat(o);return{result:{candidates:this._elevationFilter.filter(i,d)}}}async updateTiles(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),this._featureFetcher.tileSize=e.tileSize,this._featureFetcher.tilesOfInterest=e.tiles,this._featureFetcher.tileInfo=null!=e.tileInfo?g.fromJSON(e.tileInfo):null,E}async refresh(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),this._featureFetcher.refresh(),E}async whenNotUpdating(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),await n.whenOnce((()=>!this.updatingExcludingEdits),t),r.throwIfAborted(t),E}async getDebugInfo(e,t){return r.throwIfAborted(t),{result:this._featureFetcher.debugInfo}}async beginApplyEdits(e,t){this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t);const i=r.createResolver();return this._pendingApplyEdits.set(e.id,i),this._featureFetcher.applyEdits(i.promise),this._editsUpdatingHandles.addPromise(i.promise),E}async endApplyEdits(e,t){const i=this._pendingApplyEdits.get(e.id);return i&&i.resolve(e.edits),r.throwIfAborted(t),E}async notifyElevationSourceChange(e,t){return this._elevationAligner.notifyElevationSourceChange(),E}async notifySymbologyChange(e,t){return this._symbologyCandidatesFetcher.notifySymbologyChange(),E}async setSymbologySnappingSupported(e){return this._symbologyCandidatesFetcher=m.getSymbologySnappingCandidatesFetcher(e,this._getSymbologyCandidates),E}_updateFeatureFetcherConfiguration(e){this._featureFetcher.filter=null!=e.filter?f.fromJSON(e.filter):null,this._featureFetcher.customParameters=e.customParameters}_notifyUpdating(){this.emit("notify-updating",{updating:this.updating})}};e.__decorate([a.property({readOnly:!0})],v.prototype,"updating",null),e.__decorate([a.property({readOnly:!0})],v.prototype,"updatingExcludingEdits",null),e.__decorate([a.property()],v.prototype,"_isInitializing",void 0),v=e.__decorate([l.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorker")],v);function b(e){if(!e.filter)return{...e,query:{where:"1=1"}};const{distance:t,units:i,spatialRel:r,where:n,timeExtent:a,objectIds:s}=e.filter,o={geometry:e.filter.geometry?F.fromJSON(e.filter.geometry):void 0,distance:t,units:i,spatialRel:r,timeExtent:a,objectIds:s,where:n??"1=1"};return{...e,query:o}}const E={result:{}};return v}));
