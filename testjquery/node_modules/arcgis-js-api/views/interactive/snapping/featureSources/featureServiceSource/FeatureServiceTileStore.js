/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/byteSizeEstimations","../../../../../core/ByteSizeUnit","../../../../../core/SetUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../geometry/support/aaBoundingRect","../../../../../layers/graphics/featureConversionUtils","../../../../../layers/graphics/data/BoundsStore","../../../../../layers/support/TileInfo","../../../../../layers/support/TileKey","../../../../../rest/query/operations/query","./FeatureServiceTileCache"],(function(e,t,s,i,r,o,n,l,a,c,u,h,d,f,_,p,g,S){"use strict";function y(e){return e.reduce(((e,t)=>e+m(t)),0)}function m(e){return 32+v(e.geometry)+i.estimateAttributesObjectSize(e.attributes)}function v(e){if(null==e)return 0;const t=i.estimateFixedArraySize(e.lengths,4);return 32+i.estimateFixedArraySize(e.coords,8)+t}e.FeatureServiceTileStore=class extends s{constructor(e){super(e),this.tileInfo=null,this.extent=null,this.maximumByteSize=10*r.ByteSizeUnit.MEGABYTES,this._tileBounds=new f.BoundsStore,this._tiles=new S.FeatureServiceTileCache,this._refCounts=new Map,this._tileFeatureCounts=new Map,this._tmpBoundingRect=h.create()}add(e,t){for(const r of t)this._referenceFeature(r.objectId);const s=this.featureStore.upsertMany(t),i=s.map((e=>new Set(Object.keys(e.attributes)))).reduce(((e,t)=>o.intersection(e,t)),new Set(Object.keys(s[0]?.attributes??[])));this._addTileStorage(e,new Set(s.map((e=>e.objectId))),y(s),i),this._tiles.applyByteSizeLimit(this.maximumByteSize,(e=>this._removeTileStorage(e)))}getAttributesForTile(e){return e?this._tiles.get(e)?.attributeKeys:null}destroy(){this.clear(),this._tileFeatureCounts.clear()}clear(){this.featureStore.clear(),this._tileBounds.clear(),this._tiles.clear(),this._refCounts.clear()}refresh(){this.clear(),this._tileFeatureCounts.clear()}processEdits(e,t,s){return this._processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)),this._processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures),t,s)}_addTileStorage(e,t,s,i){const r=e.id;this._tiles.set(r,new T(e,t,s,i)),this._tileBounds.set(r,e.extent),this._tileFeatureCounts.set(r,t.size)}_remove({id:e}){const t=this._tiles.get(e);t&&this._removeTileStorage(t)}_removeTileStorage(e){const t=[];for(const i of e.objectIds)this._unreferenceFeature(i)===w.REMOVED&&t.push(i);this.featureStore.removeManyById(t);const s=e.data.id;this._tiles.delete(s),this._tileBounds.delete(s)}_processEditsDelete(e){this.featureStore.removeManyById(e);for(const[,t]of this._tiles){for(const s of e)t.objectIds.delete(s);this._tileFeatureCounts.set(t.data.id,t.objectIds.size)}for(const t of e)this._refCounts.delete(t)}async _processEditsRefetch(e,t,s){const i=(await t(e,s)).features,{hasZ:r,hasM:o}=this.featureStore;for(const n of i){const e=d.getBoundsOptimizedGeometry(this._tmpBoundingRect,n.geometry,r,o);null!=e&&this._tileBounds.forEachInBounds(e,(e=>{const t=this._tiles.get(e);this.featureStore.add(n);const s=n.objectId;t.objectIds.has(s)||(t.objectIds.add(s),this._referenceFeature(s),this._tileFeatureCounts.set(t.data.id,t.objectIds.size))}))}}process(e,t=(()=>!0),s){if(null==this.tileInfo||!e.extent||null!=this.extent&&!h.intersects(h.fromExtent(this.extent,this._tmpBoundingRect),e.extent))return new C(e);const i=this.getAttributesForTile(e.id);if(o.isSubsetOf(s,i))return new C(e);const r=this._createTileTree(e,this.tileInfo);return this._simplify(r,t,null,0,1),this._collectMissingTiles(e,r,this.tileInfo,s)}get debugInfo(){return Array.from(this._tiles.values()).map((({data:e})=>({data:e,featureCount:this._tileFeatureCounts.get(e.id)||0})))}getFeatureCount(e){return this._tileFeatureCounts.get(e.id)??0}async fetchCount(e,t,s,i){const r=this._tileFeatureCounts.get(e.id);if(null!=r)return r;const o=await g.executeQueryForCount(t,s,i);return this._tileFeatureCounts.set(e.id,o.data.count),o.data.count}_createTileTree(e,t){const s=new F(e.level,e.row,e.col);return t.updateTileInfo(s,_.ExtrapolateOptions.POWER_OF_TWO),this._tileBounds.forEachInBounds(e.extent,(i=>{const r=this._tiles.get(i)?.data;r&&this._tilesAreRelated(e,r)&&this._populateChildren(s,r,t,this._tileFeatureCounts.get(r.id)||0)})),s}_tilesAreRelated(e,t){if(!e||!t)return!1;if(e.level===t.level)return e.row===t.row&&e.col===t.col;const s=e.level<t.level,i=s?e:t,r=s?t:e,o=1<<r.level-i.level;return Math.floor(r.row/o)===i.row&&Math.floor(r.col/o)===i.col}_populateChildren(e,t,s,i){const r=t.level-e.level-1;if(r<0)return void(e.isLeaf=!0);const o=t.row>>r,n=t.col>>r,l=e.row<<1,a=n-(e.col<<1)+(o-l<<1),c=e.children[a];if(null!=c)this._populateChildren(c,t,s,i);else{const r=new F(e.level+1,o,n);s.updateTileInfo(r,_.ExtrapolateOptions.POWER_OF_TWO),e.children[a]=r,this._populateChildren(r,t,s,i)}}_simplify(e,t,s,i,r){const o=r*r;if(e.isLeaf)return t(this.getFeatureCount(e),r)?0:(this._remove(e),null!=s&&(s.children[i]=null),o);const n=r/2,l=n*n;let a=0;for(let c=0;c<e.children.length;c++){const s=e.children[c];a+=null!=s?this._simplify(s,t,e,c,n):l}return 0===a?this._mergeChildren(e):1-a/o<E&&(this._purge(e),null!=s&&(s.children[i]=null),a=o),a}_mergeChildren(e){const t=new Set;let s,i=0;this._forEachLeaf(e,(e=>{const r=this._tiles.get(e.id);if(r){s=s?o.intersection(s,r.attributeKeys):new Set(r.attributeKeys),i+=r.byteSize;for(const e of r.objectIds)t.has(e)||(t.add(e),this._referenceFeature(e));this._remove(e)}})),this._addTileStorage(e,t,i,s??new Set),e.isLeaf=!0,e.children[0]=e.children[1]=e.children[2]=e.children[3]=null,this._tileFeatureCounts.set(e.id,t.size)}_forEachLeaf(e,t){for(const s of e.children)null!=s&&(s.isLeaf?t(s):this._forEachLeaf(s,t))}_purge(e){if(null!=e)if(e.isLeaf)this._remove(e);else for(let t=0;t<e.children.length;t++){const s=e.children[t];this._purge(s),e.children[t]=null}}_collectMissingTiles(e,t,s,i){const r=new b(s,e,this.extent);return this._collectMissingTilesRecurse(t,r,1,i),r.info}_collectMissingTilesRecurse(e,t,s,i){const r=this.getAttributesForTile(e.id),n=r&&!o.isSubsetOf(i,r);if(n&&t.addMissing(e.level,e.row,e.col,s),e.isLeaf)return;if(!e.hasChildren)return void(n||t.addMissing(e.level,e.row,e.col,s));const l=s/2;for(let o=0;o<e.children.length;o++){const s=e.children[o];null==s?t.addMissing(e.level+1,(e.row<<1)+((2&o)>>1),(e.col<<1)+(1&o),l):this._collectMissingTilesRecurse(s,t,l,i)}}_referenceFeature(e){const t=(this._refCounts.get(e)||0)+1;return this._refCounts.set(e,t),1===t?w.ADDED:w.UNCHANGED}_unreferenceFeature(e){const t=(this._refCounts.get(e)||0)-1;return 0===t?(this._refCounts.delete(e),w.REMOVED):(t>0&&this._refCounts.set(e,t),w.UNCHANGED)}get test(){return{tiles:Array.from(this._tiles.values()).map((e=>`${e.data.id}:[${Array.from(e.objectIds)}]`)),featureReferences:Array.from(this._refCounts.keys()).map((e=>`${e}:${this._refCounts.get(e)}`))}}},t.__decorate([n.property({constructOnly:!0})],e.FeatureServiceTileStore.prototype,"featureStore",void 0),t.__decorate([n.property()],e.FeatureServiceTileStore.prototype,"tileInfo",void 0),t.__decorate([n.property()],e.FeatureServiceTileStore.prototype,"extent",void 0),t.__decorate([n.property()],e.FeatureServiceTileStore.prototype,"maximumByteSize",void 0),e.FeatureServiceTileStore=t.__decorate([u.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore")],e.FeatureServiceTileStore);class T{constructor(e,t,s,i){this.data=e,this.objectIds=t,this.byteSize=s,this.attributeKeys=i}}class F{constructor(e,t,s){this.level=e,this.row=t,this.col=s,this.isLeaf=!1,this.extent=null,this.children=[null,null,null,null]}get hasChildren(){return!this.isLeaf&&(null!=this.children[0]||null!=this.children[1]||null!=this.children[2]||null!=this.children[3])}}class C{constructor(e,t=[]){this.missingTiles=t,this.fullArea=0,this.coveredArea=0,this.fullArea=h.area(e.extent),this.coveredArea=this.fullArea}prepend(e){this.missingTiles=e.missingTiles.concat(this.missingTiles),this.coveredArea+=e.coveredArea,this.fullArea+=e.fullArea}}class b{constructor(e,t,s){this._tileInfo=e,this._extent=null,this.info=new C(t),null!=s&&(this._extent=h.fromExtent(s))}addMissing(e,t,s,i){const r=new p.TileKey(null,e,t,s);this._tileInfo.updateTileInfo(r,_.ExtrapolateOptions.POWER_OF_TWO),null==r.extent||null!=this._extent&&!h.intersects(this._extent,r.extent)||(this.info.missingTiles.push({data:r,resolution:i}),this.info.coveredArea-=h.area(r.extent))}}const E=.18751;var w;!function(e){e[e.ADDED=0]="ADDED",e[e.REMOVED=1]="REMOVED",e[e.UNCHANGED=2]="UNCHANGED"}(w||(w={})),e.ProcessResult=C,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
