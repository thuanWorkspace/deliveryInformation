/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/arrayUtils","../../../../core/asyncUtils","../../../../core/memoize","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../core/support/UpdatingHandles","../../../../geometry/Polygon","../../../../geometry/projection","../../../../geometry/support/normalizeUtilsSync","../../../../geometry/support/typeUtils","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedFeature","../../../../layers/graphics/data/FeatureStore","../../../../layers/graphics/data/QueryEngine","../../../../layers/support/FieldsIndex","../../../../support/elevationInfoUtils","../../../../symbols/support/utils","../snappingUtils","./queryEngineUtils","./snappingCandidateElevationAlignment","./snappingCandidateElevationFilter","./symbologySnappingCandidates","../../../support/Scheduler"],(function(e,t,r,n,i,o,a,s,p,l,c,d,u,h,y,g,_,S,m,f,v,w,b,E,G,C,k,F,A,I){"use strict";const P="graphics-collections";e.GraphicsSnappingSource=class extends r{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return null!=e&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,r=null!=e&&"3d"===e.type;if(!r||"map-notes"===t.type)return k.getSnappingCandidateElevationAligner();const n=async(r,n)=>(await a.whenOrAbort(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(r,n);return k.getSnappingCandidateElevationAligner(r,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n})}get _snappingElevationFilter(){const{view:e}=this,t=null!=e&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type;return F.getSnappingCandidateElevationFilter(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,r=null!=e&&"3d"===e.type,n=this._extrudedPolygonSymbolsCount>0;return r&&"map-notes"!==t.type&&n?A.getSymbologySnappingCandidatesFetcher(n,(async(r,n)=>{const i=await e.whenLayerView(t);return a.throwIfAborted(n),i.queryForSymbologySnapping({candidates:r,spatialReference:e.spatialReference},n)})):A.getSymbologySnappingCandidatesFetcher()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new u.UpdatingHandles,this._memoizedMakeGetGroundElevation=o.memoize(C.makeGetGroundElevation)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e))),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add((()=>this.getGraphicsLayers()),(e=>{this._updatingHandles.removeHandles(P);for(const t of e)this._addMany(t.graphics.toArray()),this.addHandles([t.on("graphic-update",(e=>this._onGraphicUpdate(e))),this._updatingHandles.addOnCollectionChange((()=>t.graphics),(e=>this._onGraphicsChanged(e)))],P)}),s.initial);const{view:e}=this,{layer:t}=this.layerSource;null!=e&&"3d"===e.type&&"map-notes"!==t.type&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{b.elevationContextAffectsAlignment(e,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),s.watch((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),s.initial),s.on((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:r,coordinateHelper:{spatialReference:n}}=e,i=await a.allSettledValues(this._mapSources((r=>this._fetchCandidatesForSource(r,e,t))));a.throwIfAborted(t);const o=this._memoizedMakeGetGroundElevation(this.view,n),s=i.flat().map((e=>C.convertSnappingCandidate(e,o)));return G.sortCandidatesInPlace(r,s),s}async _fetchCandidatesForSource(e,t,r){const n=G.makeSnappingQuery(t,this.view?.type??"2d"),i=await e.queryEngine.executeQueryForSnapping(n,r);a.throwIfAborted(r);const o=await this._snappingElevationAligner.alignCandidates(i.candidates,t.coordinateHelper.spatialReference,r);a.throwIfAborted(r);const s=await this._symbologySnappingFetcher.fetch(o,r);a.throwIfAborted(r);const p=0===s.length?o:[...o,...s];return this._snappingElevationFilter.filter(n,p)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],r=new Map;for(const n of e)null!=n.geometry&&(this._needsInitializeProjection(n.geometry.spatialReference)?(t.push(n.geometry.spatialReference),r.set(n.uid,n)):this._add(n));this._createPendingAdd(t,r)}_createPendingAdd(e,t){if(!e.length)return;const r=i.createTask((async r=>{await y.initializeProjection(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:r}),this._markLoadedSpatialReferences(e);for(const[,e]of t)this._add(e)}));this._updatingHandles.addPromise(r.promise);const o={task:r,graphics:t},a=()=>n.removeUnordered(this._pendingAdds,o);r.promise.then(a,a),this._pendingAdds.push(o)}_markLoadedSpatialReferences(e){for(const t of e){null!=t.wkid&&this._loadedWkids.add(t.wkid);const e=t.wkt2||t.wkt;e&&this._loadedWkts.add(e)}}_add(e){if(null==e.geometry||!e.visible)return;let t=e.geometry;if("mesh"===t.type)return;"extent"===t.type&&(t=h.fromExtent(t));const r=this._ensureSource(t.type);if(null==r)return;const n=this._createOptimizedFeature(e.uid,t);null!=n&&(r.featureStore.add(n),E.symbolHasExtrudeSymbolLayer(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(null!=e.wkid&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!y.canProjectWithoutEngine(e,this.spatialReference)}_createOptimizedFeature(e,t){const r=y.project(g.normalizeCentralMeridianForDisplay(t),this.spatialReference);if(!r)return null;const n=this._ensureGeometryHasZ(r),i=S.convertFromGeometry(n,this._hasZ,!1),o={[H]:e};return new m.OptimizedFeature(i,o,null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=e=>{for(;e.length<3;)e.push(0)},r=e.clone();switch(r.hasZ=!0,r.type){case"point":r.z=r.z??0;break;case"multipoint":r.points.forEach(t);break;case"polyline":r.paths.forEach((e=>e.forEach(t)));break;case"polygon":r.rings.forEach((e=>e.forEach(t)))}return r}_ensureSource(e){const t=this._sources[e];if(null!=t)return t;const r=this._createSource(e);return this._sources[e]=r,r}_createSource(e){const t=_.featureGeometryTypeKebabDictionary.toJSON(e),r=this._hasZ,n=new f({geometryType:t,hasZ:r,hasM:!1});return{featureStore:n,queryEngine:new v.QueryEngine({featureStore:n,fieldsIndex:w.fromLayerJSON({fields:[{name:H,type:"esriFieldTypeOID",alias:H}]}),geometryType:t,hasM:!1,hasZ:r,objectIdField:H,spatialReference:this.spatialReference,priority:I.TaskPriority.SNAPPING,scheduler:null!=this.view&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort()}_removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&(e.featureStore.removeById(t.uid),E.symbolHasExtrudeSymbolLayer(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:r,polyline:n,multipoint:i}=this._sources,o=[];return null!=t&&o.push(e(t)),null!=r&&o.push(e(r)),null!=n&&o.push(e(n)),null!=i&&o.push(e(i)),o}},t.__decorate([p.property()],e.GraphicsSnappingSource.prototype,"getGraphicsLayers",void 0),t.__decorate([p.property({constructOnly:!0})],e.GraphicsSnappingSource.prototype,"layerSource",void 0),t.__decorate([p.property({constructOnly:!0})],e.GraphicsSnappingSource.prototype,"spatialReference",void 0),t.__decorate([p.property({constructOnly:!0})],e.GraphicsSnappingSource.prototype,"view",void 0),t.__decorate([p.property({readOnly:!0})],e.GraphicsSnappingSource.prototype,"updating",null),t.__decorate([p.property({readOnly:!0})],e.GraphicsSnappingSource.prototype,"availability",void 0),t.__decorate([p.property()],e.GraphicsSnappingSource.prototype,"_hasZ",null),t.__decorate([p.property()],e.GraphicsSnappingSource.prototype,"_snappingElevationAligner",null),t.__decorate([p.property()],e.GraphicsSnappingSource.prototype,"_snappingElevationFilter",null),t.__decorate([p.property()],e.GraphicsSnappingSource.prototype,"_symbologySnappingFetcher",null),t.__decorate([p.property()],e.GraphicsSnappingSource.prototype,"_extrudedPolygonSymbolsCount",void 0),e.GraphicsSnappingSource=t.__decorate([d.subclass("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],e.GraphicsSnappingSource);const H="OBJECTID";Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
