/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/vec2","../../../support/elevationInfoUtils","../sketch/normalizedPoint","./Settings","./snappingUtils","../support/viewUtils"],(function(e,t,s,i,r,o,n){"use strict";class h{constructor(e,t){this.view=e,this.options=t,this.squaredShortLineThreshold=r.defaults.shortLineThreshold*r.defaults.shortLineThreshold}snap(e,t){return null!=t.vertexHandle?"vertex"!==t.vertexHandle.type?[]:this.snapExistingVertex(e,t):this.snapNewVertex(e,t)}edgeExceedsShortLineThreshold(e,t){return this.exceedsShortLineThreshold(i.fromAnyMapPoint(e.leftVertex.pos,this.view,t),i.fromAnyMapPoint(e.rightVertex.pos,this.view,t),t)}exceedsShortLineThreshold(e,t,{spatialReference:i}){return 0===this.squaredShortLineThreshold||o.squaredScreenDistance(n.vectorToScreenPoint(t,i,s.absoluteHeightElevationInfo,this.view),n.vectorToScreenPoint(e,i,s.absoluteHeightElevationInfo,this.view))>this.squaredShortLineThreshold}isVertical(e,s){return t.squaredDistance(e,s)<r.defaults.verticalLineThreshold}squaredProximityThreshold(e){return"touch"===e?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:e,touchSensitivityMultiplier:t}=this.options,s=e*t;return s*s}}e.SnappingAlgorithm=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
