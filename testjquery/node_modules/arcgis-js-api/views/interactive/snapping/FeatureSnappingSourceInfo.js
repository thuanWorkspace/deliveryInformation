/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Logger","../../../core/reactiveUtils","../../../core/sql","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../layers/support/FeatureFilter","../../../layers/support/floorFilterUtils","../../../layers/support/layerUtils","./snappingUtils"],(function(e,r,t,i,o,l,n,a,s,p,u,c,d,y,f){"use strict";function g(e,r){return null==e?new c({where:r}):e.where?new c({where:l.sqlAnd(e.where,r)}):new c({where:r})}e.FeatureSnappingSourceInfo=class extends t{get layerView(){return this.view?.allLayerViews?.find((e=>e.layer===this.layer))}get valid(){return this._valid}get subtypeFilter(){const{layer:e}=this;if(!y.isSubtypeGroupLayer(e)||!e.subtypes?.length)return{mode:"not-in-use",filter:null};const r=e.fieldsIndex.get(e.subtypeField)?.name??e.subtypeField,t=e.sublayers.filter((e=>e.visible)).map((e=>e.subtypeCode));return t.length?t.length===e.subtypes.length?{mode:"all-visible",filter:null}:1===t.length?{mode:"in-use",filter:`${r} = ${t.getItemAt(0)}`}:{mode:"in-use",filter:`${r} IN (${t.join(", ")})`}:{mode:"none-visible",filter:null}}get floorFilter(){const{view:e,layer:r}=this;return e&&r?d.getFloorFilterClause({view:e,layer:r}):null}constructor(e){super(e),this.rulesTable=null,this._valid=!1}initialize(){if(!this.snappingSource||!this.layer)return;const{layer:e,snappingSource:r}=this;if("refresh"in e){const t=e;this.addHandles(t.on("refresh",(()=>r.refresh())))}this.loadRules(),this.addHandles([o.watch((()=>r.updating),(e=>r.layerSource.updating=e),o.syncAndInitial),o.watch((()=>r.availability),(e=>r.layerSource.availability=e),o.syncAndInitial)])}getFetchCandidatesParameters(e,r,t){if(!this.valid)return[];const{layer:i,layerView:o,floorFilter:n,rulesTable:a,subtypeFilter:s}=this,p={distance:t,mode:this.view?.type??"2d",point:e,coordinateHelper:r.coordinateHelper,...this._types,filter:o&&"filter"in o?o.filter:null};if(n&&(p.filter=g(p.filter,n)),"not-in-use"!==s.mode&&"all-visible"!==s.mode){if("none-visible"===s.mode)return[];p.filter?p.filter.where=l.sqlAnd(p.filter.where,s.mode):p.filter=new c({where:s.filter})}if(a){const e=r.feature,t=e?.sourceLayer;if(!(e&&y.isFeatureLayer(i)&&i.layerId&&y.isFeatureLayer(t)&&"loaded"===a.loadStatus))return[];const o=[],l=i.layerId,n=a.getFeatureSQL(t,e)?.[l];if(!n)return[];const s=n.anyVertex;let u=n.endVertex;return u&&s&&u===s&&(u=""),u&&o.push({...p,returnEdge:!1,vertexMode:"ends",filter:g(p.filter,u)}),s&&o.push({...p,returnEdge:!1,vertexMode:"all",filter:g(p.filter,s)}),o}return[p]}async loadRules(){const{layer:e,view:r}=this;if(e&&r&&f.isUtilityNetworkWebMap(r?.map)&&y.isFeatureLayer(e)){const o=r.map.utilityNetworks?.find((r=>r.isUtilityLayer(e)));if(o)try{this.rulesTable=await o.getRulesTable(),await(this.rulesTable?.load()),this._valid=!0}catch(t){return void i.getLogger("esri.views.interactive.snapping.FeatureSnappingSourceInfo").error("Failed to load rules table for snapping source",e.title)}}else this._valid=!0}get _types(){return{returnEdge:!0,vertexMode:"all"}}remove(){this.destroy()}destroy(){this.snappingSource?.destroy()}},r.__decorate([n.property({constructOnly:!0})],e.FeatureSnappingSourceInfo.prototype,"layer",void 0),r.__decorate([n.property({constructOnly:!0})],e.FeatureSnappingSourceInfo.prototype,"snappingSource",void 0),r.__decorate([n.property({constructOnly:!0})],e.FeatureSnappingSourceInfo.prototype,"view",void 0),r.__decorate([n.property()],e.FeatureSnappingSourceInfo.prototype,"layerView",null),r.__decorate([n.property()],e.FeatureSnappingSourceInfo.prototype,"rulesTable",void 0),r.__decorate([n.property()],e.FeatureSnappingSourceInfo.prototype,"valid",null),r.__decorate([n.property()],e.FeatureSnappingSourceInfo.prototype,"subtypeFilter",null),r.__decorate([n.property()],e.FeatureSnappingSourceInfo.prototype,"floorFilter",null),r.__decorate([n.property()],e.FeatureSnappingSourceInfo.prototype,"_valid",void 0),e.FeatureSnappingSourceInfo=r.__decorate([u.subclass("esri.views.interactive.snapping.FeatureSnappingSourceInfo")],e.FeatureSnappingSourceInfo),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
