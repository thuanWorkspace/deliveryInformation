/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/arrayUtils","../../../../chunks/vec2f64","../../../../chunks/vec2","./UpdateVertices"],(function(t,c,a,s,i){"use strict";class o{constructor(t,c,s,o,r=i.AccumulationType.CUMULATIVE){this.origin=t,this.axis1=c,this.factor1=s,this.factor2=o,this._accumulationType=r,this.axis2=a.fromValues(c[1],-c[0])}_scale(t,c,a){s.projectAndScale(t.pos,t.pos,this.origin,this.axis1,c),s.projectAndScale(t.pos,t.pos,this.origin,this.axis2,a)}apply(t){this._scale(t,this.factor1,this.factor2)}undo(t){this._scale(t,1/this.factor1,1/this.factor2)}canAccumulate(t){return t instanceof o&&c.equals(this.origin,t.origin)&&c.equals(this.axis1,t.axis1)}accumulate(t,c){c._accumulationType===i.AccumulationType.REPLACE?this._scale(t,c.factor1/this.factor1,c.factor2/this.factor2):this._scale(t,c.factor1,c.factor2)}accumulateParams(t){const c=t._accumulationType===i.AccumulationType.REPLACE;this.factor1=c?t.factor1:this.factor1*t.factor1,this.factor2=c?t.factor2:this.factor2*t.factor2}}t.ScaleVertex=o,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
