/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../core/arrayUtils","../../../chunks/vec2","../../../chunks/vec2f64","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/support/plane","../../../geometry/support/ray","../../../chunks/sphere","./normalizedPoint","../../support/geometry3dUtils","../../support/geometry2dUtils"],(function(e,t,n,r,s,i,c,o,a,u,l,f){"use strict";class d{intersect(e){return Z(this,e)}closestPoints(e){return[this.closestTo(e)]}}class h extends d{constructor(e){super(),this.point=e}equals(e){return this===e||ue(e)&&s.exactEquals(this.point,e.point)}closestTo(){return u.clone(this.point)}}class p extends d{constructor(e,t,n){super(),this.start=e,this.end=t,this.lineLike={start:e,end:t,type:n}}equals(e){return this===e||le(e)&&this.lineLike.type===e.lineLike.type&&s.exactEquals(this.start,e.start)&&s.exactEquals(this.end,e.end)}closestTo(e){const t=l.projectPointToLineLike(e,this.lineLike);return u.fromVec3(t)}}class P extends p{constructor(e,t){super(e,t,f.LineType.LINE)}}class L extends p{constructor(e,t){super(e,t,f.LineType.RAY)}}class C extends d{constructor(e){super(),this.constraints=e}equals(e){return this===e||ae(e)&&t.equals(this.constraints,e.constraints,((e,t)=>e.equals(t)))}closestTo(e){let t,n=1/0;for(const r of this.constraints){const i=r.closestTo(e),c=s.squaredDistance(e,i);c<n&&(n=c,t=i)}return t?u.clone(t):e}closestPoints(e){return this.constraints.flatMap((t=>t===this?[]:t.closestPoints(e)))}}class V extends d{constructor(e,t){super(),this.center=e,this.radius=t}equals(e){return this===e||he(e)&&this.center[0]===e.center[0]&&this.center[1]===e.center[1]&&this.radius===e.radius}closestTo(e){const t=l.projectPointToVerticalCylinder(e,this.center,this.radius);return u.fromVec3(t)}}class m extends d{constructor(e,t){super(),this.center=e,this.radius=t}equals(e){return this===e||pe(e)&&s.exactEquals(this.center,e.center)&&this.radius===e.radius}closestTo(e){const t=l.projectPointToVerticalCylinder(e,this.center,this.radius);return t[2]=this.center[2],u.fromVec3(t)}asCircle(){return new k(u.clone(this.center),this.radius,u.fromValues(0,0,1))}}class k extends d{constructor(e,t,n,r=void 0){super(),this.center=e,this.radius=t,this.normal=n,this.slicePlane=r}equals(e){return this===e||Pe(e)&&s.exactEquals(this.center,e.center)&&s.exactEquals(this.normal,e.normal)&&this.radius===e.radius}closestTo(e){const{center:t,radius:n}=this;c.projectPoint(this.getPlane(g),e,y);const r=s.sub(y,y,t),o=s.squaredLength(r);if(l.isClose(o,0))return u.clone(e);const a=n/Math.sqrt(o),f=s.scaleAndAdd(i.create(),t,r,a),{slicePlane:d}=this;if(d&&!l.isPointInsidePlane(d,f)){const t=D(d,this);return t?.closestTo(e)??u.clone(e)}return u.fromVec3(f)}getPlane(e=c.create()){return c.fromPositionAndNormal(this.center,this.normal,e)}}const y=i.create(),g=c.create();class T extends d{constructor(e){super(),this.z=e}equals(e){return this===e||fe(e)&&this.z===e.z}closestTo(e){return u.fromVec3(i.fromValues(e[0],e[1],this.z))}getPlane(e=c.create()){return s.set(q,0,0,this.z),c.fromPositionAndNormal(q,i.UNIT_Z,e)}}const q=i.create();class x extends d{constructor(e,t,n){super(),this.start=e,this.end=t,this.planeLike={start:e,end:t,type:n}}equals(e){return this===e||de(e)&&this.planeLike.type===e.planeLike.type&&s.exactEquals(this.start,e.start)&&s.exactEquals(this.end,e.end)}closestTo(e){return u.fromVec3(l.projectPointToVerticalPlane(e,this.planeLike))}closestEndTo(e){const{start:t,end:r}=this;return Math.sign(n.dot(n.subtract(A,r,t),n.subtract(v,e,t)))>0?r:t}getPlane(e=c.create()){const t=s.copy(E,this.end);return t[2]+=1,c.fromPoints(this.start,this.end,t,e)}getSlicePlane(e=c.create()){const{start:t,end:n,type:r}=this.planeLike;if(r===l.VerticalPlaneType.PLANE)return;const i=s.set(E,t[0],t[1],0),o=s.set(z,n[0],n[1],0),a=s.subtract(z,o,i);return c.fromPositionAndNormal(i,a,e),e}}const A=r.create(),v=r.create(),E=i.create(),z=i.create();class w extends x{constructor(e,t){super(e,t,l.VerticalPlaneType.HALF_PLANE)}}class I extends x{constructor(e,t){super(e,t,l.VerticalPlaneType.PLANE)}}class N extends d{constructor(e,t){super(),this.sphere=a.fromCenterAndRadius(e,t)}equals(e){return this===e||Le(e)&&a.exactEquals(this.sphere,e.sphere)}closestTo(e){const t=a.projectPoint(this.sphere,e,i.create());return u.fromVec3(t)}get center(){return this.sphere}get radius(){return this.sphere[3]}}class j extends d{constructor(e,t,n){super(),this.start=e,this.end=t,this.getZ=n,this.planeLike={start:e,end:t,type:l.VerticalPlaneType.PLANE}}equals(e){return this===e||Ce(e)&&s.exactEquals(this.start,e.start)&&s.exactEquals(this.end,e.end)&&this.getZ===e.getZ}closestTo(e){return S(this,e)}addIfOnTheGround(e,t){for(const n of t){const t=this.getZ(n[0],n[1])??0;l.isClose(n[2],t)&&(n[2]=t,e.push(n))}}}function S(e,t){const n=l.projectPointToVerticalPlane(t,e.planeLike);return n[2]=e.getZ(n[0],n[1])??Ve,u.fromVec3(n)}function Z(e,t){if(ae(e)){const n=[];for(const r of e.constraints){const e=r.intersect(t);e&&n.push(e)}return oe(n)}if(ae(t))return Z(t,e);if(Ce(e))return re(e,t);if(Ce(t))return re(t,e);if(ue(e)){const{point:n}=e,r=t.closestTo(n);return s.equals(r,n)?e:void 0}if(le(e)){if(ue(t))return Z(t,e);if(le(t))return ie(l.intersectLineLikes(e.lineLike,t.lineLike));if(fe(t))return b(e,t);if(de(t))return ie(l.intersectVerticalPlaneAndLineLike(t.planeLike,e.lineLike));if(he(t))return ie(l.intersectLineLikeAndVerticalCylinder(e.lineLike,t.center,t.radius));if(Pe(t))return ie(l.intersectLineLikeAndCircle(e.lineLike,t));if(pe(t))return M(e,t);if(Le(t))return H(e,t)}else if(fe(e)){if(ue(t)||le(t))return Z(t,e);if(fe(t))return O(e,t);if(de(t))return U(e,t);if(he(t))return G(e,t);if(Pe(t))return _(e,t);if(pe(t))return R(e,t);if(Le(t))return F(e,t)}else if(de(e)){if(ue(t)||le(t)||fe(t))return Z(t,e);if(de(t))return se(l.intersectVerticalPlanes(e.planeLike,t.planeLike));if(he(t))return se(l.intersectVerticalPlaneAndVerticalCylinder(e.planeLike,t.center,t.radius));if(Pe(t))return B(e,t);if(pe(t))return Y(e,t);if(Le(t))return J(e,t)}else if(he(e)){if(ue(t)||le(t)||fe(t)||de(t))return Z(t,e);if(he(t))return se(l.intersectVerticalCylinders(e.center,e.radius,t.center,t.radius));if(Pe(t))return K();if(pe(t))return Q(e,t);if(Le(t))return W()}else if(Pe(e)){if(ue(t)||le(t)||fe(t)||de(t)||he(t))return Z(t,e);if(Pe(t))return X();if(pe(t))return X(t.asCircle());if(Le(t))return $()}else if(pe(e)){if(ue(t)||le(t)||fe(t)||de(t)||he(t)||Pe(t))return Z(t,e);if(pe(t))return ee(t,e);if(Le(t))return te()}else if(Le(e)){if(ue(t)||le(t)||fe(t)||de(t)||he(t)||pe(t))return Z(t,e);if(Le(t))return ne()}}const b=(()=>{const e=c.create();return(t,n)=>{const{start:r,end:s}=t;if(l.vectorsHaveCloseZ(r,s)&&l.isClose(r[2],n.z))return t;const o=i.create();return c.intersectLine(n.getPlane(e),r,s,o)?new h(u.fromVec3(o)):void 0}})();function M({lineLike:e},{center:t,radius:n}){const r=t[2];return ie(l.intersectLineLikeAndVerticalCylinder(e,t,n).filter((e=>l.isClose(e[2],r))))}function H({lineLike:e},{sphere:t}){return ie(a.intersectLine(t,e.start,e.end))}const D=(()=>{const e=o.create(),t=c.create(),n={start:i.create(),end:i.create(),type:f.LineType.LINE};return(r,o,a)=>{const{normal:f,center:d,radius:p}=o,P=s.dot(f,c.normal(r)),L=l.isClose(c.distance(r,d),0);if(l.isClose(P,1))return L?o:void 0;if(o.getPlane(t),L&&l.isClose(P,0)&&c.isVertical(r)&&c.isVertical(t)){if(l.isClose(p,0))return!a||l.isPointInsidePlane(a,d)?new h(u.clone(d)):void 0;const e=i.clone(d);e[2]+=p;const t=i.clone(d);t[2]-=p;const n=[];return a&&!l.isPointInsidePlane(a,e)||n.push(e),a&&!l.isPointInsidePlane(a,t)||n.push(t),ie(n)}if(!c.intersectPlanes(r,t,e))return;s.copy(n.start,e.origin),s.add(n.end,e.origin,e.direction);const C=l.intersectLineLikeAndCircle(n,o);return ie(a?l.pointsInsidePlane(a,C):C)}})();function O(e,t){return l.isClose(e.z,t.z)?e:void 0}function U({z:e},{planeLike:t}){const[n,r]=t.start,[s,i]=t.end,c=u.fromValues(n,r,e),o=u.fromValues(s,i,e);return t.type===l.VerticalPlaneType.PLANE?new P(c,o):new L(c,o)}function G(e,t){const[n,r]=t.center;return new m(u.fromValues(n,r,e.z),t.radius)}function R(e,t){return l.isClose(t.center[2],e.z)?t:void 0}const _=(()=>{const e=c.create();return(t,n)=>D(t.getPlane(e),n)})();function F(e,{center:t,radius:n}){const r=Math.abs(t[2]-e.z);if(r>n&&!l.isClose(r,n))return;const s=u.fromValues(t[0],t[1],e.z),i=Math.sqrt(n**2-r**2);return l.isClose(i,0)?void 0:new m(s,i)}const Y=(()=>{const e=c.create();return(t,{center:n,radius:r})=>{const s=l.intersectVerticalPlaneAndVerticalCylinder(t.planeLike,n,r),i=n[2];t.getSlicePlane(e);const c=[];for(const[o,a]of s){const t=[o,a,i];l.isPointInsidePlane(e,t)&&c.push(t)}return ie(c)}})(),B=(()=>{const e=c.create(),t=c.create();return(n,r)=>D(n.getPlane(e),r,n.getSlicePlane(t))})(),J=(()=>{const e=c.create();return(t,{center:n,radius:r})=>{const o=t.getPlane(e),a=c.signedDistance(o,n),f=Math.abs(a);if(f>r&&!l.isClose(f,r))return;const d=i.clone(c.normal(o)),p=s.scaleAndAdd(i.create(),n,d,a),P=Math.sqrt(r**2-a**2);return l.isClose(P,0)?new h(u.fromVec3(c.projectPoint(o,n,i.create()))):new k(u.fromVec3(p),P,d,t.getSlicePlane())}})();function K(e,t){}function Q(e,t){const r=n.squaredDistance(e.center,t.center);if(l.isClose(r,0)&&l.isClose(e.radius,t.radius))return t;return ce(l.intersectVerticalCylinders(e.center,e.radius,t.center,t.radius),t.center[2])}function W(e,t){}function X(e,t){}function $(e,t){}function ee(e,t){if(!l.vectorsHaveCloseZ(e.center,t.center))return;const r=n.squaredDistance(e.center,t.center);if(l.isClose(r,0)&&l.isClose(e.radius,t.radius))return e;return ce(l.intersectVerticalCylinders(e.center,e.radius,t.center,t.radius),e.center[2])}function te(e,t){}function ne(e,t){}function re(e,t){const{planeLike:n,getZ:r}=e,s=[];if(ue(t))e.addIfOnTheGround(s,l.intersectVerticalPlaneAndPoint(n,t.point));else if(le(t))e.addIfOnTheGround(s,l.intersectVerticalPlaneAndLineLike(n,t.lineLike));else if(he(t))for(const[c,o]of l.intersectVerticalPlaneAndVerticalCylinder(n,t.center,t.radius)){const e=r(c,o);null!=e&&s.push(i.fromValues(c,o,e))}else if(de(t)||Ce(t))for(const[c,o]of l.intersectVerticalPlanes(n,t.planeLike)){const e=r(c,o)??Ve;s.push(i.fromValues(c,o,e))}return ie(s)}function se(e){return oe(e.map((([e,t])=>{const n=u.fromValues(e,t,0),r=u.fromValues(e,t,1);return new P(n,r)})))}function ie(e){return oe(e.map((e=>e?new h(u.fromVec3(e)):void 0)))}function ce(e,t){return ie(e.map((([e,n])=>[e,n,t])))}function oe(e){if(0!==e.length)return 1===e.length?e[0]??void 0:new C(e.filter(t.isSome))}function ae(e){return e instanceof C}function ue(e){return e instanceof h}function le(e){return e instanceof p}function fe(e){return e instanceof T}function de(e){return e instanceof x}function he(e){return e instanceof V}function pe(e){return e instanceof m}function Pe(e){return e instanceof k}function Le(e){return e instanceof N}function Ce(e){return e instanceof j}const Ve=0;e.CircleConstraint=k,e.Constraint=d,e.DrapedLineConstraint=j,e.HorizontalCircleConstraint=m,e.HorizontalPlaneConstraint=T,e.LineConstraint=P,e.LineLikeConstraint=p,e.PointConstraint=h,e.RayConstraint=L,e.SetConstraint=C,e.SphereConstraint=N,e.VerticalCylinderConstraint=V,e.VerticalHalfPlaneConstraint=w,e.VerticalPlaneConstraint=I,e.VerticalPlaneLikeConstraint=x,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
