/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../Graphic","../../core/Evented","../../core/handleUtils","../../core/maybe","../../core/memoize","../../core/quantityUtils","../../core/reactiveUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../layers/GraphicsLayer","../../support/elevationInfoUtils","./support/createUtils","./support/helpMessageUtils","./support/surfaceCoordinateSystems","../interactive/InteractiveToolBase","../interactive/keybindings","../interactive/sketch/SketchLabelOptions","../interactive/sketch/SketchTooltipOptions","../interactive/tooltip/constraintUtils","../interactive/tooltip/DrawTooltipInfos","../interactive/tooltip/Tooltip","../support/angularMeasurementUtils","../support/automaticAreaMeasurementUtils","../support/automaticLengthMeasurementUtils","../../core/accessorSupport/trackingUtils"],(function(e,t,o,r,i,a,n,l,s,p,c,h,u,d,y,g,_,v,m,w,f,O,T,G,D,M,C,b,V,x,I){"use strict";class P{constructor(){this.regularVertices=null,this.activeVertex=null,this.full=null,this.outline=null,this.circle=null,this.rectangle=null}}e.DrawGraphicTool=class extends(r.EventedMixin(f.InteractiveToolBase)){constructor(e){super(e),this._graphic=null,this._createOperationGeometry=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.labelOptions=new T,this.geometryToPlace=null,this.mode=null,this.snappingManager=null,this.snapToScene=!1,this.tooltip=null,this.tooltipOptions=new G,this._getPointConstraint=n.memoize((e=>e)),this._getPolylineOrPolygonConstraint=n.memoize(((e,t,o)=>D.intersectAll([e,t,o]))),this._getDistanceConstraint=n.memoize(D.getDistanceConstraint),this._getOrientationConstraint=n.memoize(D.getOrientationConstraint),this._getElevationConstraint=n.memoize(D.getElevationConstraint)}initialize(){this.internalGraphicsLayer=new g({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation();const e=this.tooltipOptions,t=this.view.type;this.tooltipInfos={point:new M.DrawPointTooltipInfo({tooltipOptions:e,viewType:t}),polyline:new M.DrawPolylineTooltipInfo({tooltipOptions:e,viewType:t}),polygon:new M.DrawPolygonTooltipInfo({tooltipOptions:e,viewType:t}),mesh:new M.DrawMeshTooltipInfo({tooltipOptions:e,viewType:t}),rectangle:new M.DrawRectangleTooltipInfo({tooltipOptions:e}),circle:new M.DrawCircleTooltipInfo({tooltipOptions:e})},this.addHandles([this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e))),s.watch((()=>this.cursor),(e=>{this.drawOperation.cursor=e}),s.syncAndInitial),s.watch((()=>this.tooltipOptions.enabled),(e=>{this.tooltip=e?new C.Tooltip({view:this.view,info:this._tooltipInfo}):a.destroyMaybe(this.tooltip)}),s.syncAndInitial),I.autorun((()=>this._updateTooltipInfo()))]),this.finishToolCreation()}destroy(){this.drawOperation=a.destroyMaybe(this.drawOperation),this.tooltip=a.destroyMaybe(this.tooltip),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=a.destroyMaybe(this.internalGraphicsLayer),this._set("view",null)}get _defaultElevation(){return l.createLength(this.defaultZ,"meters")}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(e){this._set("centered",e),this._updateGraphic()}get cursor(){return this._get("cursor")}set cursor(e){this._set("cursor",e)}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(e){this._set("graphicSymbol",e),null!=this._graphic&&(this._graphic.symbol=e)}get updating(){return this.drawOperation?.updating??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(e){const t=this._tooltipInfo;if("key-down"===e.type&&e.key===O.tooltipKeys.enterInputMode&&null!=t&&t.editableFields.length>0&&this.tooltipOptions.inputEnabled)return t.enterInputMode(),void e.stopPropagation();this.drawOperation.onInputEvent(e)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_destroyAllVisualisations(){this.removeHandles(S.outline),this.removeHandles(S.regularVertices),this.removeHandles(S.activeVertex),this.removeHandles(z)}_createOrUpdateGraphic(e){if(null!=this._graphic)return this.updateGraphicGeometry(this._graphic,e),this._graphic;const t=this._graphic=new o({...this.graphicProperties,symbol:this.graphicSymbol});return this.updateGraphicGeometry(t,e),this.internalGraphicsLayer.add(t),this.addHandles(this.initializeGraphic(t)),this.notifyChange("graphic"),this.addHandles(i.makeHandle((()=>{this.internalGraphicsLayer.remove(t),a.destroyMaybe(t),this._graphic===t&&(this._graphic=null)})),z),t}updateGraphicGeometry(e,t){e.geometry=t}_getCreateOperationGeometry(e={operationComplete:!1}){const{drawOperation:t}=this;if(null==t||0===t.numVertices)return null;const{coordinateHelper:o,view:r}=t,i=t.stagedVertex,a=t.committedVertices,n=a.slice(),l=null!=i;l&&n.push(o.pointToArray(i));const s=l?o.pointToArray(i):a.splice(-1)[0],p=n.length,c=r.spatialReference,h="3d"===r.type&&"global"===r.viewingMode,u=new P;switch(this.geometryType){case"point":case"mesh":u.regularVertices=a,u.activeVertex=s,u.full=o.arrayToPoint(n[0]);break;case"multipoint":u.regularVertices=a,u.activeVertex=s,p>0&&(u.full=v.createMultipoint(n,c));break;case"polyline":u.regularVertices=a,u.activeVertex=s,p>0&&(u.full=v.createPolyline([n],c,h));break;case"polygon":u.regularVertices=a,u.activeVertex=s,p>0&&(u.full=v.createPolygon([n],c,h,!0));break;case"circle":if(p>0){const t=w.createViewAlignedCoordinateSystem(r,n[0]);if(1===p&&e.operationComplete){const e=n[0],o=t.makeMapPoint(e[0]+E*r.resolution,e[1]);u.circle=v.createCircle([e,o],t,!0),u.full=null!=u.circle?u.circle.geometry:null}else 2===p&&(this.forceUniformSize?(u.circle=v.createCircle(n,t,this.centered),u.full=null!=u.circle?u.circle.geometry:null):(u.rectangle=v.createEllipse(n,t,this.centered),u.full=u.rectangle.geometry))}break;case"rectangle":if(p>0){const t=w.createViewAlignedCoordinateSystem(r,n[0]);if(1===p&&e.operationComplete){const e=n[0],o=t.makeMapPoint(e[0]+E*r.resolution,e[1]);u.rectangle=v.createSquare([e,o],t,!0),u.full=u.rectangle.geometry}else 2===p&&(u.rectangle=this.forceUniformSize?v.createSquare(n,t,this.centered):v.createRectangle(n,t,this.centered),u.full=u.rectangle.geometry)}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":u.outline=p>1?v.createPolyline([n],c,h):null;break;case"polygon":u.outline=p>1?v.createPolygon([n],c,h):null;break;case"circle":case"rectangle":u.outline="polygon"===u.full?.type?v.createPolygon(u.full.rings,c,h):null}return u}initializeGraphic(e){return i.makeHandle()}onComplete(e){this._updateGraphic();let t=null;if(this.drawOperation.isCompleted){const e=this._getCreateOperationGeometry({operationComplete:!0});null!=e&&(t=this._createOrUpdateGraphic(e.full).clone())}this._createOperationGeometry=null,this.emit("complete",{graphic:t,...e})}onCursorUpdate(e){this._updateGraphic(),this.emit("cursor-update",e)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(e){this._updateGraphic(),this._clearConstraints(),this.emit("vertex-add",e)}onVertexRemove(e){this._updateGraphic(),this._clearConstraints(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateGraphic(),this.emit("vertex-update",e)}_updateGraphic(){const e=this._getCreateOperationGeometry();this._createOperationGeometry=e,null!=e?(null!=e.outline?this.addHandles(this.onOutlineChanged(e.outline),S.outline):this.removeHandles(S.outline),null!=e.regularVertices?this.addHandles(this.onRegularVerticesChanged(e.regularVertices),S.regularVertices):this.removeHandles(S.regularVertices),null!=e.activeVertex?this.addHandles(this.onActiveVertexChanged(e.activeVertex),S.activeVertex):this.removeHandles(S.activeVertex),null!=e.full?this._createOrUpdateGraphic(e.full):this.removeHandles(z)):this._destroyAllVisualisations()}get _tooltipInfo(){const{drawOperation:e,graphic:t,view:o}=this;if(!e)return null;const r=this.tooltipInfos,i=t?.geometry?.type;switch(this.geometryType){case"point":return"2d"===o.type&&0===this.defaultZ?null:"point"===i?r.point:null;case"polyline":return"polyline"===i?r.polyline:null;case"polygon":return"polygon"===i?r.polygon:null;case"rectangle":return"polygon"===i?r.rectangle:null;case"circle":return"polygon"===i?r.circle:null;case"mesh":return"mesh"===i?r.mesh:null;default:return null}}_updateTooltipInfo(){const{_tooltipInfo:e,tooltip:t}=this;if(e&&t){switch(e.type){case"draw-point":this._updateDrawPointTooltipInfo(e);break;case"draw-polyline":this._updateDrawPolylineTooltipInfo(e);break;case"draw-polygon":this._updateDrawPolygonTooltipInfo(e);break;case"draw-rectangle":this._updateDrawRectangleTooltipInfo(e);break;case"draw-circle":this._updateDrawCircleTooltipInfo(e);break;case"draw-mesh":this.updateDrawMeshTooltipInfo(e)}t.info=e}}_updateDrawPointTooltipInfo(e){const{drawOperation:t,graphic:o,view:r,tooltipOptions:i}=this,{elevationInfo:a,stagedVertex:n}=t;if(e.tooltipOptions=i,e.viewType=r.type,e.helpMessage=m.getDrawHelpMessage("point",o?.geometry),this.updateElevation(e.elevation),!n)return void(t.constraint=void 0);const l=t.coordinateHelper.spatialReference;t.constraint=this._getPointConstraint(this._getElevationConstraint(e.elevation.committed,l,r,a))}_updateDrawPolylineTooltipInfo(e){const t=this._createOperationGeometry,o=null!=t?t.full:null;if("polyline"!==o?.type)return;const{drawOperation:r,tooltipOptions:i,view:a}=this,{lastVertex:n,stagedVertex:s}=r;this._updatePolylineOrPolygonCommon(e,s);const p=x.autoLengthByElevationMode(o,this._elevationMode);e.totalLength.actual=p??l.zeroMeters,e.totalLength.hidden=null==length||!n,e.tooltipOptions=i,e.viewType=a.type,e.helpMessage=m.getDrawHelpMessage("polyline",o),this.updateElevation(e.elevation)}_updateDrawPolygonTooltipInfo(e){const t=this._createOperationGeometry,o=null!=t?t.full:null;if("polygon"!==o?.type)return;const{drawOperation:r,tooltipOptions:i,view:a}=this,{lastVertex:n}=r;let s=r.stagedVertex;"polygon"===o?.type&&n&&!s&&(s=o.getPoint(0,o.rings[0].length-1)),this._updatePolylineOrPolygonCommon(e,s);const p=V.autoAreaByElevationMode(o,this._elevationMode);e.area.actual=p??l.zeroSquareMeters,e.area.hidden=null==p&&!n,e.tooltipOptions=i,e.viewType=a.type,e.helpMessage=m.getDrawHelpMessage("polygon",o),this.updateElevation(e.elevation)}_updatePolylineOrPolygonCommon(e,t){const{view:o,drawOperation:r}=this,{elevationInfo:i,lastVertex:a}=r;if(!a||!t)return e.distance.hidden=!0,e.orientation.hidden=!0,void(r.constraint=void 0);const n=x.autoDirectDistanceByElevationModeBetweenPoints(a,t,this._elevationMode);e.distance.actual=n??l.zeroMeters,e.distance.hidden=!1;const s=b.orientationBetweenPoints(a,t);e.orientation.actual=s??l.zeroDegrees,e.orientation.hidden=!1;const p=r.coordinateHelper.spatialReference;r.constraint=this._getPolylineOrPolygonConstraint(this._getDistanceConstraint(a,e.distance.committed,o,i),this._getOrientationConstraint(a,e.orientation.committed,o,i),this._getElevationConstraint(e.elevation.committed,p,o,i))}updateDrawMeshTooltipInfo(e){}_updateDrawRectangleTooltipInfo(e){e.tooltipOptions=this.tooltipOptions,e.xSize=this._xSize??l.zeroMeters,e.ySize=this._ySize??l.zeroMeters,e.area=this._fullGeometryArea??l.zeroSquareMeters}_updateDrawCircleTooltipInfo(e){const{forceUniformSize:t}=this;e.tooltipOptions=this.tooltipOptions,e.radius=t?this._circleRadius??l.zeroMeters:null,e.xSize=t?null:this._xSize??l.zeroMeters,e.ySize=t?null:this._ySize??l.zeroMeters,e.area=this._fullGeometryArea??l.zeroSquareMeters}get _circleRadius(){const e=this._createOperationGeometry;return null!=e?.circle?.center&&null!=e.circle.edge?x.autoHorizontalDistanceByElevationModeBetweenPoints(e.circle.center,e.circle.edge,this._elevationMode):null}get _xSize(){const e=this._createOperationGeometry?.rectangle?.midpoints;return null!=e?x.autoHorizontalDistanceByElevationModeBetweenPoints(e.left,e.right,this._elevationMode):null}get _ySize(){const e=this._createOperationGeometry?.rectangle?.midpoints;return null!=e?x.autoHorizontalDistanceByElevationModeBetweenPoints(e.top,e.bottom,this._elevationMode):null}get _fullGeometryArea(){const e=this._createOperationGeometry?.full;return"polygon"!==e?.type?null:V.autoAreaByElevationMode(e,this._elevationMode)}updateElevation(e){e.actual=this._vertexTooltipElevation}get _vertexTooltipElevation(){const{tooltipOptions:e,view:t,drawOperation:o}=this;if(null==o)return this._defaultElevation;const r=o.stagedVertex??o.lastVertex;if(null==r||"2d"===t.type)return this._defaultElevation;const i={mode:e.elevation.mode,offset:0},a=(_.getConvertedElevation(t,r,o.elevationInfo,i)??0)*p.getMetersPerVerticalUnitForSR(r.spatialReference);return l.createLength(a,"meters")}get _elevationMode(){return this.drawOperation.isDraped?"on-the-ground":"absolute-height"}_clearConstraints(){for(const[,e]of Object.entries(this.tooltipInfos))e.unlockAllFields()}},t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_createOperationGeometry",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_defaultElevation",null),t.__decorate([c.property({value:!0})],e.DrawGraphicTool.prototype,"centered",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"cursor",null),t.__decorate([c.property({nonNullable:!0})],e.DrawGraphicTool.prototype,"defaultZ",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"drawOperation",void 0),t.__decorate([c.property({value:!0})],e.DrawGraphicTool.prototype,"enabled",null),t.__decorate([c.property({value:!0})],e.DrawGraphicTool.prototype,"forceUniformSize",null),t.__decorate([c.property({constructOnly:!0})],e.DrawGraphicTool.prototype,"geometryType",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"graphic",null),t.__decorate([c.property({constructOnly:!0})],e.DrawGraphicTool.prototype,"graphicProperties",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"graphicSymbol",null),t.__decorate([c.property({constructOnly:!0})],e.DrawGraphicTool.prototype,"hasZ",void 0),t.__decorate([c.property({constructOnly:!0,type:T})],e.DrawGraphicTool.prototype,"labelOptions",void 0),t.__decorate([c.property({constructOnly:!0})],e.DrawGraphicTool.prototype,"geometryToPlace",void 0),t.__decorate([c.property({constructOnly:!0})],e.DrawGraphicTool.prototype,"mode",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"snappingManager",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"snapToScene",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"tooltip",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"tooltipInfos",void 0),t.__decorate([c.property({constructOnly:!0,type:G})],e.DrawGraphicTool.prototype,"tooltipOptions",void 0),t.__decorate([c.property({readOnly:!0})],e.DrawGraphicTool.prototype,"type",void 0),t.__decorate([c.property({readOnly:!0})],e.DrawGraphicTool.prototype,"updating",null),t.__decorate([c.property({constructOnly:!0,nonNullable:!0})],e.DrawGraphicTool.prototype,"view",void 0),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_tooltipInfo",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_circleRadius",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_xSize",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_ySize",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_fullGeometryArea",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_vertexTooltipElevation",null),t.__decorate([c.property()],e.DrawGraphicTool.prototype,"_elevationMode",null),e.DrawGraphicTool=t.__decorate([y.subclass("esri.views.draw.DrawGraphicTool")],e.DrawGraphicTool);const z="create-operation-graphic",S={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function k(e){switch(e){case"point":case"polyline":case"polygon":case"multipoint":return e;case"circle":case"rectangle":return"segment";case"mesh":return"point"}}const E=48;e.CreateOperationGeometry=P,e.geometryTypeToDrawOperationGeometryType=k,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
