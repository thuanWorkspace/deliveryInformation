/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../geometry","../../../Graphic","../../../core/asyncUtils","../../../core/Collection","../../../core/Error","../../../core/Evented","../../../core/Logger","../../../core/maybe","../../../core/quantityUtils","../../../core/reactiveUtils","../../../core/screenUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/coordsUtils","../../../layers/GraphicsLayer","../../../symbols/SimpleMarkerSymbol","../../ViewingMode","../../2d/interactive/SnappingVisualizer2D","./drawUtils","./GraphicMover","./HighlightHelper","./layerUtils","./settings","../../input/InputManager","../../interactive/keybindings","../../interactive/editGeometry/EditGeometryOperations","../../interactive/sketch/SketchTooltipOptions","../../interactive/snapping/SnappingContext","../../interactive/tooltip/Tooltip","../../interactive/tooltip/TranslateTooltipInfos","../../support/automaticAreaMeasurementUtils","../../support/automaticLengthMeasurementUtils","../../../geometry/Polyline","../../../geometry/Point"],(function(e,t,i,s,o,r,n,a,h,p,c,l,d,y,v,_,m,g,u,x,f,G,b,M,V,w,S,E,k,I,T,C,O,R,H,U,A,z){"use strict";class D{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-start"}}class F{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape"}}class L{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-stop"}}class P{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-start"}}class q{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move"}}class B{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-stop"}}class K{constructor(e){this.added=e,this.type="vertex-select"}}class N{constructor(e){this.removed=e,this.type="vertex-deselect"}}class W{constructor(e,t,i,s){this.added=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class j{constructor(e,t,i,s){this.removed=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const J=S.settings.reshapeGraphics,Q={vertices:{default:new x({style:"circle",size:J.vertex.size,color:J.vertex.color,outline:{color:J.vertex.outlineColor,width:1}}),hover:new x({style:"circle",size:J.vertex.hoverSize,color:J.vertex.hoverColor,outline:{color:J.vertex.hoverOutlineColor,width:1}}),selected:new x({style:"circle",size:J.selected.size,color:J.selected.color,outline:{color:J.selected.outlineColor,width:1}})},midpoints:{default:new x({style:"circle",size:J.midpoint.size,color:J.midpoint.color,outline:{color:J.midpoint.outlineColor,width:1}}),hover:new x({style:"circle",size:J.midpoint.size,color:J.midpoint.color,outline:{color:J.midpoint.outlineColor,width:1}})}};let X=class extends n.EventedAccessor{constructor(e){super(e),this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this._tooltip=null,this._translateGraphicTooltipInfo=null,this._translateVertexTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new o,this.midpointSymbol=new x({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=[],this.snappingManager=null,this.symbols=Q,this.tooltipOptions=new T,this.type="reshape",this.vertexGraphics=new o,this.view=null}initialize(){const e=this.view;this._highlightHelper=new V({view:e}),this._setup(),this.addHandles([c.when((()=>e?.ready),(()=>{const{layer:e,view:t}=this;w.addUniqueLayer(t,e),this.addHandles(t.on("key-down",(e=>this._keyDownHandler(e)),E.ViewEventPriorities.TOOL))}),{once:!0,initial:!0}),c.pausable((()=>this.graphic),(()=>this.refresh())),c.pausable((()=>this.layer),((e,t)=>{t&&(this._clearSelection(),this._resetGraphics(t)),this.refresh()})),c.pausable((()=>this.enableMidpoints),(()=>this.refresh())),c.watch((()=>this.tooltipOptions.enabled),(e=>{this._tooltip=e?new O.Tooltip({view:this.view}):h.destroyMaybe(this._tooltip)}),c.syncAndInitial),c.watch((()=>this.view.effectiveTheme.accentColor),(()=>this._updateSymbolsForTheme()),c.initial)])}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this._tooltip=h.destroyMaybe(this._tooltip)}set highlightsEnabled(e){this._highlightHelper?.removeAll(),this._set("highlightsEnabled",e),this._setUpHighlights()}get state(){const e=this.view.ready,t=!(!this.graphic||!this.layer);return e&&t?"active":e?"ready":"disabled"}isUIGraphic(e){const t=[];return this.graphic&&t.push(this.graphic),t.concat(this.vertexGraphics.items,this.midpointGraphics.items),t.length>0&&t.includes(e)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_setup(){const{graphic:e,layer:t}=this;if(!t||null==e?.geometry)return;const i=e.geometry;"mesh"!==i.type&&"extent"!==i.type?("polygon"===i.type&&g.closeRingsAndFixWinding(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)}_setUpGeometryHelper(){const e=this.graphic.geometry;if(null==e||"mesh"===e.type||"extent"===e.type)return void this._logGeometryTypeError();const t="multipoint"===e.type?new A({paths:e.points,spatialReference:e.spatialReference}):e;this._editGeometryOperations=I.EditGeometryOperations.fromGeometry(t,f.ViewingMode.Local)}_saveSnappingContextForHandle(e,t){this._snappingGraphicsLayer=new u({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer),this._snappingContext=new C.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:t.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new G.SnappingVisualizer2D(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(e)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),null!=this._snappingGraphicsLayer&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=h.destroyMaybe(this._editGeometryOperations),this._snappingTask=h.abortMaybe(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(e){this._removeMidpointGraphics(e),this._removeVertexGraphics(e),this._set("selectedVertices",[])}_removeMidpointGraphics(e){const t=e||this.layer;t&&t.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((e=>e.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(e){const t=e||this.layer;t&&t.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((e=>e.destroy())),this.vertexGraphics.removeAll()}_getCoordinatesForUI(e){const t=g.geometryToCoordinates(e.clone());if("polygon"===e.type)for(const i of t){const e=i[i.length-1];i[0][0]===e[0]&&i[0][1]===e[1]&&i.length>2&&i.pop()}return t}_setupGraphics(){const e=this.graphic.geometry;if(null!=e&&("polyline"===e.type||"polygon"===e.type)){const t=this._getCoordinatesForUI(e);this.enableMidpoints&&this._setUpMidpointGraphics(t),this.enableVertices&&this._setUpVertexGraphics(t)}}_setUpMidpointGraphics(e){this._removeMidpointGraphics();const t=this._createMidpointGraphics(e);this.midpointGraphics.addMany(t),this.layer.addMany(t)}_setUpVertexGraphics(e){this._removeVertexGraphics();const t=this._createVertexGraphics(e);this.vertexGraphics.addMany(t),this._storeRelatedVertexIndices(),this.layer.addMany(t)}_createVertexGraphics(e){const{_graphicAttributes:t,symbols:s,view:{spatialReference:o}}=this,r=[];return e?.forEach(((e,n)=>{e.forEach(((e,a)=>{const[h,p,c]=e;r.push(new i({geometry:new z({x:h,y:p,z:c,spatialReference:o}),symbol:s?.vertices?.default,attributes:{...t,pathIndex:n,pointIndex:a}}))}))})),r}_createMidpointGraphics(e){const{_graphicAttributes:t,symbols:s,view:{spatialReference:o}}=this,r=[];return e?.forEach(((e,n)=>{e.forEach(((a,h)=>{const[p,c,l]=a,d=e[h+1]?h+1:0;if("polygon"===this.graphic.geometry?.type||0!==d){const[a,y,v]=e[d],[_,m,u]=g.getMidpoint([p,c,l],[a,y,v]);r.push(new i({geometry:new z({x:_,y:m,z:u,spatialReference:o}),symbol:s.midpoints.default,attributes:{...t,pathIndex:n,pointIndexStart:h,pointIndexEnd:d}}))}}))})),r}_updateSymbolsForTheme(){const e=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",e),hover:this.symbols.vertices.hover?.clone().set("color",e)},midpoints:{...this.symbols.midpoints}};for(const t of this.vertexGraphics)this._isSelected(t)?t.symbol=this.symbols.vertices.selected:this._hoverGraphic===t?t.symbol=this.symbols.vertices.hover:t.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const e=this.vertexGraphics.items;if(!e)return;const t=e.map((({geometry:e})=>({x:e.x,y:e.y})));for(let i=0;i<t.length;i++){const s=[];for(let e=0;e<t.length;e++){if(i===e)continue;const o=t[i],r=t[e];o.x===r.x&&o.y===r.y&&s.push(e)}e[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:e,graphic:t,midpointGraphics:i,vertexGraphics:s,view:o}=this,r=s.concat(i).items;e&&r.push(t),this._mover=new M({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:r,view:o,callbacks:{onGraphicClick:e=>this._onGraphicClickCallback(e),onGraphicMoveStart:e=>this._onGraphicMoveStartCallback(e),onGraphicMove:e=>this._onGraphicMoveCallback(e),onGraphicMoveStop:e=>this._onGraphicMoveStopCallback(e),onGraphicPointerOver:e=>this._onGraphicPointerOverCallback(e),onGraphicPointerOut:e=>this._onGraphicPointerOutCallback(e)}})}_onGraphicClickCallback(e){e.viewEvent.stopPropagation();const t=e.graphic;if(t===this.graphic)this.clearSelection(),this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e);else if(this._isMidpoint(t)){if(2===e.viewEvent.button)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(t);this.refresh(),this._emitVertexAddEvent([t],i,s)}else if(this._isVertex(t))if(e.viewEvent.stopPropagation(),2===e.viewEvent.button)this._removeVertices(t);else{e.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(t)?this._removeFromSelection(t,!0):this._addToSelection(t)}}_setUpOperation(e){const{graphic:t,dx:i,dy:s}=e,o=t===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(t,e),this._activeOperationInfo={target:this.graphic,mover:t,operationType:o?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(e){const{dx:t,dy:i,graphic:s}=e;if(s===this.graphic){const{geometry:o}=s;return this._setUpOperation(e),this._emitMoveStartEvent(t,i),void(null!=o&&"point"===o.type&&this._onHandleMove(s,t,i,e,(()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(t,i)})))}if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const e=this.graphic.clone(),t=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],e,t)}this._addToSelection(s)}this._setUpOperation(e),this._emitReshapeStartEvent(s),this._onHandleMove(s,t,i,e,(()=>{this._updateTooltip(s,e.viewEvent),this._emitReshapeEvent(s)}))}_onGraphicMoveCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:o}=e;t.totalDx+=i,t.totalDy+=s;const{operationType:r}=t,{geometry:n}=o;if(null!=n)if("move"!==r)this._onHandleMove(o,i,s,e,(()=>{this._updateTooltip(o,e.viewEvent),this._emitReshapeEvent(o)}));else if("point"===n.type)this._onHandleMove(o,i,s,e,(()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}));else if("polyline"===n.type||"polygon"===n.type){const t=this._getCoordinatesForUI(n);this._updateVertexGraphicLocations(t),this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}}_onGraphicMoveStopCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:o}=e,{operationType:r}=t;t.totalDx+=i,t.totalDy+=s,this._onHandleMove(o,i,s,e,(()=>"move"===r?this._emitMoveStopEvent():this._emitReshapeStopEvent(o))),this._isMidpoint(o)?this.refresh():(this._updateTooltip(this._isVertex(o)?o:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(e){const t=this.view.spatialReference;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:o}=i.attributes,[r,n,a]=e[s][o];i.geometry=new z({x:r,y:n,z:a,spatialReference:t})}this._updateMidpointGraphicLocations(e)}_updateMidpointGraphicLocations(e){for(const t of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:o}=t.attributes,[r,n,a]=e[i][s],[h,p,c]=e[i][o],[l,d,y]=g.getMidpoint([r,n,a],[h,p,c]);t.geometry=new z({x:l,y:d,z:y,spatialReference:this.view.spatialReference})}}_getIndicesForVertexGraphic({attributes:e}){return[e?.pathIndex||0,e?.pointIndex||0]}_getVertexFromEditGeometry(e){const[t,i]=this._getIndicesForVertexGraphic(e);return this._editGeometryOperations.data.components[t].vertices[i]}_onHandleMove(e,t,i,o,r){h.abortMaybe(this._snappingTask);const n=this._snappingContext;if(!n)return;const a=e.geometry,p="graphic-move-stop"===o.type;if(null!=this.snappingManager&&this.selectedVertices.length<2&&!p){const o=this.snappingManager;this._stagedVertex=o.update({point:a,context:n}),this._syncGeometryAfterVertexMove(e,new z(this._stagedVertex),t,i,p),r(),this._snappingTask=s.createTask((async s=>{const h=await o.snap({point:a,context:n,signal:s});h.valid&&(this._stagedVertex=h.apply(),this._syncGeometryAfterVertexMove(e,new z(this._stagedVertex),t,i,p),r())}))}else{const s=null!=this._stagedVertex?new z(this._stagedVertex):a;this._syncGeometryAfterVertexMove(e,s,t,i,p),r()}}async _syncGeometryAfterVertexMove(e,t,i,s,o=!1){const r=this._editGeometryOperations.data.geometry;if("point"===r.type)e.geometry=t;else if("mesh"===r.type)e.geometry=r.centerAt(t),e.notifyGeometryChanged();else{const{x:n,y:a,z:h}=t,[p,c]=this._getIndicesForVertexGraphic(e);let l=g.geometryToCoordinates(r);const d=l[p].length-1,y=null!=h?[n,a,h]:[n,a];l[p][c]=y,"polygon"===r.type&&(0===c?l[p][d]=y:c===d&&(l[p][0]=y)),this._isVertex(e)&&(l=this._moveRelatedCoordinates(l,e,y),l=this._moveSelectedHandleCoordinates(l,e,i,s,"polygon"===r.type),this._updateMidpointGraphicLocations(l)),this.graphic.geometry=r.clone();const v=this._getVertexFromEditGeometry(e),_=n-v.pos[0],m=a-v.pos[1];this._editGeometryOperations.moveVertices([v],_,m,0),o&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(e),t):e.geometry=t)}}_moveRelatedCoordinates(e,t,i){const{relatedGraphicIndices:s}=t.attributes;for(const o of s){const s=this.vertexGraphics.at(o),{pathIndex:r,pointIndex:n}=s.attributes;e[r][n]=i,s.geometry=t.geometry}return e}_moveSelectedHandleCoordinates(e,t,i,s,o){for(const r of this.selectedVertices)if(r!==t){const{pathIndex:t,pointIndex:n,relatedGraphicIndices:a}=r.attributes,h=b.cloneMove(r.geometry,i,s,this.view),p=e[t].length-1;e[t][n]=[h.x,h.y],r.geometry=h,o&&(0===n?e[t][p]=[h.x,h.y]:n===p&&(e[t][0]=[h.x,h.y]));for(const i of a){const t=this.vertexGraphics.at(i),{pathIndex:s,pointIndex:o}=t.attributes;e[s][o]=[h.x,h.y],t.geometry=h}}return e}_onGraphicPointerOverCallback(e){const t=e.graphic;this._hoverGraphic=t;const i=this._isVertex(t);i&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.hover),this._updateTooltip(i?t:null),this._updateHoverCursor(t)}_onGraphicPointerOutCallback(e){const t=e.graphic;this._hoverGraphic=null,this._isVertex(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(e){const{_graphicAttributes:t,graphic:i}=this,s=i.geometry;if(null==s||"polygon"!==s.type&&"polyline"!==s.type)return[];const o=s.clone(),r=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:h}=e.attributes,{x:p,y:c,z:l}=e.geometry,d=0===h?a+1:h,y=g.geometryToCoordinates(o);return y[n].splice(d,0,null!=l?[p,c,l]:[p,c]),e.attributes={...t,pathIndex:n,pointIndex:d,relatedGraphicIndices:[]},r.push({coordinates:y[n][d],componentIndex:n,vertexIndex:d}),this.graphic.geometry=o,r}_addToSelection(e){e instanceof i&&(e=[e]);for(const t of e)t.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(e)),this._emitSelectEvent(e)}_removeFromSelection(e,t){const{vertices:s}=this.symbols,o=t?s.hover:s.default;e instanceof i&&(e=[e]);for(const i of e)this.selectedVertices.splice(this.selectedVertices.indexOf(i),1),this._set("selectedVertices",this.selectedVertices),i.set("symbol",o);this._emitDeselectEvent(e)}_clearSelection(){if(this.selectedVertices.length){const e=this.selectedVertices;for(const t of this.selectedVertices)t.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]),this._emitDeselectEvent(e)}}_keyDownHandler(e){k.sketchKeys.delete.includes(e.key)&&!e.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(e){const t=this.graphic.geometry;if(null==t||"polygon"!==t.type&&"polyline"!==t.type)return;if("polygon"===t.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;e instanceof i&&(e=[e]);const s=this.graphic.clone(),o=t.clone();let r=g.geometryToCoordinates(o);const n=[];e instanceof i&&(e=[e]);for(const i of e){const{x:e,y:t}=i.geometry;for(let i=0;i<r.length;i++){const s=r[i];for(let o=0;o<s.length;o++){const[a,h]=s[o];e===a&&t===h&&(n.push({coordinates:r[i][o],componentIndex:i,vertexIndex:o}),r[i].splice(Number(o),1))}}}if("polygon"===o.type)r=r.filter((e=>{if(e.length<2)return!1;const[t,i]=e[0],[s,o]=e[e.length-1];return(2!==e.length||t!==s||i!==o)&&(t===s&&i===o||e.push(e[0]),!0)})),o.rings=r;else{for(const e of r)1===e.length&&r.splice(r.indexOf(e),1);o.paths=r}this.graphic.geometry=o,this.refresh(),this._emitVertexRemoveEvent(e,s,n)}_isVertex(e){return this.vertexGraphics.includes(e)}_isSelected(e){return this._isVertex(e)&&this.selectedVertices.includes(e)}_isMidpoint(e){return this.midpointGraphics.includes(e)}_updateHoverCursor(e){this.view.cursor=this._isMidpoint(e)?"copy":"move"}_updateTooltip(e,t){null!=this._tooltip&&(e?e===this.graphic?this._updateMoveGraphicTooltip(t):this._updateMoveVertexTooltip(t):this._tooltip.clear())}_updateMoveGraphicTooltip(e){const{_tooltip:t,tooltipOptions:i,view:s}=this;if(null==t)return;const o=this._translateGraphicTooltipInfo??(this._translateGraphicTooltipInfo=new R.TranslateGraphicTooltipInfo({tooltipOptions:i}));if(o.clear(),o.tooltipOptions=i,e){const{x:t,y:i}=e.origin,r=s.toMap(e),n=s.toMap(l.createScreenPoint(t,i)),a=U.autoDistanceBetweenPoints2D(n,r);o.distance=null!=a?a:p.zeroMeters}t.info=o}_updateMoveVertexTooltip(e){const{_tooltip:t,graphic:{geometry:i},tooltipOptions:s,view:o}=this;if(null==t)return;const r=this._translateVertexTooltipInfo??(this._translateVertexTooltipInfo=new R.TranslateVertexTooltipInfo({tooltipOptions:s}));if(r.clear(),r.tooltipOptions=s,"polygon"===i?.type?r.area=H.autoArea2D(i):"polyline"===i?.type&&(r.totalLength=U.autoLength2D(i)),e){const{x:t,y:i}=e.origin,s=o.toMap(e),n=o.toMap(l.createScreenPoint(t,i)),a=U.autoDistanceBetweenPoints2D(n,s);r.distance=null!=a?a:p.zeroMeters}t.info=r}_emitMoveStartEvent(e,t){const i=new P(this.graphic,e,t);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(e,t){const i=new q(this.graphic,e,t);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const e=this._activeOperationInfo;if(!e)return;const{totalDx:t,totalDy:i}=e,s=new B(this.graphic,t,i);this.emit("move-stop",s),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(s)}_emitReshapeStartEvent(e){const t=new D(this.graphic,e,this.selectedVertices);this.emit("reshape-start",t),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(t)}_emitReshapeEvent(e){const t=new F(this.graphic,e,this.selectedVertices);this.emit("reshape",t),this.callbacks.onReshape&&this.callbacks.onReshape(t)}_emitReshapeStopEvent(e){const t=new L(this.graphic,e,this.selectedVertices);this.emit("reshape-stop",t),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(t)}_emitSelectEvent(e){const t=new K(e);this.emit("select",t),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(t)}_emitDeselectEvent(e){const t=new N(e);this.emit("deselect",t),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(t)}_emitVertexAddEvent(e,t,i){const s=new W(e,this.graphic,t,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)}_emitVertexRemoveEvent(e,t,i){const s=new j(e,this.graphic,t,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)}_logGeometryTypeError(){a.getLogger(this).error(new r("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};e.__decorate([d.property()],X.prototype,"_tooltip",void 0),e.__decorate([d.property()],X.prototype,"_translateGraphicTooltipInfo",void 0),e.__decorate([d.property()],X.prototype,"_translateVertexTooltipInfo",void 0),e.__decorate([d.property()],X.prototype,"callbacks",void 0),e.__decorate([d.property()],X.prototype,"enableMidpoints",void 0),e.__decorate([d.property()],X.prototype,"enableMovement",void 0),e.__decorate([d.property()],X.prototype,"enableVertices",void 0),e.__decorate([d.property()],X.prototype,"graphic",void 0),e.__decorate([d.property({value:!0})],X.prototype,"highlightsEnabled",null),e.__decorate([d.property()],X.prototype,"layer",void 0),e.__decorate([d.property({readOnly:!0})],X.prototype,"midpointGraphics",void 0),e.__decorate([d.property()],X.prototype,"midpointSymbol",void 0),e.__decorate([d.property({readOnly:!0})],X.prototype,"selectedVertices",void 0),e.__decorate([d.property()],X.prototype,"snappingManager",void 0),e.__decorate([d.property({readOnly:!0})],X.prototype,"state",null),e.__decorate([d.property()],X.prototype,"symbols",void 0),e.__decorate([d.property({type:T})],X.prototype,"tooltipOptions",void 0),e.__decorate([d.property({readOnly:!0})],X.prototype,"type",void 0),e.__decorate([d.property({readOnly:!0})],X.prototype,"vertexGraphics",void 0),e.__decorate([d.property()],X.prototype,"view",void 0),X=e.__decorate([m.subclass("esri.views.draw.support.Reshape")],X);return X}));
