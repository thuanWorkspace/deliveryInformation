/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/CloudsComposition.glsl","../webgl-engine/core/shaderTechnique/ReloadableShaderModule","../webgl-engine/core/shaderTechnique/ShaderTechnique","../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration","../webgl-engine/lib/DefaultVertexAttributeLocations","../webgl-engine/lib/Program","../../webgl/enums","../../webgl/renderState"],(function(e,n,r,i,o,t,a,l,d,u){"use strict";class s extends o.ShaderTechnique{constructor(e){super(e,new t.ShaderTechniqueConfiguration,(()=>this.destroy()))}initializeProgram(e){return new l.Program(e.rctx,s.shader.get().build(),a.Default3D)}initializePipeline(){return u.makePipelineState({blending:u.separateBlendingParams(d.BlendFactor.ONE,d.BlendFactor.ZERO,d.BlendFactor.SRC_ALPHA,d.BlendFactor.ONE),depthTest:{func:d.CompareFunction.LEQUAL},colorWrite:u.defaultColorWriteParams})}}s.shader=new i.ReloadableShaderModule(r.CloudsCompositionShader,(()=>new Promise(((n,r)=>e(["./CloudsComposition.glsl"],n,r))))),n.CloudsCompositionTechnique=s,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})}));
