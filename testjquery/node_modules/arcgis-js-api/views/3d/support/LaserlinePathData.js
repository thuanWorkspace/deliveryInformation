/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/support/DoubleArray","./buffer/glUtil","./buffer/InterleavedLayout","../webgl-engine/lib/VertexArrayObject","../webgl-engine/lib/VertexAttribute","../webgl-engine/shaders/LaserlinePathTechnique","../../webgl/BufferObject","../../webgl/enums"],(function(e,t,r,s,i,u,n,a,o,f,c){"use strict";class l{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=r.create(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=s.newDoubleArray(3*e.length);let r=0;for(const s of e)t[r++]=s[0],t[r++]=s[1],t[r++]=s[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const e=this._buffers[0],r=3*Math.floor(e.length/3/2);t.set(this._origin,e[r],e[r+1],e[r+2])}else t.set(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const t=this._ensureVAO(e);null!=t&&(e.bindVAO(t),e.drawArrays(c.PrimitiveType.TRIANGLES,0,this._count))}dispose(){null!=this._vao&&this._vao.dispose()}_ensureVAO(e){return null==this._buffers?null:(null==this._vao&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,t){const r=this._createDataBuffer(t);return this._dirty=!1,new n.VertexArrayObject(e,o.attributeLocations,{data:i.glLayout(d)},{data:f.BufferObject.createVertex(e,c.Usage.STATIC_DRAW,r)})}_ensureVertexData(e,t){if(!this._dirty)return;const r=this._createDataBuffer(t);e.vertexBuffers.data?.setData(r),this._dirty=!1}_numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}_createDataBuffer(e){const r=e.reduce(((e,t)=>e+this._numberOfRenderVertices(t)),0);this._count=r;const s=d.createBuffer(r),i=this._origin;let u=0,n=0;for(const a of e){for(let e=0;e<a.length;e+=3){const r=t.set(_,a[e],a[e+1],a[e+2]);0===e?n=this._renderCoordsHelper.getAltitude(r):this._renderCoordsHelper.setAltitude(r,n);const o=this._renderCoordsHelper.worldUpAtPosition(r,h),f=u+2*e,c=t.subtract(_,r,i);if(e<a.length-3){s.up.setVec(f,o),s.up.setVec(f+3,o),s.up.setVec(f+5,o);for(let e=0;e<6;e++)s.start.setVec(f+e,c);s.extrude.setValues(f,0,-1),s.extrude.setValues(f+1,1,-1),s.extrude.setValues(f+2,1,1),s.extrude.setValues(f+3,0,-1),s.extrude.setValues(f+4,1,1),s.extrude.setValues(f+5,0,1)}if(e>0){s.up.setVec(f-2,o),s.up.setVec(f-4,o),s.up.setVec(f-5,o);for(let e=-6;e<0;e++)s.end.setVec(f+e,c)}}u+=this._numberOfRenderVertices(a)}return s.buffer}}const h=r.create(),_=r.create(),d=u.newLayout().vec3f(a.VertexAttribute.START).vec3f(a.VertexAttribute.END).vec3f(a.VertexAttribute.UP).vec2f(a.VertexAttribute.EXTRUDE);e.LaserlinePathData=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
