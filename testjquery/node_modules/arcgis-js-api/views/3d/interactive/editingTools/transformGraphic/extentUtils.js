/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/quantityUtils","../../../../../core/unitUtils","../../../../../chunks/vec2","../../../../../chunks/vec3","../../../../../chunks/boundedPlane","../../../../../geometry/support/vectorStacks","../../../../../support/elevationInfoUtils","../geometryUtils","../../../layers/graphics/elevationAlignmentUtils","../../../layers/graphics/ElevationContext","../../../../interactive/editGeometry/support/editPlaneUtils","../../../../support/automaticLengthMeasurementUtils"],(function(t,s,e,o,i,n,a,r,c,l,d,u,g){"use strict";class p{constructor(t,s,e){this._tool=t,this._onDisplayBoundsChanged=s,this.mapBounds=n.create(),this.mapBoundsStart=n.create(),this.displayBounds=n.create(),this._calculateMapBounds(e)}get displayBoundsMargin(){const{view:t,graphic:s}=this._tool,e=t.pointsOfInterest?.centerOnSurfaceFrequent.location??s.geometry?.extent?.center;return e?b*t.pixelSizeAt(e):0}backupMapBounds(){n.copy(this.mapBounds,this.mapBoundsStart)}updateDisplayBounds(){this._calculateDisplayBounds(),this._onDisplayBoundsChanged()}_calculateMapBounds(t){const{view:s,attachmentOrigin:i}=this._tool,n=t.geometry,a=c.mainAxis(n);o.scale(a,a,-1);const r=s.spatialReference,l=n.spatialReference,d=i?s.pixelSizeAt(i)*e.getMetersPerCartesianUnitForSR(r)/e.getMetersPerUnitForSR(l):0,g=v*d;u.calculateOrientedBounds(a,t,g,this.mapBounds)}_calculateDisplayBounds(){const{view:t,attachmentOrigin:s,graphic:e}=this._tool;if(!e.geometry)return;const o=s?.z??l.evaluateElevationAlignmentAtPoint(this.mapBounds.origin,t.elevationProvider,d.ElevationContext.fromElevationInfo(r.getGraphicEffectiveElevationInfo(e)),t.renderCoordsHelper),i=n.copy(this.mapBounds);i.origin[2]=o??0,h(i,t.renderCoordsHelper,e.geometry.spatialReference,this.displayBoundsMargin,this.displayBounds)}}const b=10,v=80;function h(t,s,e,o=0,r){r||(r=n.create()),s.toRenderCoords(t.origin,e,r.origin);const c=a.sv3d.get();i.add(c,t.origin,t.basis1),i.add(c,c,t.basis2),s.toRenderCoords(c,e,c);const l=a.sv3d.get();i.add(l,t.origin,t.basis1),i.subtract(l,l,t.basis2),s.toRenderCoords(l,e,l);const d=a.sv3d.get();i.subtract(d,t.origin,t.basis1),i.subtract(d,d,t.basis2),s.toRenderCoords(d,e,d);const u=a.sv3d.get();i.subtract(u,t.origin,t.basis1),i.add(u,u,t.basis2),s.toRenderCoords(u,e,u);const g=i.lerp(a.sv3d.get(),c,l,.5);i.subtract(g,g,r.origin);const p=i.lerp(a.sv3d.get(),d,u,.5);i.subtract(p,r.origin,p),i.lerp(r.basis1,g,p,.5);const b=i.lerp(a.sv3d.get(),u,c,.5);i.subtract(b,b,r.origin);const v=i.lerp(a.sv3d.get(),l,d,.5);i.subtract(v,r.origin,v),i.lerp(r.basis2,b,v,.5);const h=i.cross(a.sv3d.get(),r.basis1,r.basis2),m=i.cross(h,h,r.basis1);return i.normalize(m,m),i.scale(r.basis2,m,i.dot(r.basis2,m)),i.scale(r.basis1,r.basis1,1+o/i.length(r.basis1)),i.scale(r.basis2,r.basis2,1+o/i.length(r.basis2)),n.updateUnboundedPlane(r),r}function m(t,e,o,n){const r=a.sv3d.get();i.subtract(r,i.subtract(r,t.origin,t.basis1),t.basis2);const c=a.sv3d.get();i.scaleAndAdd(c,r,t.basis1,2);const l=a.sv3d.get();i.scaleAndAdd(l,c,t.basis2,2);const d=a.sv3d.get();i.scaleAndAdd(d,r,t.basis2,2),r[2]=c[2]=l[2]=d[2]=e;const u=n?"on-the-ground":"absolute-height",p=s.max(g.autoHorizontalDistanceByElevationMode(r,c,o,u),g.autoHorizontalDistanceByElevationMode(d,l,o,u)),b=s.max(g.autoHorizontalDistanceByElevationMode(c,l,o,u),g.autoHorizontalDistanceByElevationMode(r,d,o,u));return null==b||null==p?null:[p,b]}t.TransformBounds=p,t.mapPlaneAutoHorizontalSizeByElevationMode=m,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
