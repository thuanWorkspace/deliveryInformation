/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/arrayUtils","../../../../../core/Evented","../../../../../core/handleUtils","../../../../../core/maybe","../../../../../core/quantityUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/UpdatingHandles","../../../../../geometry/Point","../../../../../support/elevationInfoUtils","../../../../ViewingMode","../../Manipulator3D","../../manipulatorUtils","../../SnappingVisualizer3D","../manipulatorUtils","../meshFastUpdateUtils","../visualElementUtils","../manipulations/config","../manipulations/MoveManipulation","../manipulations/moveUtils","./GraphicScaleRotateTransform","./ScaleRotateMeshAdapter","./ScaleRotateObjectSymbol3DAdapter","./undoRecords","../../../layers/graphics/GraphicState","../../../../interactive/dragEventPipeline","../../../../interactive/InteractiveToolBase","../../../../interactive/editGeometry/EditGeometryOperations","../../../../interactive/sketch/SketchTooltipOptions","../../../../interactive/snapping/SnappingContext","../../../../interactive/snapping/SnappingDragPipelineStep","../../../../interactive/tooltip/Tooltip","../../../../interactive/tooltip/TranslateTooltipInfos","../../../../support/automaticLengthMeasurementUtils","../../../../support/euclideanLengthMeasurementUtils"],(function(t,e,a,i,o,n,s,r,l,p,c,h,d,u,_,g,v,M,m,y,T,f,S,R,w,b,G,A,x,I,O,E,D,H,z,U,Z,P,k,C){"use strict";t.GraphicTransformTool=class extends(i.EventedMixin(E.InteractiveToolBase)){constructor(t){super(t),this.enableZ=!0,this.enableRotation=!0,this.enableScaling=!0,this.tooltipOptions=new H,this.type="transform-3d",this._updatingHandles=new d.UpdatingHandles,this._scaleRotate=null,this._tooltip=null,this._translateGraphicTooltipInfo=null,this._translateGraphicXYTooltipInfo=null,this._translateGraphicZTooltipInfo=null}initialize(){const{graphic:t,view:e}=this;this.graphicState=new I.GraphicState({graphic:t}),this.addHandles(r.watch((()=>this.tooltipOptions.enabled),(t=>{this._tooltip=t?new Z.Tooltip({view:e}):n.destroyMaybe(this._tooltip)}),r.syncAndInitial)),this._moveManipulation=new R.MoveManipulation({tool:this,view:e,snapToScene:this.snapToScene,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:this.enableZ&&y.canMoveZ(t),radius:R.MoveManipulation.radiusForSymbol(t.symbol)}),this._moveManipulation.forEachManipulator((e=>this.addHandles(e.events.on("immediate-click",(e=>{this.emit("immediate-click",{...e,graphic:t}),e.stopPropagation()})))));const i=t=>e=>{this.addHandles(e.events.on("focus-changed",(({action:e})=>{const a=this._tooltip;null!=a&&("focus"===e?this._updateMoveTooltip(t):a.clear())})))};this._moveManipulation.xyManipulation.forEachManipulator(i(R.ManipulationType.XY)),this._moveManipulation.xyAxisManipulation.forEachManipulator(i(R.ManipulationType.XY_AXIS)),this._moveManipulation.zManipulation.forEachManipulator(i(R.ManipulationType.Z));const s=_.getGraphicEffectiveElevationInfo(t);this._moveManipulation.elevationInfo=s,this.addHandles(T.meshTransformFastUpdateHandles(this.graphicState));const{geometry:l}=t;if(this._moveManipulation.createGraphicDragPipeline(((a,i,o,n,r)=>{if(null!=l&&a===R.ManipulationType.XY){const{snappingStep:a,cancelSnapping:i}=U.createSnapDragEventPipelineStep({snappingContext:new z.SnappingContext({elevationInfo:s,pointer:r,editGeometryOperations:D.EditGeometryOperations.fromGeometry(new u({spatialReference:l.spatialReference}),e.state.viewingMode),visualizer:new m.SnappingVisualizer3D,excludeFeature:t}),snappingManager:this.snappingManager,updatingHandles:this._updatingHandles,useZ:!1});n=n.next(i),o=o.next(O.sceneSnappingAtProjectedLocation(this.view,s)).next(...a)}return{steps:o=o.next((t=>(this._updateMoveTooltip(a,t),t))),cancel:n}}),this.graphicState,(t=>{const{action:e,graphic:a,dxScreen:i,dyScreen:o}=t,n={graphic:a,dxScreen:i,dyScreen:o};switch(e){case"start":this.emit("graphic-translate-start",n),this.emit("record-undo",{record:this._createGeometryUndoRecord()});break;case"update":this.emit("graphic-translate",n);break;case"end":this.emit("graphic-translate-stop",n)}})),this._moveManipulation.angle=null!=this._scaleRotate?this._scaleRotate.angle:0,this._scaleRotateAdapter=this._createScaleRotateAdapter(),this.addHandles(r.watch((()=>this._scaleRotateAdapter.angle),(()=>this._updateMoveAngle()))),this.enableScaling||this.enableRotation){const t=this.enableScaling&&this.enableRotation?null:this.enableScaling?"scale":"rotate";this._scaleRotate=new b.GraphicScaleRotateTransform({tool:this,mode:t,adapter:this._scaleRotateAdapter,tooltipOptions:this.tooltipOptions}),this.addHandles(this._scaleRotate.events.on("scale-changed",(()=>this._onScaleChanged())))}this.addHandles([f.createVisualElements({view:this.view,graphic:this.graphic,forEachManipulator:t=>this._forEachManipulator(t),onManipulatorsChanged:()=>o.makeHandle()}),this.graphicState.on("changed",(()=>this._onGeometryChanged())),this._hideManipulatorsForGraphicState(),r.watch((()=>e.scale),(()=>this._updateMoveAngle()))].filter(a.isSome)),this.addHandles(this.view.trackGraphicState(this.graphicState)),this._onGeometryChanged(),this._updateMoveAngle(),this._forEachManipulator((t=>{t instanceof v.Manipulator3D&&this.addHandles(t.events.on("grab-changed",(()=>this._updateManipulatorsInteractive())))})),this.finishToolCreation()}destroy(){this._tooltip=n.destroyMaybe(this._tooltip),this._moveManipulation.destroy(),this._scaleRotate=n.destroyMaybe(this._scaleRotate),this._scaleRotateAdapter=n.destroyMaybe(this._scaleRotateAdapter),this._updatingHandles.destroy(),this._set("view",null),this._set("graphic",null)}_updateManipulatorsInteractive(){null!=this._scaleRotate&&(this._scaleRotate.interactive=!this._moveManipulation.grabbing,this._moveManipulation.interactive=!this._scaleRotate.grabbing)}_createScaleRotateAdapter(){return null!=this.graphic.geometry&&"mesh"===this.graphic.geometry.type?new G.ScaleRotateMeshAdapter({graphic:this.graphic,geometry:this.graphic.geometry,viewingMode:this.view.state.viewingMode}):new A.ScaleRotateObjectSymbol3DAdapter({graphic:this.graphic,sizeFilter:t=>this._enforceNonZeroSize(t),findLayerView:()=>this.view.allLayerViews.find((t=>t.layer===this.graphic.layer)),sizeAxis:this.tooltipOptions?.visualVariables?.size?.axis??null})}_forEachManipulator(t){this._moveManipulation?.forEachManipulator(t),this._scaleRotate?.forEachManipulator(t)}_hideManipulatorsForGraphicState(){return r.watch((()=>this.graphicState.displaying),(t=>{this._forEachManipulator((e=>e.available=t)),this._moveManipulation.zManipulation.available=t&&this.enableZ&&y.canMoveZ(this.graphic)}))}_createGeometryUndoRecord(){return x.createGraphicGeometryUndoRecord(this.graphic)}set snapToScene(t){this._moveManipulation&&(this._moveManipulation.snapToScene=t),this._set("snapToScene",t)}get updating(){return this._updatingHandles.updating||!!this._scaleRotate?.updating}set location(t){this._moveManipulation.location=t,this._scaleRotate&&(this._scaleRotate.location=t)}set elevationAlignedLocation(t){this._moveManipulation.elevationAlignedLocation=t,this._scaleRotate&&(this._scaleRotate.elevationAlignedLocation=t)}reset(){}onHide(){this._scaleRotate?.cancelActiveAnimation()}_onScaleChanged(){null!=this._scaleRotate&&(this._moveManipulation.displayScale=this._scaleRotate.getScale())}_updateMoveAngle(){this.view.state.viewingMode===g.ViewingMode.Local||this.view.scale<S.alignArrowsScaleThreshold?this._moveManipulation.angle=this._scaleRotateAdapter.angle:this._moveManipulation.angle=0}_onGeometryChanged(){M.placeAtGraphic(this.view,this,this.graphic)}_enforceNonZeroSize(t){return t||this.view.state.camera.computeRenderPixelSizeAt(this._moveManipulation.renderLocation)}_updateMoveTooltip(t,e){const{tooltipOptions:a,_tooltip:i}=this;if(null==i)return;i.clear();const o=this.graphicState.isDraped?"on-the-ground":"absolute-height";switch(t){case R.ManipulationType.XY:i.info=this._translateGraphicTooltipInfo??(this._translateGraphicTooltipInfo=new P.TranslateGraphicTooltipInfo({tooltipOptions:a})),this._updateMoveTooltipDistance(i.info,e,((t,e)=>k.autoHorizontalDistanceByElevationModeBetweenPoints(t,e,o)));break;case R.ManipulationType.XY_AXIS:i.info=this._translateGraphicXYTooltipInfo??(this._translateGraphicXYTooltipInfo=new P.TranslateGraphicXYTooltipInfo({tooltipOptions:a})),this._updateMoveTooltipDistance(i.info,e,((t,a)=>{const i=k.autoHorizontalDistanceByElevationModeBetweenPoints(t,a,o);return s.scale(i,w.axisConstrainedDragSign(e))}));break;case R.ManipulationType.Z:i.info=this._translateGraphicZTooltipInfo??(this._translateGraphicZTooltipInfo=new P.TranslateGraphicZTooltipInfo({tooltipOptions:a})),this._updateMoveTooltipDistance(i.info,e,C.verticalSignedDistanceBetweenPoints)}i.info.tooltipOptions=a}_updateMoveTooltipDistance(t,e,a){if(null!=e&&"end"!==e.action){const{mapStart:i,mapEnd:o}=e,n=a(i,o);t.distance=null!=n?n:s.zeroMeters}else t.distance=s.zeroMeters}get test(){return{discManipulator:this._moveManipulation.xyManipulation.test.discManipulator,zManipulator:this._moveManipulation.zManipulation.test.manipulator,ringManipulator:null!=this._scaleRotate?this._scaleRotate.test.ringManipulator:null,arrowManipulators:this._moveManipulation.xyAxisManipulation.test.arrowManipulators,setRingIndicatorDelayMs:t=>null!=this._scaleRotate?this._scaleRotate.test.setRingIndicatorDelayMs(t):null,scaleRotateAdapter:this._scaleRotateAdapter,scaleRotateTransform:this._scaleRotate,tooltip:this._tooltip}}},e.__decorate([l.property({constructOnly:!0,nonNullable:!0})],t.GraphicTransformTool.prototype,"view",void 0),e.__decorate([l.property({constructOnly:!0,nonNullable:!0})],t.GraphicTransformTool.prototype,"graphic",void 0),e.__decorate([l.property({constructOnly:!0,nonNullable:!0})],t.GraphicTransformTool.prototype,"enableZ",void 0),e.__decorate([l.property()],t.GraphicTransformTool.prototype,"enableRotation",void 0),e.__decorate([l.property()],t.GraphicTransformTool.prototype,"enableScaling",void 0),e.__decorate([l.property({constructOnly:!0,type:H})],t.GraphicTransformTool.prototype,"tooltipOptions",void 0),e.__decorate([l.property()],t.GraphicTransformTool.prototype,"graphicState",void 0),e.__decorate([l.property({value:!1})],t.GraphicTransformTool.prototype,"snapToScene",null),e.__decorate([l.property({constructOnly:!0})],t.GraphicTransformTool.prototype,"snappingManager",void 0),e.__decorate([l.property({readOnly:!0})],t.GraphicTransformTool.prototype,"type",void 0),e.__decorate([l.property({readOnly:!0})],t.GraphicTransformTool.prototype,"updating",null),t.GraphicTransformTool=e.__decorate([h.subclass("esri.views.3d.interactive.editingTools.graphicTransform3D.GraphicTransformTool")],t.GraphicTransformTool),Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
