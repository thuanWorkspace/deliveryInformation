/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/reactiveUtils","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f64","../../../../geometry/support/vectorStacks","../../../../layers/graphics/dehydratedPoint","./EngineVisualElement","../../terrain/OverlayRenderer","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/ColorMaterial","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,r,i,s,a,o,n,c,l,u,d,h,_,m,p,g,b,R,y){"use strict";class M extends u.EngineVisualElement{constructor(e){super(e),this._maxSize=0,this._position=a.create(),this._up=a.create(),this._right=a.create(),this._renderOccluded=p.RenderOccludedFlag.OccludeAndTransparent,this._color=n.fromValues(1,0,0,1),this._outlineColor=n.fromValues(0,0,0,1),this._outlineSize=0,this._size=32,this._outlineRenderOccluded=p.RenderOccludedFlag.Opaque,this.applyProperties(e)}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:()=>{},cameraChanged:()=>this._updateTransformObject3D()}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:e=>this._destroyDrapedResources(e)}}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateQuadMaterial())}get color(){return this._color}set color(e){o.copy(this._color,e),this._updateQuadMaterial()}get outlineColor(){return this._outlineColor}set outlineColor(e){o.copy(this._outlineColor,e),this._updateOutlineMaterial()}get outlineSize(){return this._outlineSize}set outlineSize(e){const t=0===this._outlineSize!=(0===e);this._outlineSize=e,t?this.recreateGeometry():this._updateOutlineMaterial()}get size(){return this._size}set size(e){e!==this._size&&(this._size=e,this._updateTransform())}get outlineRenderOccluded(){return this._outlineRenderOccluded}set outlineRenderOccluded(e){this._outlineRenderOccluded=e,this._updateOutlineMaterial()}set geometry({previous:e,center:t,next:r}){this._maxSize=Math.min(s.distance(t,e),s.distance(t,r))/3,s.normalize(this._up,s.subtract(this._up,e,t)),s.normalize(this._right,s.subtract(this._right,r,t)),s.copy(this._position,t),this.recreateGeometry()}_createObject3DResources(e){const t=new R.ColorMaterial(this._quadMaterialParameters),r=0===this._outlineSize?void 0:new y.RibbonLineMaterial(this._outlineMaterialParameters);return this._createObject3DGeometries(e,t,r),{quadMaterial:t,outlineMaterial:r,forEach:e=>{e(t),r&&e(r)}}}_createObject3DGeometries(e,t,r){if(s.exactEquals(this._up,a.ZEROS)&&s.exactEquals(this._right,a.ZEROS))return;const i=this._createGeometries(t,r);for(const s of i)e.addGeometry(s);this._updateTransformObject3D(e)}_createDrapedResources(){const e=new R.ColorMaterial(this._quadMaterialParameters),r=0===this._outlineSize?void 0:new y.RibbonLineMaterial(this._outlineMaterialParameters),i=this._createGeometries(e,r).map((e=>new g.RenderGeometry(e)));this._setTransformDraped(i);return{quadMaterial:e,outlineMaterial:r,geometries:i,pixelRatioHandle:t.watch((()=>this.view.state.contentPixelRatio),(()=>{this.drapedResources.recreateGeometry()}))}}_destroyDrapedResources(e){e.pixelRatioHandle.remove(),e.geometries=[]}_createGeometries(e,t){const{up:r,right:i,corner:s}=this._getVertices(),a=this._quadGeometryData(r,i,s,e);if(!t)return[a];return[a,m.createPolylineGeometry(t,[r,s,i])]}_getVertices(){let e=this._up,t=this._right;const r=s.add(c.sv3d.get(),e,t);return this.isDraped&&(e=s.copy(c.sv3d.get(),e),t=s.copy(c.sv3d.get(),t),e[2]=0,t[2]=0,r[2]=0),{up:e,right:t,corner:r}}_updateTransform(){this.isDraped?this.drapedResources.recreateGeometry():this._updateTransformObject3D()}_updateTransformObject3D(e=this.object3dResources.object){if(!e)return;const t=this.view.state.camera,i=this._size*t.computeScreenPixelSizeAt(this._position),s=Math.min(this._maxSize,i);r.fromTranslation(O,this._position),r.scale(O,O,[s,s,s]),e.transformation=O}_setTransformDraped(e){if(0===e.length)return;const{view:{basemapTerrain:{overlayManager:t},state:{contentPixelRatio:i}}}=this,{_position:a,_size:o}=this,n=s.copy(c.sv3d.get(),a);n[2]=d.drapedZ;const l=f;l.spatialReference=t.renderer.spatialReference,l.x=n[0],l.y=n[1];const u=o*(this.view.overlayPixelSizeInMapUnits(l)*i),h=Math.min(this._maxSize,u);r.fromTranslation(O,n),r.scale(O,O,[h,h,1]);for(const r of e)r.transformation=O}_quadGeometryData(e,t,r,i){return new _.Geometry(i,[[b.VertexAttribute.POSITION,new h.Attribute([0,0,0,...t,...e,...r],[0,1,2,1,2,3],3,!0)]])}get _quadMaterialParameters(){return{color:this._color,forceTransparentMode:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:this._renderOccluded,isDecoration:this.isDecoration}}_updateQuadMaterial(){this.object3dResources.resources?.quadMaterial.setParameters(this._quadMaterialParameters),this.drapedResources.resources?.quadMaterial.setParameters(this._quadMaterialParameters)}get _outlineMaterialParameters(){return{color:this._outlineColor,width:this._outlineSize,renderOccluded:this._outlineRenderOccluded,isDecoration:this.isDecoration}}_updateOutlineMaterial(){this.object3dResources.resources?.outlineMaterial?.setParameters(this._outlineMaterialParameters),this.drapedResources.resources?.outlineMaterial?.setParameters(this._outlineMaterialParameters)}}const O=i.create(),f=l.makeDehydratedPoint(0,0,void 0,null);e.RightAngleQuadVisualElement=M,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
