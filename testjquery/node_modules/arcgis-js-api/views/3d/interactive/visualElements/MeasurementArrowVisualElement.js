/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/colorUtils","../../../../core/Handles","../../../../core/maybe","../../../../core/reactiveUtils","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f64","../../../../geometry/support/vectorStacks","./Object3DVisualElement","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/materials/MeasurementArrowMaterial"],(function(e,t,r,s,o,i,a,n,l,h,c,d,_,u,g){"use strict";class p extends d.Object3DVisualElement{constructor(e){super(e),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=n.create(),this._originTransform=i.create(),this._arrowCenter=n.create(),this._renderOccluded=u.RenderOccludedFlag.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=h.create(),this._contrastColor=h.create(),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:e})}}get color(){return this._color}set color(e){t.colorVectorEquals(e,this._color)||(l.copy(this._color,e),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(e){t.colorVectorEquals(e,this._color)||(l.copy(this._contrastColor,e),this._updateArrowColor())}createExternalResources(){const e=this._color,t=this._contrastColor,s=this._stripesEnabled?t:e;this._arrowMaterial=new g.MeasurementArrowMaterial({outlineColor:e,stripeEvenColor:s,stripeOddColor:e,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new r,this._handles.add(o.watch((()=>this.view.state.camera),(()=>{this._viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles=s.destroyMaybe(this._handles)}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(null==this._geometry?.startRenderSpace||null==this._geometry.endRenderSpace)return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);t.transformation=this._originTransform,e.addGeometry(t),this._viewChanged()}_createArrowGeometry(e,t,r,s){const o=this.view.renderCoordsHelper,i=[],n=[],l=(e,t)=>{const s=c.sv3d.get();a.subtract(s,e,r),i.push(s),n.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const r=c.sv3d.get();o.worldUpAtPosition(this._arrowCenter,r),l(e,r),l(t,r)}else{s.eval(.5,this._arrowCenter);const e=this._arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const r=t/(e-1),i=c.sv3d.get(),a=c.sv3d.get();s.eval(r,i),o.worldUpAtPosition(i,a),l(i,a)}}return _.createPolylineGeometry(this._arrowMaterial,i,n)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&null!=this._geometry){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*e})}}_updateArrowColor(){if(!this.attached)return;const e=this._color,t=this._contrastColor,r=this._stripesEnabled?t:e,s=e,o=e;this._arrowMaterial.setParameters({stripeEvenColor:r,outlineColor:s,stripeOddColor:o})}}e.MeasurementArrowVisualElement=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
