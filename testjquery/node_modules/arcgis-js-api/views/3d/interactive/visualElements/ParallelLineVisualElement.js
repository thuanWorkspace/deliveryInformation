/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../chunks/vec2","../../../../chunks/vec2f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../layers/graphics/dehydratedPoint","./EngineVisualElement","../../terrain/OverlayRenderer","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,r,i,s,a,c,o,n,d,h,l,u,_,m,p,y){"use strict";class b extends h.EngineVisualElement{constructor(e){super(e),this._location=c.create(),this._direction=c.fromValues(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=n.fromValues(1,0,1,1),this._renderOccluded=_.RenderOccludedFlag.OccludeAndTransparent,this.applyProperties(e)}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:e=>this._destroyObject3DResources(e),recreateGeometry:(e,t)=>this._recreateObject3DGeometry(e,t),cameraChanged:()=>this._updateGeometry()}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:e=>this._destroyDrapedResources(e),recreateGeometry:e=>this._recreateDrapedGeometry(e)}}get location(){return this._location}set location(e){a.exactEquals(this._location,e)||(a.copy(this._location,e),this._updateGeometry())}get direction(){return this._direction}set direction(e){a.exactEquals(this._direction,e)||(a.copy(this._direction,e),this._updateGeometry())}setDirectionFromPoints(e,t){a.normalize(this._direction,a.subtract(this._direction,t,e)),this._updateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this._updateGeometry())}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this._updateGeometry())}get color(){return this._color}set color(e){o.exactEquals(e,this._color)||(o.copy(this._color,e),this._updateMaterial())}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}_createObject3DResources(e){const t=new y.RibbonLineMaterial(this.materialParameters),r=new Array;return this._createObject3DGeometry(t,e,r),{material:t,geometries:r,forEach:e=>{e(t),r.forEach(e)}}}_destroyObject3DResources(e){e.geometries.length=0}_recreateObject3DGeometry(e,t){e.geometries.length=0,this._createObject3DGeometry(e.material,t,e.geometries)}_createObject3DGeometry(e,t,r){const[i,s]=this._createGeometries(e);t.addGeometry(i),t.addGeometry(s),r.push(i),r.push(s),this._updateVerticesObject3D(t)}_createDrapedResources(){const e=new y.RibbonLineMaterial(this.materialParameters),r=t.watch((()=>this.view.state.contentPixelRatio),(()=>{this.drapedResources.recreateGeometry()}));return{material:e,geometries:this._createDrapedGeometry(e),pixelRatioHandle:r}}_destroyDrapedResources(e){e.pixelRatioHandle.remove(),e.geometries=[]}_recreateDrapedGeometry(e){e.geometries=this._createDrapedGeometry(e.material)}_createDrapedGeometry(e){const t=this._createGeometries(e);return this._updateVerticesDraped(t),t.map((e=>new m.RenderGeometry(e)))}_createGeometries(e){return[u.createPolylineGeometry(e,[c.create(),c.create()]),u.createPolylineGeometry(e,[c.create(),c.create()])]}_updateMaterial(){const{materialParameters:e}=this;this.object3dResources.resources?.material.setParameters(e),this.drapedResources.resources?.material.setParameters(e)}get materialParameters(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded,isDecoration:this.isDecoration}}_updateGeometry(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const e=this.object3dResources.object;e&&this._updateVerticesObject3D(e)}}_updateVerticesObject3D(e){const t=this.view.state.camera;t.projectToScreen(this.location,R),a.add(g,this.location,this.direction),t.projectToScreen(g,G),i.normalize(G,i.subtract(G,G,R)),this._updateVertexAttributesObject3D(t,e,0,R,G,1),this._updateVertexAttributesObject3D(t,e,1,R,G,-1)}_updateVertexAttributesObject3D(e,t,i,s,a,c){const o=t.geometries[i],n=o.getMutableAttribute(p.VertexAttribute.POSITION)?.data;if(!n)return;const{start:d,end:h}=this._computeStartEnd(a,s,c,this.offset,this.width,this.length);e.unprojectFromScreen(r.castScreenPointArray(d),g),n[0]=g[0],n[1]=g[1],n[2]=g[2],e.unprojectFromScreen(r.castScreenPointArray(h),g),n[3]=g[0],n[4]=g[1],n[5]=g[2],t.geometryVertexAttributeUpdated(o,p.VertexAttribute.POSITION)}_updateVerticesDraped(e){const{view:{basemapTerrain:{overlayManager:t},state:{contentPixelRatio:r}}}=this,{location:i,width:s,length:a,offset:c}=this,o=w;o.spatialReference=t.renderer.spatialReference,o.x=i[0],o.y=i[1];const n=this.view.overlayPixelSizeInMapUnits(o)*r,d=s*n,h=a*n,l=c*n;this._updateVertexAttributesDraped(e[0],d,h,l,-1),this._updateVertexAttributesDraped(e[1],d,h,l,1)}_updateVertexAttributesDraped(e,t,r,i,s){const a=e.getMutableAttribute(p.VertexAttribute.POSITION)?.data;if(!a)return;const{location:c,direction:o}=this,{start:n,end:d}=this._computeStartEnd(o,c,s,i,t,r);a[0]=n[0],a[1]=n[1],a[2]=l.drapedZ,a[3]=d[0],a[4]=d[1],a[5]=l.drapedZ,e.invalidateBoundingInfo()}_computeStartEnd(e,t,r,s,a,c){const o=i.scale(D,i.set(D,e[1]*r,e[0]*-r),s+a/2),n=i.add(O,i.add(O,i.add(O,t,i.scale(O,e,c/2)),o),o);return{start:n,end:i.add(f,n,i.scale(f,e,-c))}}}const g=c.create(),D=s.create(),O=s.create(),f=s.create(),R=r.createScreenPointArray(),G=r.createScreenPointArray(),w=d.makeDehydratedPoint(0,0,void 0,null);e.ParallelLineVisualElement=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
