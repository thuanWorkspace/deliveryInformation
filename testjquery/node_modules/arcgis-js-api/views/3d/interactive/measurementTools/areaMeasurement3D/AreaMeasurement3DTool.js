/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../chunks/tslib.es6","../../../../../core/maybe","../../../../../core/memoize","../../../../../core/promiseUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/UpdatingHandles","../../../../../geometry/Point","../../../../../layers/graphics/hydratedFeatures","../../../analysis/support/measurementUtils","../../SnappingVisualizer3D","../../editingTools/dragEventPipeline3D","./AreaMeasurement3DView","../support/PickRequest","../../../../interactive/AnalysisToolBase","../../../../interactive/coordinateHelper","../../../../interactive/dragEventPipeline","../../../../interactive/ManipulatorCollection","../../../../interactive/editGeometry/EditGeometry","../../../../interactive/editGeometry/EditGeometryOperations","../../../../interactive/snapping/SceneSnappingManagerPool","../../../../interactive/snapping/SnappingContext","../../../../interactive/snapping/SnappingDragPipelineStep","../../../../interactive/snapping/SnappingOperation","../../../../interactive/snapping/snappingUtils","../../../../support/screenUtils"],(function(t,e,i,n,a,s,o,r,p,l,g,d,h,c,u,y,m,_,w,P,v,S,V,D,M,x,f,b,k,H){"use strict";let O=class extends w.AnalysisToolBase{constructor(t){super(t),this._updatingHandles=new g.UpdatingHandles,this.polygonState="initial",this.manipulators=new S.ManipulatorCollection,this._getSnappingContext=i.memoize((t=>new x.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:t,editGeometryOperations:new D.EditGeometryOperations(new V.EditGeometry("point",P.createCoordinateHelper(!0,!1,this.view.spatialReference))),visualizer:new u.SnappingVisualizer3D})))}initialize(){const{view:t,analysisViewData:e,manipulators:i,visible:s}=this;this.measurementView=new m({view:t,analysisViewData:e,toolState:this,manipulators:i,visible:s});const o=M.acquire(t);this._snappingManagerResult=o,this.addHandles(o),this._snappingOperation=new b.SnappingOperation({view:t}),this._updatingHandles.add((()=>this.stagedPoint),(t=>{this.analysisViewData.stagedPoint=null!=t?h.clonePoint(t,new d):null}),a.syncAndInitial),k.setupSnappingToggleHandles(this,(()=>{const t=this.view.inputManager.latestPointerType??"mouse",e=this._getSnappingContext(t);this._updatingHandles.addPromise(n.ignoreAbortErrors(this._snappingOperation.resnap(this._snappingManager,e)))})),this._setupManipulators(),this.addHandles([a.watch((()=>this.state),(t=>{"measured"===t&&this.finishToolCreation()}),a.syncAndInitial),this.analysisViewData.path.on("change",(()=>{const t=this.analysisViewData.path;"initial"!==this.polygonState||t.isEmptyPolygon||(t.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")}))])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=e.destroyMaybe(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.path.isValidPolygon&&"editing"!==this.polygonState?"measured":"measuring"}get cursor(){return"ready"===this.state||"drawing"===this.polygonState?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=t=>t.events.on("grab-changed",(()=>{if(this.analysisViewData.path.isValidPolygon){const t=this.manipulators.some((t=>t.manipulator.grabbing));this.polygonState=t?"editing":"measured"}})),e=e=>{this.addHandles([v.createManipulatorDragEventPipeline(e,((t,e,i,n)=>{const a=y.hideManipulatorWhileDragging(t),s=t.metadata,o=this._snappingManager,r=this._getSnappingContext(n),p=this._updatingHandles,{snappingStep:l,cancelSnapping:g}=f.createSnapDragEventPipelineStep({snappingManager:o,snappingContext:r,updatingHandles:p});i=i.next(a).next((e=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(s,d),t.location=d,e))).next(g),e.next(a).next(y.screenToMap3D(this.view)).next(...l).next((e=>{t.location=e.mapEnd,this.analysisViewData.lastDraggedVertex="end"===e.action?null:s,this.analysisViewData.path.setVertexPosition(s,h.clonePoint(e.mapEnd))}));const d=h.clonePoint(this.analysisViewData.path.getVertexPositionAsPoint(s))})),t(e)],e)};this.manipulators.forEach((({manipulator:t})=>{e(t)})),this.addHandles([this.manipulators.on("after-add",(({item:{manipulator:t}})=>{e(t)})),this.manipulators.on("after-remove",(({item:{manipulator:t}})=>this.removeHandles(t)))])}_handleImmediateDoubleClick(t){c.isPrimaryPointerAction(t)&&("drawing"===this.polygonState&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){"editing"===this.polygonState&&t.stopPropagation()}_handleImmediateClick(t){if(!c.isPrimaryPointerAction(t))return;const e=H.createScreenPointFromEvent(t),{pointerType:i}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(e,i))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const n=this.measurementView.vertexHandleAt(e,i);if(null==n){if(this._addVertexAt(e,i))return this.stagedPoint=null,void t.stopPropagation()}else 0===n.index&&(this.finishMeasurement(),t.stopPropagation());break}}"mouse"===t.pointerType&&this._hoverAt(e)}_handlePointerMove(t){if("mouse"===t.pointerType){const e=H.createScreenPointFromEvent(t);this._hoverAt(e)}}_handleKeyDown(t){const{path:e}=this.analysisViewData;"Enter"===t.key&&"drawing"===this.polygonState&&e.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:e}=this;if(this.active&&("initial"===e||"drawing"===e)){const e=this._pick(t);if(null!=e?.mapPoint){const t=this._getSnappingContext("mouse");this._updatingHandles.addPromise(n.ignoreAbortErrors(this._snappingOperation.snap({point:e.mapPoint},this._snappingManager,t)))}}else this.stagedPoint=null}_addVertexAt(t,e){const i=this._pick(t);if(null!=i?.mapPoint){const{mapPoint:t}=i,n=this._getSnappingContext(e),a=this._snappingOperation.update({point:t},this._snappingManager,n),s=h.clonePoint(a,new d);return this.analysisViewData.path.add(s),!0}return!1}_pick(t){const e=new _.PickRequest(t);return this.measurementView.pick(e)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){return{snappingManager:this._snappingManager}}};t.__decorate([s.property({readOnly:!0})],O.prototype,"state",null),t.__decorate([s.property()],O.prototype,"polygonState",void 0),t.__decorate([s.property({readOnly:!0})],O.prototype,"cursor",null),t.__decorate([s.property()],O.prototype,"measurementView",void 0),t.__decorate([s.property({constructOnly:!0})],O.prototype,"view",void 0),t.__decorate([s.property({constructOnly:!0})],O.prototype,"analysis",void 0),t.__decorate([s.property({constructOnly:!0})],O.prototype,"analysisViewData",void 0),t.__decorate([s.property({readOnly:!0})],O.prototype,"manipulators",void 0),t.__decorate([s.property()],O.prototype,"updating",null),t.__decorate([s.property()],O.prototype,"stagedPoint",null),t.__decorate([s.property()],O.prototype,"snappingOptions",null),O=t.__decorate([l.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],O);return O}));
