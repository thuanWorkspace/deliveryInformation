/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Error","../../../../core/Logger","../../../../core/MapUtils","../../../../core/promiseUtils","../../../../core/urlUtils","../../../../core/Version","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/quat","../../../../chunks/quatf64","../../../../geometry/support/buffer/BufferView","../../../../chunks/scalar","../../../../core/has","./BinaryStreamReader","./enums","./fillDefaults","./pathUtils","./resourceUtils","../../../webgl/enums"],(function(e,t,r,n,a,o,s,i,u,f,c,l,d,p,h,w,y,T,m,b){"use strict";const g={MAGIC:1179937895,CHUNK_TYPE_JSON:1313821514,CHUNK_TYPE_BIN:5130562,MIN_HEADER_LENGTH:20};class _{constructor(e,r,n,a){if(this._context=e,this.uri=r,this.json=n,this._glbBuffer=a,this._bufferLoaders=new Map,this._textureLoaders=new Map,this._textureCache=new Map,this._materialCache=new Map,this._nodeParentMap=new Map,this._nodeTransformCache=new Map,this._supportedExtensions=["KHR_texture_basisu"],this._baseUri=T.splitURI(this.uri).dirPart,this._checkVersionSupported(),this._checkRequiredExtensionsSupported(),null==n.scenes)throw new t("gltf-loader-unsupported-feature","Scenes must be defined.");if(null==n.meshes)throw new t("gltf-loader-unsupported-feature","Meshes must be defined");if(null==n.nodes)throw new t("gltf-loader-unsupported-feature","Nodes must be defined.");this._computeNodeParents()}static async load(e,r,n){if(o.isDataProtocol(r)){const t=o.dataComponents(r);if(t&&"model/gltf-binary"!==t.mediaType)try{const n=JSON.parse(t.isBase64?atob(t.data):t.data);return new _(e,r,n)}catch{}const n=o.dataToArrayBuffer(r);if(_._isGLBData(n))return this._fromGLBData(e,r,n)}if(C.test(r)||"gltf"===n?.expectedType){const t=await e.loadJSON(r,n);return new _(e,r,t)}const a=await e.loadBinary(r,n);if(_._isGLBData(a))return this._fromGLBData(e,r,a);if(B.test(r)||"glb"===n?.expectedType)throw new t("gltf-loader-invalid-glb","This is not a valid glb file.");const s=await e.loadJSON(r,n);return new _(e,r,s)}static _isGLBData(e){if(null==e)return!1;const t=new h.BinaryStreamReader(e);return t.remainingBytes()>=4&&t.readUint32()===g.MAGIC}static async _fromGLBData(e,t,r){const n=await _._parseGLBData(r);return new _(e,t,n.json,n.binaryData)}static async _parseGLBData(e){const n=new h.BinaryStreamReader(e);if(n.remainingBytes()<12)throw new t("gltf-loader-error","glb binary data is insufficiently large.");const a=n.readUint32(),o=n.readUint32(),s=n.readUint32();if(a!==g.MAGIC)throw new t("gltf-loader-error","Magic first 4 bytes do not fit to expected glb value.");if(e.byteLength<s)throw new t("gltf-loader-error","glb binary data is smaller than header specifies.");if(2!==o)throw new t("gltf-loader-unsupported-feature","An unsupported glb container version was detected. Only version 2 is supported.");let i,u,f=0;for(;n.remainingBytes()>=8;){const e=n.readUint32(),a=n.readUint32();if(0===f){if(a!==g.CHUNK_TYPE_JSON)throw new t("gltf-loader-error","First glb chunk must be JSON.");if(e<0)throw new t("gltf-loader-error","No JSON data found.");i=await m.jsonFromBinaryData(n.readUint8Array(e))}else if(1===f){if(a!==g.CHUNK_TYPE_BIN)throw new t("gltf-loader-unsupported-feature","Second glb chunk expected to be BIN.");u=n.readUint8Array(e)}else r.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] More than 2 glb chunks detected. Skipping.");f+=1}if(!i)throw new t("gltf-loader-error","No glb JSON chunk detected.");return{json:i,binaryData:u}}async getBuffer(e,r){const n=this.json.buffers[e];if(null==n.uri){if(null==this._glbBuffer)throw new t("gltf-loader-error","glb buffer not present");return this._glbBuffer}const a=await this._getBufferLoader(e,r);if(a.byteLength!==n.byteLength)throw new t("gltf-loader-error","Buffer byte lengths should match.");return a}async _getBufferLoader(e,t){const r=this._bufferLoaders.get(e);if(r)return r;const n=this.json.buffers[e].uri,a=this._context.loadBinary(this._resolveUri(n),t).then((e=>new Uint8Array(e)));return this._bufferLoaders.set(e,a),a}async getAccessor(e,r){if(!this.json.accessors)throw new t("gltf-loader-unsupported-feature","Accessors missing.");const n=this.json.accessors[e];if(null==n?.bufferView)throw new t("gltf-loader-unsupported-feature","Some accessor does not specify a bufferView.");if(n.type in[w.AttributeType.MAT2,w.AttributeType.MAT3,w.AttributeType.MAT4])throw new t("gltf-loader-unsupported-feature",`AttributeType ${n.type} is not supported`);const a=this.json.bufferViews[n.bufferView],o=await this.getBuffer(a.buffer,r),s=S[n.type],i=D[n.componentType],u=s*i,f=a.byteStride||u;return{raw:o.buffer,byteStride:f,byteOffset:o.byteOffset+(a.byteOffset||0)+(n.byteOffset||0),entryCount:n.count,isDenselyPacked:f===u,componentCount:s,componentByteSize:i,componentType:n.componentType,min:n.min,max:n.max,normalized:!!n.normalized}}async getIndexData(e,t){if(null==e.indices)return;const r=await this.getAccessor(e.indices,t);if(r.isDenselyPacked)switch(r.componentType){case b.DataType.UNSIGNED_BYTE:return new Uint8Array(r.raw,r.byteOffset,r.entryCount);case b.DataType.UNSIGNED_SHORT:return new Uint16Array(r.raw,r.byteOffset,r.entryCount);case b.DataType.UNSIGNED_INT:return new Uint32Array(r.raw,r.byteOffset,r.entryCount)}else switch(r.componentType){case b.DataType.UNSIGNED_BYTE:return d.makeDense(this._wrapAccessor(l.BufferViewUint8,r));case b.DataType.UNSIGNED_SHORT:return d.makeDense(this._wrapAccessor(l.BufferViewUint16,r));case b.DataType.UNSIGNED_INT:return d.makeDense(this._wrapAccessor(l.BufferViewUint32,r))}}async getPositionData(e,r){if(null==e.attributes.POSITION)throw new t("gltf-loader-unsupported-feature","No POSITION vertex data found.");const n=await this.getAccessor(e.attributes.POSITION,r);if(n.componentType!==b.DataType.FLOAT)throw new t("gltf-loader-unsupported-feature","Expected type FLOAT for POSITION vertex attribute, but found "+b.DataType[n.componentType]);if(3!==n.componentCount)throw new t("gltf-loader-unsupported-feature","POSITION vertex attribute must have 3 components, but found "+n.componentCount.toFixed());return this._wrapAccessor(l.BufferViewVec3f,n)}async getNormalData(e,r){if(null==e.attributes.NORMAL)throw new t("gltf-loader-error","No NORMAL vertex data found.");const n=await this.getAccessor(e.attributes.NORMAL,r);if(n.componentType!==b.DataType.FLOAT)throw new t("gltf-loader-unsupported-feature","Expected type FLOAT for NORMAL vertex attribute, but found "+b.DataType[n.componentType]);if(3!==n.componentCount)throw new t("gltf-loader-unsupported-feature","NORMAL vertex attribute must have 3 components, but found "+n.componentCount.toFixed());return this._wrapAccessor(l.BufferViewVec3f,n)}async getTangentData(e,r){if(null==e.attributes.TANGENT)throw new t("gltf-loader-error","No TANGENT vertex data found.");const n=await this.getAccessor(e.attributes.TANGENT,r);if(n.componentType!==b.DataType.FLOAT)throw new t("gltf-loader-unsupported-feature","Expected type FLOAT for TANGENT vertex attribute, but found "+b.DataType[n.componentType]);if(4!==n.componentCount)throw new t("gltf-loader-unsupported-feature","TANGENT vertex attribute must have 4 components, but found "+n.componentCount.toFixed());return new l.BufferViewVec4f(n.raw,n.byteOffset,n.byteStride,n.byteOffset+n.byteStride*n.entryCount)}async getTextureCoordinates(e,r){if(null==e.attributes.TEXCOORD_0)throw new t("gltf-loader-error","No TEXCOORD_0 vertex data found.");const n=await this.getAccessor(e.attributes.TEXCOORD_0,r);if(2!==n.componentCount)throw new t("gltf-loader-unsupported-feature","TEXCOORD_0 vertex attribute must have 2 components, but found "+n.componentCount.toFixed());if(n.componentType===b.DataType.FLOAT)return this._wrapAccessor(l.BufferViewVec2f,n);if(!n.normalized)throw new t("gltf-loader-unsupported-feature","Integer component types are only supported for a normalized accessor for TEXCOORD_0.");return A(n)}async getVertexColors(e,r){if(null==e.attributes.COLOR_0)throw new t("gltf-loader-error","No COLOR_0 vertex data found.");const n=await this.getAccessor(e.attributes.COLOR_0,r);if(4!==n.componentCount&&3!==n.componentCount)throw new t("gltf-loader-unsupported-feature","COLOR_0 attribute must have 3 or 4 components, but found "+n.componentCount.toFixed());if(4===n.componentCount){if(n.componentType===b.DataType.FLOAT)return this._wrapAccessor(l.BufferViewVec4f,n);if(n.componentType===b.DataType.UNSIGNED_BYTE)return this._wrapAccessor(l.BufferViewVec4u8,n);if(n.componentType===b.DataType.UNSIGNED_SHORT)return this._wrapAccessor(l.BufferViewVec4u16,n)}else if(3===n.componentCount){if(n.componentType===b.DataType.FLOAT)return this._wrapAccessor(l.BufferViewVec3f,n);if(n.componentType===b.DataType.UNSIGNED_BYTE)return this._wrapAccessor(l.BufferViewVec3u8,n);if(n.componentType===b.DataType.UNSIGNED_SHORT)return this._wrapAccessor(l.BufferViewVec3u16,n)}throw new t("gltf-loader-unsupported-feature","Unsupported component type for COLOR_0 attribute: "+b.DataType[n.componentType])}hasPositions(e){return void 0!==e.attributes.POSITION}hasNormals(e){return void 0!==e.attributes.NORMAL}hasVertexColors(e){return void 0!==e.attributes.COLOR_0}hasTextureCoordinates(e){return void 0!==e.attributes.TEXCOORD_0}hasTangents(e){return void 0!==e.attributes.TANGENT}async getMaterial(e,t,r){let n=e.material?this._materialCache.get(e.material):void 0;if(!n){const a=null!=e.material?y.material(this.json.materials[e.material]):y.material(),o=a.pbrMetallicRoughness,s=this.hasVertexColors(e),i=this.getTexture(o.baseColorTexture,t),u=this.getTexture(a.normalTexture,t),f=r?this.getTexture(a.occlusionTexture,t):void 0,c=r?this.getTexture(a.emissiveTexture,t):void 0,l=r?this.getTexture(o.metallicRoughnessTexture,t):void 0,d=null!=e.material?e.material:-1;n={alphaMode:a.alphaMode,alphaCutoff:a.alphaCutoff,color:o.baseColorFactor,doubleSided:!!a.doubleSided,colorTexture:await i,normalTexture:await u,name:a.name,id:d,occlusionTexture:await f,emissiveTexture:await c,emissiveFactor:a.emissiveFactor,metallicFactor:o.metallicFactor,roughnessFactor:o.roughnessFactor,metallicRoughnessTexture:await l,hasVertexColors:s,ESRI_externalColorMixMode:a.extras.ESRI_externalColorMixMode,colorTextureTransform:o?.baseColorTexture?.extensions?.KHR_texture_transform,normalTextureTransform:a.normalTexture?.extensions?.KHR_texture_transform,occlusionTextureTransform:a.occlusionTexture?.extensions?.KHR_texture_transform,emissiveTextureTransform:a.emissiveTexture?.extensions?.KHR_texture_transform,metallicRoughnessTextureTransform:o?.metallicRoughnessTexture?.extensions?.KHR_texture_transform}}return n}async getTexture(e,r){if(!e)return;if(0!==(e.texCoord||0))throw new t("gltf-loader-unsupported-feature","Only TEXCOORD with index 0 is supported.");const a=e.index,o=this.json.textures[a],s=y.textureSampler(null!=o.sampler?this.json.samplers[o.sampler]:{}),i=this._getTextureSourceId(o),u=this.json.images[i],f=await this._loadTextureImageData(a,o,r);return n.getOrCreateMapValue(this._textureCache,a,(()=>{const e=e=>33071===e||33648===e||10497===e,r=e=>{throw new t("gltf-loader-error",`Unexpected TextureSampler WrapMode: ${e}`)};return{data:f,wrapS:e(s.wrapS)?s.wrapS:r(s.wrapS),wrapT:e(s.wrapT)?s.wrapT:r(s.wrapT),minFilter:s.minFilter,name:u.name,id:a}}))}getNodeTransform(e){if(void 0===e)return x;let t=this._nodeTransformCache.get(e);if(!t){const r=this.getNodeTransform(this._getNodeParent(e)),n=this.json.nodes[e];n.matrix?t=i.multiply(u.create(),r,n.matrix):n.translation||n.rotation||n.scale?(t=u.clone(r),n.translation&&i.translate(t,t,n.translation),n.rotation&&(N[3]=f.getAxisAngle(N,n.rotation),i.rotate(t,t,N[3],N)),n.scale&&i.scale(t,t,n.scale)):t=u.clone(r),this._nodeTransformCache.set(e,t)}return t}_wrapAccessor(e,t){return new e(t.raw,t.byteOffset,t.byteStride,t.byteOffset+t.byteStride*(t.entryCount-1)+t.componentByteSize*t.componentCount)}_resolveUri(e){return o.makeAbsolute(e,this._baseUri)}_getNodeParent(e){return this._nodeParentMap.get(e)}_checkVersionSupported(){const e=s.Version.parse(this.json.asset.version,"glTF");O.validate(e)}_checkRequiredExtensionsSupported(){const e=this.json;if(e.extensionsRequired){if(!e.extensionsRequired.every((e=>this._supportedExtensions.includes(e))))throw new t("gltf-loader-unsupported-feature","gltf loader was not able to load unsupported feature. Required extensions: "+e.extensionsRequired.join(", "))}}_computeNodeParents(){this.json.nodes.forEach(((e,t)=>{e.children&&e.children.forEach((e=>{this._nodeParentMap.set(e,t)}))}))}async _loadTextureImageData(e,t,r){const n=this._textureLoaders.get(e);if(n)return n;const a=this._createTextureLoader(t,r);return this._textureLoaders.set(e,a),a}_getTextureSourceId(e){if(void 0!==e.extensions&&null!==e.extensions.KHR_texture_basisu)return e.extensions.KHR_texture_basisu.source;if(null!==e.source)return e.source;throw new t("gltf-loader-unsupported-feature","Source is expected to be defined for a texture. It can also be omitted in favour of an KHR_texture_basisu extension tag.")}async _createTextureLoader(e,r){const n=this._getTextureSourceId(e),a=this.json.images[n];if(a.uri){if(a.uri.endsWith(".ktx2")){const e=await this._context.loadBinary(this._resolveUri(a.uri),r);return new m.EncodedMeshTexture(new Uint8Array(e))}return this._context.loadImage(this._resolveUri(a.uri),r)}if(null==a.bufferView)throw new t("gltf-loader-unsupported-feature","Image bufferView must be defined.");if(null==a.mimeType)throw new t("gltf-loader-unsupported-feature","Image mimeType must be defined.");const o=this.json.bufferViews[a.bufferView],s=await this.getBuffer(o.buffer,r);if(null!=o.byteStride)throw new t("gltf-loader-unsupported-feature","byteStride not supported for image buffer");const i=s.byteOffset+(o.byteOffset||0);return m.imageFromBinaryData(new Uint8Array(s.buffer,i,o.byteLength),a.mimeType)}async getLoadedBuffersSize(){if(this._glbBuffer)return this._glbBuffer.byteLength;const e=await a.allSettledValues(Array.from(this._bufferLoaders.values())),t=await a.allSettledValues(Array.from(this._textureLoaders.values()));return e.reduce(((e,t)=>e+(t?.byteLength??0)),0)+t.reduce(((e,t)=>e+(t?m.isEncodedMeshTexture(t)?t.data.byteLength:t.width*t.height*4:0)),0)}}const x=i.fromXRotation(u.create(),Math.PI/2),O=new s.Version(2,0,"glTF"),N=c.create(),S={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},D={[b.DataType.BYTE]:1,[b.DataType.UNSIGNED_BYTE]:1,[b.DataType.SHORT]:2,[b.DataType.UNSIGNED_SHORT]:2,[b.DataType.FLOAT]:4,[b.DataType.INT]:4,[b.DataType.UNSIGNED_INT]:4};function A(e){switch(e.componentType){case b.DataType.BYTE:return new l.BufferViewVec2i8(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case b.DataType.UNSIGNED_BYTE:return new l.BufferViewVec2u8(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case b.DataType.SHORT:return new l.BufferViewVec2i16(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case b.DataType.UNSIGNED_SHORT:return new l.BufferViewVec2u16(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case b.DataType.UNSIGNED_INT:return new l.BufferViewVec2u32(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case b.DataType.FLOAT:return new l.BufferViewVec2f(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount)}}const C=/\.gltf$/i,B=/\.glb$/i;e.GLTFResource=_,e.transformGltfToEngine=x,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
