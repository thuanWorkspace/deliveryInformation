/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../webgl-engine/lib/basicInterfaces"],(function(e,t,n){"use strict";class r{constructor(e){this.data=e,this.type="encoded-mesh-texture",this.encoding=n.TextureEncodingMimeType.KTX2_ENCODING}}function o(e){return"encoded-mesh-texture"===e?.type}async function i(e){const t=new Blob([e]),n=await t.text();return JSON.parse(n)}async function c(e,o){if(o===n.TextureEncodingMimeType.KTX2_ENCODING)return new r(e);const i=new Blob([e],{type:o}),c=URL.createObjectURL(i),s=new Image;if(t("esri-iPhone"))return new Promise(((e,t)=>{const n=()=>{o(),e(s)},r=e=>{o(),t(e)},o=()=>{URL.revokeObjectURL(c),s.removeEventListener("load",n),s.removeEventListener("error",r)};s.addEventListener("load",n),s.addEventListener("error",r),s.src=c}));try{s.src=c,await s.decode()}catch(a){console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(c),s}e.EncodedMeshTexture=r,e.imageFromBinaryData=c,e.isEncodedMeshTexture=o,e.jsonFromBinaryData=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
