/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/arrayUtils","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../chunks/mat4f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../chunks/vec4f64","../../../support/debugFlags","../../../support/buffer/glUtil","../../../support/buffer/InterleavedLayout","../../core/shaderLibrary/ShaderOutput","../../effects/RenderPlugin","../Camera","../DefaultVertexAttributeLocations","../IntersectorInterfaces","../Octree","../RenderSlot","../Util","../VertexAttribute","./InstanceData","./InstanceOctree","./LevelSelector","./LodLevel","./RenderInstanceData","../../materials/internal/MaterialUtil","../../materials/renderers/utils","../../shaders/DefaultMaterialTechnique","../../../../support/Scheduler","../../../../webgl/Util"],(function(e,t,a,r,n,s,i,o,l,c,d,h,u,_,p,f,g,y,m,I,C,b,R,S,v,A,D,E,L,T,O,x,F,N,V){"use strict";const M=e=>{const t=e.baseBoundingSphere.radius,a=e.levels.map((e=>e.minScreenSpaceRadius));return new E.LevelSelector(t,a)};function w(e,t,a){const r=e.allocateHead();U(t,a,e.view,r)}function U(e,t,a,r){x.encodeDoubleVec3(e.modelOrigin,t,a.modelOriginHi,a.modelOriginLo,r),a.model.copyFrom(r,e.model,t),a.modelNormal.copyFrom(r,e.modelNormal,t),e.color&&a.color&&a.color.copyFrom(r,e.color,t),e.objectAndLayerIdColor&&a.objectAndLayerIdColor&&a.objectAndLayerIdColor.copyFrom(r,e.objectAndLayerIdColor,t),e.featureAttribute&&a.featureAttribute&&a.featureAttribute.copyFrom(r,e.featureAttribute,t)}function H(e){let t=f.newLayout().vec3f(v.VertexAttribute.INSTANCEMODELORIGINHI).vec3f(v.VertexAttribute.INSTANCEMODELORIGINLO).mat3f(v.VertexAttribute.INSTANCEMODEL).mat3f(v.VertexAttribute.INSTANCEMODELNORMAL);return null!=e&&e.includes("featureAttribute")&&(t=t.vec4f(v.VertexAttribute.INSTANCEFEATUREATTRIBUTE)),null!=e&&e.includes("color")&&(t=t.vec4u8(v.VertexAttribute.INSTANCECOLOR)),null!=e&&e.includes("objectAndLayerIdColor")&&(t=t.vec4u8(v.VertexAttribute.INSTANCEOBJECTANDLAYERIDCOLOR)),t}e.LodRenderer=class extends y.ASyncPreparesRenderPlugin{constructor(e,t){super(e),this.type=C.IntersectorType.LOD,this.isGround=!1,this._levels=[],this._defaultRenderInstanceData=[new Array],this._highlightRenderInstanceData=[new Array],this._allRenderInstanceData=[this._defaultRenderInstanceData[0],this._highlightRenderInstanceData[0]],this._instanceIndex=0,this._cycleStartIndex=0,this._slicePlane=!1,this._camera=new m.Camera,this._updateCyclesWithStaticCamera=-1,this._needFullCycle=!1,this.produces=new Map([[R.RenderSlot.OPAQUE_MATERIAL,e=>this._produces(e)],[R.RenderSlot.TRANSPARENT_MATERIAL,e=>!!this._hasTransparentLevels()&&this._produces(e)]]),this._instanceData=new A.InstanceData({shaderTransformation:e.shaderTransformation},e.optionalFields),this.addHandles(t.registerTask(N.TaskPriority.LOD_RENDERER,this))}initialize(){this._instanceBufferLayout=H(this.optionalFields),this._glInstanceBufferLayout=p.glLayout(this._instanceBufferLayout,1),this.addHandles([this._instanceData.events.on("instances-changed",(()=>this._requestUpdateCycle())),this._instanceData.events.on("instance-transform-changed",(({index:e})=>{this._requestUpdateCycle(),this.metadata.notifyGraphicGeometryChanged(e)})),this._instanceData.events.on("instance-visibility-changed",(({index:e})=>{this._requestUpdateCycle(!0),this.metadata.notifyGraphicVisibilityChanged(e)})),this._instanceData.events.on("instance-highlight-changed",(()=>this._requestUpdateCycle(!0)))])}get _enableLevelSelection(){return this.symbol.levels.length>1}get levels(){return this._levels}get baseBoundingBox(){return this._levels[this._levels.length-1].boundingBox}get baseBoundingSphere(){return this._levels[this._levels.length-1].boundingSphere}get baseMaterial(){return this._levels[this._levels.length-1].components[0].material}get slicePlaneEnabled(){return this._slicePlane}set slicePlaneEnabled(e){this._slicePlane=e}get layerUid(){return this.metadata.layerUid}get instanceData(){return this._instanceData}get usedMemory(){return this._allRenderInstanceData.reduce(((e,t)=>t.reduce(((e,t)=>e+t.usedMemory),e)),0)}get renderStats(){const e=this._instanceData.size,t=[];return this._levels.forEach(((e,a)=>{const r=this._allRenderInstanceData[0][a].size+this._allRenderInstanceData[1][a].size,n=e.triangleCount;t.push({renderedInstances:r,renderedTriangles:r*n,trianglesPerInstance:n})})),{totalInstances:e,renderedInstances:t.reduce(((e,t)=>e+t.renderedInstances),0),renderedTriangles:t.reduce(((e,t)=>e+t.renderedTriangles),0),levels:t}}async initializeRenderContext(e,t){this._context=e;const r=e.renderContext.rctx,s=await Promise.allSettled(this.symbol.levels.map((a=>(this._defaultRenderInstanceData[0].push(new T.RenderInstanceData(r,this._instanceBufferLayout)),this._highlightRenderInstanceData[0].push(new T.RenderInstanceData(r,this._instanceBufferLayout)),L.LodLevel.create(e,a,t))))),i=s.map((e=>"fulfilled"===e.status?e.value:null)).filter(a.isSome);if(n.isAborted(t)||i.length!==s.length){i.forEach((e=>e.destroy())),n.throwIfAborted(t);for(const e of s)if("rejected"===e.status)throw e.reason}this._levels=i,this._levelSelector=M(this)}uninitializeRenderContext(){this._invalidateOctree(),this._levels.forEach((e=>e.destroy())),this._defaultRenderInstanceData[0].forEach((e=>e.destroy())),this._highlightRenderInstanceData[0].forEach((e=>e.destroy()))}_hasTransparentLevels(){return this._levels.some((e=>e.components.some((e=>e.material.produces(R.RenderSlot.TRANSPARENT_MATERIAL,g.ShaderOutput.Color)))))}hasHighlights(){return this._highlightRenderInstanceData[0].some((e=>e.size>0))}_produces(e){return e!==g.ShaderOutput.Highlight&&e!==g.ShaderOutput.ShadowHighlight||this.hasHighlights()}prepareRender(e){if(!_.debugFlags.LOD_INSTANCE_RENDERER_DISABLE_UPDATES){if(this._enableLevelSelection){const t=e.bindParameters.contentCamera.equals(this._camera);this._camera.copyFrom(e.bindParameters.contentCamera),t||this._requestUpdateCycle()}this._needFullCycle&&(this.runTask(N.noBudget),this._needFullCycle=!1)}}prepareTechniques(e){if(!this.baseMaterial.isVisible()||!this.baseMaterial.isVisibleForOutput(e.output))return null;const t=this._getInstanceDatas(e.output);if(!t)return null;const a=new Array;return t.forEach((t=>this.levels.forEach(((r,n)=>{r.components.forEach((r=>a.push(this._beginComponent(e,t[n],r))))})))),a}renderNode(e,t){const a=this._getInstanceDatas(e.output);if(!a||null==t)return;let r=0;e.rctx.bindVAO(),a.forEach((a=>this.levels.forEach(((n,s)=>{n.components.forEach((n=>this._renderComponent(e,t[r++],a[s],n,s)))}))))}_getInstanceDatas(e){const t=e!==g.ShaderOutput.Highlight&&e!==g.ShaderOutput.ShadowHighlight,a=e!==g.ShaderOutput.ShadowExcludeHighlight;return t&&a?this._allRenderInstanceData:t?this._defaultRenderInstanceData:a?this._highlightRenderInstanceData:null}intersect(e,t,a,r){if(!this.baseMaterial.isVisible()||null==this._octree)return;const n=h.create();d.subtract(n,r,a);const s=n=>{this._instanceData.getCombinedModelTransform(n,G),e.transform.set(G),d.transformMat4(q,a,e.transform.inverse),d.transformMat4(z,r,e.transform.inverse);const s=this._instanceData.getState(n),i=this._instanceData.getLodLevel(n),o=this._levels.length;S.assert(0!=(s&A.StateFlags.ACTIVE),"invalid instance state"),S.assert(i>=0&&i<o,"invaid lod level"),this._levels[i].intersect(e,t,q,z,n,this.metadata,o)};this.baseMaterial.parameters.verticalOffset?this._octree.forEach(s):this._octree.forEachAlongRay(a,n,s)}notifyShaderTransformationChanged(){this._invalidateOctree(),this._requestUpdateCycle()}get _octree(){if(null==this._octreeCached){const e=this._instanceData,t=e.view?.state;if(!t)return null;this._octreeCached=new D.InstanceOctree(e,this.baseBoundingSphere);for(let a=0;a<e.capacity;++a)t.get(a)&A.StateFlags.ACTIVE&&this._octreeCached.addInstance(a)}return this._octreeCached}_invalidateOctree(){this._octreeCached=r.destroyMaybe(this._octreeCached)}queryDepthRange(e){if(null==this._octree)return{near:1/0,far:-1/0};const t=e.viewForward,a=this._octree.findClosest(t,b.DepthOrder.FRONT_TO_BACK,e.frustum),r=this._octree.findClosest(t,b.DepthOrder.BACK_TO_FRONT,e.frustum);if(null==a||null==r)return{near:1/0,far:-1/0};const n=e.eye,s=this._instanceData.view;s.boundingSphere.getVec(a,B),d.subtract(B,B,n);const i=d.dot(B,t)-B[3];s.boundingSphere.getVec(r,B),d.subtract(B,B,n);const o=d.dot(B,t)+B[3];return{near:Math.max(e.near,i),far:Math.min(e.far,o)}}_requestUpdateCycle(e=!1){this._updateCyclesWithStaticCamera=-1,this._cycleStartIndex=this._instanceIndex,e&&(this._needFullCycle=!0,this._context.requestRender())}_startUpdateCycle(){this._updateCyclesWithStaticCamera++,this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.startUpdateCycle()))))}get running(){return this._instanceData.size>0&&this._updateCyclesWithStaticCamera<1}runTask(e){const{_enableLevelSelection:t,_camera:a,_levelSelector:r}=this;this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.beginUpdate()))));const n=this._instanceData,s=n.view;let i=n.size;const o=n.capacity;let l=this._instanceIndex;const c=Math.ceil(o/500);for(let d=0;d<i&&!e.done;++d){l===this._cycleStartIndex&&this._startUpdateCycle();const d=s.state.get(l);let h=0;if(!(d&A.StateFlags.ALLOCATED)){l=l+1===o?0:l+1,i++;continue}const u=s.lodLevel.get(l);if(d&A.StateFlags.DEFAULT_ACTIVE&&this._defaultRenderInstanceData[0][u].freeTail(),d&A.StateFlags.HIGHLIGHT_ACTIVE&&this._highlightRenderInstanceData[0][u].freeTail(),d&A.StateFlags.REMOVE)n.freeInstance(l);else if(d&A.StateFlags.VISIBLE){let e=0;t&&(s.modelOrigin.getVec(l,P),e=r.selectLevel(P,n.getCombinedMedianScaleFactor(l),a)),h=d&~(A.StateFlags.ACTIVE|A.StateFlags.TRANSFORM_CHANGED),e>=0&&(d&A.StateFlags.HIGHLIGHT?(w(this._highlightRenderInstanceData[0][e],s,l),h|=A.StateFlags.HIGHLIGHT_ACTIVE):(w(this._defaultRenderInstanceData[0][e],s,l),h|=A.StateFlags.DEFAULT_ACTIVE)),s.state.set(l,h),s.lodLevel.set(l,e)}else h=d&~(A.StateFlags.ACTIVE|A.StateFlags.TRANSFORM_CHANGED),s.state.set(l,h);if(null!=this._octreeCached){const e=!!(d&A.StateFlags.ACTIVE),t=!!(h&A.StateFlags.ACTIVE);!e&&t?this._octreeCached.addInstance(l):e&&!t?this._octreeCached.removeInstance(l):e&&t&&d&A.StateFlags.TRANSFORM_CHANGED&&(this._octreeCached.removeInstance(l),this._octreeCached.addInstance(l))}l=l+1===o?0:l+1,l%c==0&&e.madeProgress()}this._instanceIndex=l,this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.endUpdate())))),this._context.requestRender()}_beginComponent(e,t,a){if(0===t.size)return null;const r=a.glMaterials.load(e.rctx,e.bindParameters.slot,e.output);return null!=r?r.beginSlot(e.bindParameters):null}_renderComponent(e,t,a,r,n){if(!t)return;const{bindParameters:s,rctx:i}=e;i.runAppleAmdDriverHelper();const o=i.bindTechnique(t,r.material.parameters,s);i.bindVAO(r.vao),t.ensureAttributeLocations(r.vao),o.bindDraw(j,s,r.material.parameters),_.debugFlags.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&e.output===g.ShaderOutput.Color&&(o.setUniform4fv("externalColor",k[Math.min(n,k.length-1)]),o.setUniform1i("colorMixMode",O.colorMixModes.replace));const l=a.capacity,c=a.headIndex,d=a.tailIndex,h=a.firstIndex,u=this._glInstanceBufferLayout,p=(e,n)=>{V.bindVertexBufferLayout(i,I.Default3D,a.buffer,u,e),i.drawArraysInstanced(t.primitiveType,0,r.vertexCount,n-e),V.unbindVertexBufferLayout(i,I.Default3D,a.buffer,u)};r.material.parameters.transparent&&null!=h?c>d?(S.assert(h>=d&&h<=c,"invalid firstIndex"),p(h,c),p(d,h)):c<d&&(h<=c?(S.assert(h>=0&&h<=c,"invalid firstIndex"),p(h,c),p(d,l),p(0,h)):(S.assert(h>=d&&h<=l,"invalid firstIndex"),p(h,l),p(0,c),p(d,h))):c>d?p(d,c):c<d&&(p(0,c),p(d,l)),i.bindVAO(null)}},t.__decorate([s.property({constructOnly:!0})],e.LodRenderer.prototype,"symbol",void 0),t.__decorate([s.property({constructOnly:!0})],e.LodRenderer.prototype,"optionalFields",void 0),t.__decorate([s.property({constructOnly:!0})],e.LodRenderer.prototype,"metadata",void 0),t.__decorate([s.property({constructOnly:!0})],e.LodRenderer.prototype,"shaderTransformation",void 0),t.__decorate([s.property()],e.LodRenderer.prototype,"_instanceData",void 0),t.__decorate([s.property()],e.LodRenderer.prototype,"_cycleStartIndex",void 0),t.__decorate([s.property({readOnly:!0})],e.LodRenderer.prototype,"_enableLevelSelection",null),t.__decorate([s.property()],e.LodRenderer.prototype,"_updateCyclesWithStaticCamera",void 0),t.__decorate([s.property({readOnly:!0})],e.LodRenderer.prototype,"running",null),e.LodRenderer=t.__decorate([l.subclass("esri.views.3d.webgl-engine.lib.lodRendering.LodRenderer")],e.LodRenderer);const P=h.create(),B=u.create(),G=c.create(),q=h.create(),z=h.create(),k=[u.fromValues(1,0,1,1),u.fromValues(0,0,1,1),u.fromValues(0,1,0,1),u.fromValues(1,1,0,1),u.fromValues(1,0,0,1)],j=new F.DefaultMaterialDrawParameters;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
