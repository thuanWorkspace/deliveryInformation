/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Evented","../../../../core/maybe","../../../../core/uid","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec4","../../../../chunks/vec4f64","./ContentObjectType","./testUtils","./textureUtils","./VertexAttribute","../../../support/Scheduler","../../../webgl/enums","../../../webgl/Texture","../../../webgl/TextureDescriptor"],(function(e,t,s,i,r,n,a,h,o,l,_,c,d,u,g,x,p,m,T,f,b){"use strict";const y=4096;function w(e,t){e.geometries[0].setAttributeData(p.VertexAttribute.SIZE,[t.textRenderer.displayWidth,t.textRenderer.displayHeight]),e.geometryVertexAttributeUpdated(e.geometries[0],p.VertexAttribute.SIZE)}function A(e,t){e.geometries[0].setAttributeData(p.VertexAttribute.UV0,t.uv),e.geometryVertexAttributeUpdated(e.geometries[0],p.VertexAttribute.UV0,!0)}e.TextTextureAtlas=class extends s{constructor(e){super(e),this.type=u.ContentObjectType.Texture,this.id=n.generateUID(),this.events=new i,this._glTexture=null,this._atlas=new k(256,256),this._needsRepack=!1,this._canRepack=!0,this._elementsToRender=new Map,this._elements=new Map,this._stageObjects=new Map,this.updating=!1}initialize(){this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","textAtlasCanvas"),this._canvas.setAttribute("style","display:none"),this._ctx=this._canvas.getContext("2d"),this._stage=this.view._stage,this._stage.add(this),this._updateCanvasElementSize(this._atlas),this._reset()}unload(){this._glTexture=r.disposeMaybe(this._glTexture),this.updating=!1,this.events.emit("unloaded")}get glTexture(){return this._glTexture}static get maxSize(){return E=g.textTextureAtlas.stableRendering?R:0,[y-R-E,y-R-E-v]}load(e){if(this._glTexture)return this._glTexture;const t=new b.TextureDescriptor;return t.wrapMode=T.TextureWrapMode.CLAMP_TO_EDGE,t.samplingMode=T.TextureSamplingMode.LINEAR_MIPMAP_LINEAR,t.hasMipmap=!0,t.preMultiplyAlpha=!0,t.maxAnisotropy=e.parameters.maxMaxAnisotropy,this._glTexture=new f.Texture(e,t,this._canvas),this._frameWorker=this.view.resourceController.scheduler.registerTask(m.TaskPriority.TEXT_TEXTURE_ATLAS,this),this.setDirty(),this._glTexture}dispose(){this._elements.clear(),this._elementsToRender.clear(),this._frameWorker=r.removeMaybe(this._frameWorker),this._glTexture&&(this._stage.remove(this),this._glTexture=r.disposeMaybe(this._glTexture)),this._canvas.width=0,this._canvas.height=0,this._canvas=null,this._ctx=null}_updateCanvasElementSize(e){this._canvas.setAttribute("width",e.width.toString()),this._canvas.setAttribute("height",e.height.toString())}_resizeAtlas(e,t){const{width:s,height:i}=this._atlas;s===e&&i===t||(this._atlas.width=e,this._atlas.height=t,this._glTexture?.resize(e,t),this._glTexture?.updateData(0,0,0,s,i,this._canvas),this._updateCanvasElementSize(this._atlas),this._elements.forEach((e=>{const t=this._stageObjects.get(e.textRenderer.key);t?.forEach((t=>A(t,e)))})),this._reset())}_reset(){this._elementsToRender.clear(),this._atlas.reset(),this._needsRepack=!0,this.setDirty()}_addAtlasElement(e,t,s,i){const r=this._atlas;if(r.width<s||r.height<i)return!1;let n=r.cursors.get(i);if(!n){if(r.height<r.nextY+i)return!1;n=[new M(r.nextY)],r.cursors.set(i,n),r.nextY+=i}let a=n.find((e=>r.width>=e.x+s));if(null==a){if(r.height<r.nextY+i)return!1;a=new M(r.nextY),r.nextY+=i,n.push(a)}return e.setNewPosition(a),this._elements.set(t,e),this._elementsToRender.set(t,e),a.x+=s,!0}_ensureStageObjects(e){const t=this._stageObjects.get(e);if(t)return t;const s=new Set;return this._stageObjects.set(e,s),s}_addStageObject(e,t){this._ensureStageObjects(e).add(t)}_removeStageObject(e,t){const s=this._stageObjects.get(e);s?.delete(t)&&(t.geometries[0].setAttributeData(p.VertexAttribute.SIZE,[0,0]),t.geometryVertexAttributeUpdated(t.geometries[0],p.VertexAttribute.SIZE),this._elementsToRender.delete(e))}_processAddition(e){const t=e.textRenderer.key;if(this._needsRepack)return void this._elements.set(t,e);const s=this._atlas,i=e.textRenderer.renderedWidth,r=e.textRenderer.renderedHeight,n=i+R,a=r+R+v;if(!this._addAtlasElement(e,t,n,a)){if(this._canRepack)this._reset();else if(s.width<n){const e=Math.min(x.applyTextureResizeModulo(Math.max(n,1.5*s.width)),y);this._resizeAtlas(e,s.height)}else{const e=s.nextY+a,t=Math.min(x.applyTextureResizeModulo(Math.max(e,1.5*s.height)),y);if(t>s.height)this._resizeAtlas(s.width,t);else if(s.width<y){const e=Math.min(x.applyTextureResizeModulo(1.5*s.width),y);this._resizeAtlas(e,s.height)}}this._elements.set(t,e)}}_renderElement(e){const t=e.commitNewPosition();this._ctx.clearRect(t[0]-R,t[1]-R,e.textRenderer.renderedWidth+2*R,e.textRenderer.renderedHeight+2*R),e.textRenderer.render(this._ctx,t[0],t[1]);const s=this._stageObjects.get(e.textRenderer.key);s?.forEach((t=>A(t,e)))}get running(){return this.updating}runTask(e){if(null==this._glTexture)return m.Task.YIELD;for(;this._needsRepack&&(this._canRepack||this._atlas.height<y&&this._atlas.height<y);){this._canRepack=this._needsRepack=!1;const t=this._elements;this._elements=new Map,t.forEach((e=>this._processAddition(e))),e.madeProgress()}if(this._elementsToRender.size>0){for(const[t,s]of this._elementsToRender){if(e.done)break;this._renderElement(s),this._elementsToRender.delete(t),e.madeProgress()}this._glTexture.setData(this._canvas)}this.updating=this._elementsToRender.size>0}addTextTexture(e,t){const s=e.key;this._addStageObject(s,t);let i=this._elements.get(s);null==i&&(i=new O(this._atlas,e),this._processAddition(i),this.setDirty()),w(t,i),A(t,i)}removeTextTexture(e,t){const s=e.key;if(!this._elements.get(s))return;this._removeStageObject(s,t);const i=this._stageObjects.get(s);i&&0!==i.size||this._elements.delete(s),0===i?.size&&this._stageObjects.delete(s),this._canRepack=!0}setDirty(){this._glTexture&&(this.updating=!0)}get test(){const{_elements:e,_stageObjects:t,_atlas:s}=this,i=this;return{elements:e,stageObjects:t,atlas:s,resizeAtlas:(e,t)=>i._resizeAtlas(e,t),run:e=>i.runTask(e)}}},t.__decorate([a.property({constructOnly:!0})],e.TextTextureAtlas.prototype,"view",void 0),t.__decorate([a.property({type:Boolean})],e.TextTextureAtlas.prototype,"updating",void 0),e.TextTextureAtlas=t.__decorate([_.subclass("esri.views.3d.webgl-engine.lib.TextTextureAtlas")],e.TextTextureAtlas);const R=2,v=2;class O{constructor(e,t){this._atlas=e,this.textRenderer=t,this._uv=d.create(),this._newPosition=[0,0]}get uv(){if(null==this._xOffset||null==this._yOffset)return d.ZEROS;const{renderedWidth:e,renderedHeight:t}=this.textRenderer;return c.set(this._uv,this._xOffset/this._atlas.width,(this._yOffset+t)/this._atlas.height,(this._xOffset+e)/this._atlas.width,this._yOffset/this._atlas.height)}setNewPosition(e){this._newPosition[0]=e.x,this._newPosition[1]=e.y}commitNewPosition(){return this._xOffset=this._newPosition[0],this._yOffset=this._newPosition[1],this._newPosition}get xOffset(){return this._xOffset}get yOffset(){return this._yOffset}}class k{constructor(e,t){this.width=e,this.height=t,this.cursors=new Map,this.nextY=0}reset(){this.cursors.clear(),this.nextY=E}}class M{constructor(e){this.y=e,this.x=E}}let E=0;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
