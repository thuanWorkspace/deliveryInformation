/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/asyncUtils","../../../../core/Evented","../../../../core/mathUtils","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../core/urlUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../support/requestImageUtils","./DefaultVertexBufferLayouts","./glUtil3D","./Program","./VertexAttribute","../shaders/Magnifier.glsl","../../../magnifier/resources","../../../webgl/enums","../../../webgl/renderState","../../../webgl/Texture","../../../webgl/TextureDescriptor"],(function(e,s,r,t,i,a,o,n,l,u,c,h,p,m,g,_,d,f,T,P,y,v,x,S,k){"use strict";e.MagnifierHelper=class extends r{constructor(){super(...arguments),this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this._passParameters=new P.MagnifierPassParameters,this.events=new i,this.attributeLocations=new Map([[T.VertexAttribute.POSITION,0]]),this._tmpScreenPoint=n.createScreenPointArray(),this._tmpRenderPoint=n.createRenderScreenPointArray()}get updating(){return null==this._imageSources&&null!=this._imageLoadTask&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this.removeAllHandles(),this._magnifier=e;const s=()=>{this._updateResourceLoading(),this.events.emit("request-render")};null!=this._magnifier&&this.addHandles(o.watch((()=>this._magnifier?.version),s)),s()}get enabled(){return null!=this._validMagnifier}get _validMagnifier(){return null!=this._magnifier&&this._magnifier.visible&&null!=this._magnifier.position&&this._magnifier.size>0?this._magnifier:null}get _factor(){return null!=this._magnifier&&this._magnifier.factor||1}destroy(){this._magnifier=null,null!=this._imageLoadTask&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this._disposeResources()}render(e,s){const r=this._validMagnifier;if(null==r)return;const t=s.camera.pixelRatio,i=Math.ceil(t*r.size);if(this._updateResources(e,i),null==this._resources)return;const o=this._passParameters.textures,l=Math.ceil(1/this._factor*i);o.input.resize(l,l),n.screenPointObjectToArray(r.position,this._tmpScreenPoint);const u=s.camera.screenToRender(this._tmpScreenPoint,this._tmpRenderPoint),c=s.camera.fullWidth,h=s.camera.fullHeight,p=.5*l,m=.5*l;u[0]=a.clamp(u[0],p,c-p-1),u[1]=a.clamp(u[1],m,h-m-1);const g=Math.floor(u[0]-p),_=Math.floor(u[1]-m),d=this._resources.program;d.bindTexture("textureInput",o.input),e.gl.copyTexImage2D(o.input.descriptor.target,0,o.input.descriptor.pixelFormat,g,_,l,l,0),this._passParameters.magnifier=r,e.useProgram(d),d.bindPass(this._passParameters,s),e.bindVAO(this._resources.vao),e.setPipelineState(this._resources.pipelineState),e.drawArrays(v.PrimitiveType.TRIANGLE_STRIP,0,4)}_updateResourceLoading(){const e=this._validMagnifier;if(null==e)return;const s=e.maskUrl,r=e.overlayUrl;null==this._imageLoadTask||this._imageLoadTask.maskUrl===s&&this._imageLoadTask.overlayUrl===r||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),null==this._imageSources&&null==this._imageLoadTask&&(this._imageLoadTask={maskUrl:s,overlayUrl:r,task:t.createTask((async e=>{const t=null==s||null==r?y.loadMagnifierResources(e):null,i=null!=s?g.requestImage(s,{signal:e}):t.then((e=>e.mask)),a=null!=r?g.requestImage(r,{signal:e}):t.then((e=>e.overlay));this._imageSources={mask:await i,overlay:await a},this._disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}_updateResources(e,s){if(!this.enabled)return void this._disposeResources();if(null!=this._resources){if(this._passParameters.textures.size!==s){const r=this._createTextureResources(e,s);if(null==r)return void this._disposeResources();this._disposeTextureResources(this._passParameters.textures),this._passParameters.textures=r}return}const r=this._createTextureResources(e,s);null!=r&&(this._resources={program:this._createProgram(e),vao:d.createQuadVAO(e,_.Pos2,this.attributeLocations,0,1),pipelineState:x.makePipelineState({blending:x.simpleBlendingParams(v.BlendFactor.ONE,v.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:null,depthWrite:null,colorWrite:x.defaultColorWriteParams})},this._passParameters.textures=r)}_disposeResources(){null!=this._resources&&(this._disposeTextureResources(this._passParameters.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}_disposeTextureResources(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}_createTextureResources(e,s){if(null==this._imageSources)return null;this._imageSources.overlay.width=s,this._imageSources.overlay.height=s,this._imageSources.mask.width=s,this._imageSources.mask.height=s;const r=new k.TextureDescriptor;r.internalFormat=v.PixelFormat.RGBA,r.wrapMode=v.TextureWrapMode.CLAMP_TO_EDGE,r.flipped=!0,r.preMultiplyAlpha=!l.isSVG(this._imageSources.overlay.src)||!e.driverTest.svgPremultipliesAlpha.result;const t=new S.Texture(e,r,this._imageSources.overlay);r.pixelFormat=r.internalFormat=v.PixelFormat.ALPHA,r.preMultiplyAlpha=!1;const i=new S.Texture(e,r,this._imageSources.mask);r.pixelFormat=r.internalFormat=v.PixelFormat.RGBA,r.flipped=!1;return{input:new S.Texture(e,r),mask:i,overlay:t,size:s}}_createProgram(e){return new f.Program(e,P.build(),this.attributeLocations)}},s.__decorate([u.property()],e.MagnifierHelper.prototype,"_imageSources",void 0),s.__decorate([u.property()],e.MagnifierHelper.prototype,"_imageLoadTask",void 0),s.__decorate([u.property({readOnly:!0})],e.MagnifierHelper.prototype,"updating",null),e.MagnifierHelper=s.__decorate([m.subclass("esri/views/3d/webgl-engine/lib/MagnifierHelper")],e.MagnifierHelper),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
