/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/vec2","../../../../chunks/vec2f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../../../../geometry/support/FloatArray","../../../../geometry/support/Indices","./Attribute","./Normals","./VertexAttribute","../materials/internal/MaterialUtil"],(function(t,e,r,i,s,o,a,n,h,u,l,c){"use strict";class b{constructor(t){this.builder=t}onPathChanged(t){this.builder.onPathChanged()}}class A extends b{constructor(t){super(t),this.vertexAttributeColor=o.fromValues(255,255,255,255),this.size=new Array,this.vertexAttributePosition=a.newFloatArray(3*this.builder.numVerticesTotal),this.vertexAttributeNormal=new Int16Array(2*this.builder.numVerticesTotal)}bakeVertexColors(t){this.vertexAttributeColor[0]=255*t[0],this.vertexAttributeColor[1]=255*t[1],this.vertexAttributeColor[2]=255*t[2],this.vertexAttributeColor[3]=255*(t.length>3?t[3]:1)}bake(t){this.size=t;const{numVerticesTotal:r,pathVertexData:s,path:o,positions:a,profileRightAxes:n,profileUpAxes:h,profileVertexAndNormals:l}=this.builder;for(let c=0;c<r;++c){let r=s[c];const b=0===r||r===o.vertices.length-1;r*=3;const A=g;let v=0,I=0;const f=4*c,y=i.set(P,n[f],n[f+1],n[f+2]),C=i.set(m,h[f],h[f+1],h[f+2]),O=e.set(d,l[f]*t[0],l[f+1]*t[1]);if(b)i.cross(A,C,y),v=n[f+3]*t[0],I=h[f+3];else{const t=x,r=p;e.set(t,n[f+3],h[f+3]);const s=e.length(t);e.normalize(t,t);const o=e.dot(O,t);if(Math.abs(o)>s){e.set(r,-t[1],t[0]);const i=e.dot(O,r);e.scale(t,t,s*Math.sign(o)),e.scale(r,r,i),e.add(O,t,r)}i.set(A,0,0,0)}const w=i.set(V,y[0]*O[0]+C[0]*O[1],y[1]*O[0]+C[1]*O[1],y[2]*O[0]+C[2]*O[1]),D=3*c;this.vertexAttributePosition[D]=a[r]+w[0]+A[0]*v,this.vertexAttributePosition[D+1]=a[r+1]+w[1]+A[1]*v,this.vertexAttributePosition[D+2]=a[r+2]+w[2]+A[2]*v;const N=e.set(d,l[f+2],l[f+3]);u.compressNormal(this.vertexAttributeNormal,c,y[0]*N[0]+C[0]*N[1]+A[0]*I,y[1]*N[0]+C[1]*N[1]+A[1]*I,y[2]*N[0]+C[2]*N[1]+A[2]*I)}}createGeometryData(){const t=this.builder.vertexIndices.length,{normalIndices:e,vertexIndices:r}=this.builder;return[[l.VertexAttribute.POSITION,new h.Attribute(this.vertexAttributePosition,r,3,!0)],[l.VertexAttribute.NORMALCOMPRESSED,new h.Attribute(this.vertexAttributeNormal,e,2,!0)],[l.VertexAttribute.COLOR,new h.Attribute(this.vertexAttributeColor,n.getZeroIndexArray(t),4)]]}onPathChanged(t){super.onPathChanged(t),this.bake(this.size)}intersect(t,e,r){const i=this.builder.vertexIndices,s=new h.Vertices(this.vertexAttributePosition,3),o=i.length/3;c.intersectTriangles(t,e,0,o,i,s,void 0,void 0,r)}}class v extends b{constructor(t,e,r,i){super(t),this.sizeAttributeValue=e,this.colorAttributeValue=r,this.opacityAttributeValue=i,this.vvData=null,this.baked=new A(t),this.vvData=a.newFloatArray(4*this.builder.path.vertices.length);for(let s=0;s<this.builder.path.vertices.length;++s){this.vvData[4*s]=e,this.vvData[4*s+1]=r,this.vvData[4*s+2]=i;const t=0===s||s===this.builder.path.vertices.length-1;this.vvData[4*s+3]=t?1:0}}createGeometryData(){const{positions:t,profileRightAxes:e,profileUpAxes:r,profileVertexAndNormals:i,pathVertexIndices:s,vertexIndices:o}=this.builder;return[[l.VertexAttribute.POSITION,new h.Attribute(t,s,3,!0)],[l.VertexAttribute.PROFILERIGHT,new h.Attribute(e,o,4,!0)],[l.VertexAttribute.PROFILEUP,new h.Attribute(r,o,4,!0)],[l.VertexAttribute.PROFILEVERTEXANDNORMAL,new h.Attribute(i,o,4,!0)],[l.VertexAttribute.FEATUREVALUE,new h.Attribute(this.vvData,s,4,!0)]]}onPathChanged(t){super.onPathChanged(t);const e=t.getMutableAttribute(l.VertexAttribute.POSITION);e&&(e.data=this.builder.positions)}}const d=r.create(),x=r.create(),p=r.create(),V=s.create(),g=s.create(),P=s.create(),m=s.create();t.FastUpdatePathGeometry=v,t.PathGeometryData=b,t.StaticPathGeometry=A,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
