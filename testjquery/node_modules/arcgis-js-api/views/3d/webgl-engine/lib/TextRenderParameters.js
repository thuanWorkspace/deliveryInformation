/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../Color","../../../../core/fontUtils","../../../../core/Logger","../../../../core/screenUtils","../../../../chunks/vec4f64"],(function(o,t,e,n,i,r){"use strict";class l{constructor(o){this.definition=o,this.key=JSON.stringify(o),this.haloSize=Math.round(o.halo.size),this.textStyle=this._colorToRGBA(o.color),this.haloStyle=this._colorToRGB(o.halo.color),this.backgroundStyle=0!==o.background.color[3]?this._colorToRGBA(o.background.color):null}fontString(o){const t=this.definition.font,e="sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji";return`${t.style} ${t.weight} ${o}px ${t.family}, ${e}`}setFontProperties(o,t){o.font=this.fontString(t),o.textAlign="left",o.textBaseline="alphabetic"}_colorToRGB(o){return`rgb(${o.slice(0,3).map((o=>Math.floor(255*o))).toString()})`}_colorToRGBA(o){return`rgba(${o.slice(0,3).map((o=>Math.floor(255*o))).toString()},${o[3]})`}static async fromSymbol(o,a){const c=o?.material?.color,f=t.toUnitRGBA(c)??r.ZEROS,g=null!=o.size?i.pt2px(o.size):12,u=o.lineHeight,d=null!=o.background?t.toUnitRGBA(o.background.color):r.ZEROS,h={family:o.font?.family??"sans-serif",decoration:o.font?.decoration??"none",weight:o.font?.weight??"normal",style:o.font?.style??"normal"},m=o.halo,y=null!=m?.color&&m.size>0?{size:i.pt2px(m.size),color:t.toUnitRGBA(m.color)}:{size:0,color:r.ZEROS},S=new l({color:f,size:g,background:{color:d,padding:null!=o.background?[.65*g,.5*g]:[0,0],borderRadius:null!=o.background?g*(6/16):0},lineSpacingFactor:u,font:h,halo:y,pixelRatio:a});if(o.font){let t=!1;const i=S.fontString(g);try{t=(await document.fonts.load(i)).some((o=>!e.isCachedFontFace(o)))}catch(b){n.getLogger("esri.views.3d.webgl-engine.lib.TextRenderParameters").warnOnce(`Failed to preload font '${i}'. Some text symbology may be rendered using the default browser font.`)}if(!t&&!s.has(o.font.family))try{await e.loadFont(o.font)}catch(b){}}return S}}const s=new Set(["Arial","Times New Roman","Courier New","serif","sans-serif","monospace","cursive","fantasy","system-ui","ui-serif","ui-sans-serif","ui-monospace","ui-rounded","math","emoji","fangsong"]);o.TextRenderParameters=l,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})}));
