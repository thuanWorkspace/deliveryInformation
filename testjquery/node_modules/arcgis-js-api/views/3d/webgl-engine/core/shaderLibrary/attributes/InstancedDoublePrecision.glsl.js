/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../../chunks/tslib.es6","../../../../../../chunks/mat3","../../../../../../chunks/mat3f64","../../../../../../chunks/mat4f64","../../../../../../chunks/vec3","../../../../../../chunks/vec3f64","../ShaderOutput","../util/DoublePrecision.glsl","../util/View.glsl","../../shaderModules/Float3DrawUniform","../../shaderModules/interfaces","../../shaderModules/Matrix3PassUniform","../../shaderModules/Matrix4PassUniform","../../shaderTechnique/ShaderTechniqueConfiguration","../../../lib/VertexAttribute","../../../../../webgl/doublePrecisionUtils"],(function(e,r,n,o,a,t,i,s,l,c,d,m,u,v,g,M,x){"use strict";class p extends g.ShaderTechniqueConfiguration{constructor(){super(...arguments),this.instancedDoublePrecision=!1,this.hasModelTransformation=!1}}r.__decorate([g.parameter()],p.prototype,"instancedDoublePrecision",void 0),r.__decorate([g.parameter()],p.prototype,"hasModelTransformation",void 0);class f extends m.NoParameters{constructor(){super(...arguments),this.modelTransformation=null}}const h=o.create();function b(e,r){const o=r.hasModelTransformation,i=r.instancedDoublePrecision;o&&(e.vertex.uniforms.add(new v.Matrix4PassUniform("model",(e=>e.modelTransformation??a.IDENTITY))),e.vertex.uniforms.add(new u.Matrix3PassUniform("normalLocalOriginFromModel",(e=>(n.normalFromMat4(h,e.modelTransformation??a.IDENTITY),h))))),r.instanced&&i&&(e.attributes.add(M.VertexAttribute.INSTANCEMODELORIGINHI,"vec3"),e.attributes.add(M.VertexAttribute.INSTANCEMODELORIGINLO,"vec3"),e.attributes.add(M.VertexAttribute.INSTANCEMODEL,"mat3"),e.attributes.add(M.VertexAttribute.INSTANCEMODELNORMAL,"mat3"));const g=e.vertex;i&&(g.include(l.DoublePrecision,r),g.uniforms.add(new d.Float3DrawUniform("viewOriginHi",((e,r)=>x.encodeDoubleHi(t.set(w,r.camera.viewInverseTransposeMatrix[3],r.camera.viewInverseTransposeMatrix[7],r.camera.viewInverseTransposeMatrix[11]),w))),new d.Float3DrawUniform("viewOriginLo",((e,r)=>x.encodeDoubleLo(t.set(w,r.camera.viewInverseTransposeMatrix[3],r.camera.viewInverseTransposeMatrix[7],r.camera.viewInverseTransposeMatrix[11]),w))))),g.code.add(m.glsl`
    vec3 getVertexInLocalOriginSpace() {
      return ${o?i?"(model * vec4(instanceModel * localPosition().xyz, 1.0)).xyz":"(model * localPosition()).xyz":i?"instanceModel * localPosition().xyz":"localPosition().xyz"};
    }

    vec3 subtractOrigin(vec3 _pos) {
      ${i?m.glsl`
          // Negated inputs are intentionally the first two arguments. The other way around the obfuscation in dpAdd() stopped
          // working for macOS 14+ and iOS 17+.
          // Issue: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/56280
          vec3 originDelta = dpAdd(-instanceModelOriginHi, -instanceModelOriginLo, viewOriginHi, viewOriginLo);
          return _pos - originDelta;`:"return vpos;"}
    }
    `),g.code.add(m.glsl`
    vec3 dpNormal(vec4 _normal) {
      return normalize(${o?i?"normalLocalOriginFromModel * (instanceModelNormal * _normal.xyz)":"normalLocalOriginFromModel * _normal.xyz":i?"instanceModelNormal * _normal.xyz":"_normal.xyz"});
    }
    `),r.output===s.ShaderOutput.Normal&&(c.addViewNormal(g),g.code.add(m.glsl`
    vec3 dpNormalView(vec4 _normal) {
      return normalize((viewNormal * ${o?i?"vec4(normalLocalOriginFromModel * (instanceModelNormal * _normal.xyz), 1.0)":"vec4(normalLocalOriginFromModel * _normal.xyz, 1.0)":i?"vec4(instanceModelNormal * _normal.xyz, 1.0)":"_normal"}).xyz);
    }
    `)),r.hasVertexTangents&&g.code.add(m.glsl`
    vec4 dpTransformVertexTangent(vec4 _tangent) {
      ${o?i?"return vec4(normalLocalOriginFromModel * (instanceModelNormal * _tangent.xyz), _tangent.w);":"return vec4(normalLocalOriginFromModel * _tangent.xyz, _tangent.w);":i?"return vec4(instanceModelNormal * _tangent.xyz, _tangent.w);":"return _tangent;"}
    }`)}const w=i.create();e.InstancedDoubleConfiguration=p,e.InstancedDoublePassParameters=f,e.InstancedDoublePrecision=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
