/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/maybe","./FBOPool","../../../webgl/enums","../../../webgl/FramebufferObject","../../../webgl/Renderbuffer","../../../webgl/RenderbufferDescriptor","../../../webgl/Texture","../../../webgl/TextureDescriptor"],(function(e,t,r,o,a,i,h,s,c){"use strict";class n{constructor(e){this.rctx=e,this._acquired=new Set,this._cache=new r.FBOPool(e.newCache,"FBOCache"),this._depthCache=new r.FBOPool(e.newCache,"DepthAttachmentCache"),this._colorCache=new r.FBOPool(e.newCache,"ColorAttachmentCache")}destroy(){this._cache.destroy(),this._depthCache.destroy(),this._colorCache.destroy()}clean(){this._cache.clean(),this._colorCache.clean(),this._depthCache.clean()}frame(){this._cache.frame(),this._colorCache.frame(),this._depthCache.frame()}get usedMemory(){return Array.from(this._acquired.values()).reduce(((e,t)=>e+("colorTexture"in t?t.colorTexture?.gpuMemoryUsage??0:t.usedMemory)),this._cache.usedMemory+this._colorCache.usedMemory+this._depthCache.usedMemory)}set interactive(e){this._cache.interactive=this._colorCache.interactive=this._depthCache.interactive=e}acquire(e,t,r){const o=T(e,t,r),i=this._cache.pop(o)||new l(o,new a.FramebufferObject(this.rctx,{...f[e],width:t,height:r}),(e=>(i.releaseDepth(),i.depth=this._acquireDepth(e,i.fbo.width,i.fbo.height),i.fbo.attachDepthStencil(i.depth.attachment),i)),((e,o)=>{const a=this._acquireColor(e,t,r);return i.colors??(i.colors=new Map),i.colors.set(o,a),i.fbo.attachColorTexture(a.attachment,o),i}));return i.release=()=>{this._acquired.delete(i),i.releaseDepth(),this._cache.put(i),i.release=()=>console.log(`Double FBO release in ${(new Error).stack}`)},this.rctx.unbindTexture(i.fbo.colorTexture),this._trackHandle(i)}acquireDepth(e,t,r){return this._acquireDepth(e,t,r)}_acquireDepth(t,r,o){const a=T(t,r,o),h=this._depthCache.pop(a);if(h)return this._trackHandle(h);const c=t===e.DepthFormat.DEPTH_STENCIL_TEXTURE?new d(a,new s.Texture(this.rctx,{...w[t],width:r,height:o}),(()=>{this._acquired.delete(c),this._depthCache.put(c)})):new d(a,new i.Renderbuffer(this.rctx,{...w[t],width:r,height:o}),(()=>{this._acquired.delete(c),this._depthCache.put(c)}));return this._trackHandle(c)}_acquireColor(e,t,r){const o=T(e,t,r),a=this._colorCache.pop(o);if(a)return this._trackHandle(a);const i=new u(o,new s.Texture(this.rctx,{...f[e],width:t,height:r}),(()=>{this._acquired.delete(i),this._colorCache.put(i)}));return this._trackHandle(i)}_trackHandle(e){return this._acquired.add(e),e}}class l{constructor(e,t,r,o){this.key=e,this.fbo=t,this.acquireDepth=r,this.acquireColor=o,this.release=()=>{},this.incarnation=0}dispose(){this.fbo.dispose()}releaseDepth(){this.fbo.detachDepthStencilTexture(),this.fbo.detachDepthStencilBuffer(),this.depth=t.releaseMaybe(this.depth)}detachDepth(){const e=this.depth;return this.depth=void 0,this.fbo.detachDepthStencilTexture(),this.fbo.detachDepthStencilBuffer(),e}attachDepth(e){return this.releaseDepth(),e&&(this.fbo.attachDepthStencil(e.attachment),this.depth=e),this}releaseColor(e){this.fbo.detachColorTexture(e);const r=this.colors?.get(e);this.colors?.delete(e),t.releaseMaybe(r)}get colorTexture(){return this.fbo?.colorTexture}getColorTexture(e=o.ColorAttachment.COLOR_ATTACHMENT0){return this.fbo?.getColorTexture(e)}get usedMemory(){return this.fbo.gpuMemoryUsage}}class p{constructor(e,t,r){this.key=e,this.attachment=t,this.release=r,this.incarnation=0}dispose(){this.attachment.dispose()}get usedMemory(){return this.attachment.gpuMemoryUsage}}class d extends p{}class u extends p{constructor(e,t,r){super(e,t,r),this.attachment=t,this.release=r}}function T(e,t,r){return`${e}x${t}x${r}`}var _;e.ColorFormat=void 0,(_=e.ColorFormat||(e.ColorFormat={}))[_.RED=0]="RED",_[_.RG=1]="RG",_[_.RGBA4=2]="RGBA4",_[_.RGBA=3]="RGBA",_[_.RGBA_MIPMAP=4]="RGBA_MIPMAP",_[_.R16F=5]="R16F",_[_.RGBA16F=6]="RGBA16F";const m=new c.TextureDescriptor;m.pixelFormat=o.PixelFormat.RED,m.internalFormat=o.SizedPixelFormat.R8,m.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE;const F=new c.TextureDescriptor;F.pixelFormat=o.PixelFormat.RG,F.internalFormat=o.SizedPixelFormat.RG8,F.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE;const E=new c.TextureDescriptor;E.internalFormat=o.SizedPixelFormat.RGBA4,E.dataType=o.PixelType.UNSIGNED_SHORT_4_4_4_4,E.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE;const D=new c.TextureDescriptor;D.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE;const x=new c.TextureDescriptor;x.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE,x.samplingMode=o.TextureSamplingMode.LINEAR_MIPMAP_LINEAR,x.hasMipmap=!0,x.maxAnisotropy=8;const C=new c.TextureDescriptor;C.pixelFormat=o.PixelFormat.RED,C.dataType=o.PixelType.HALF_FLOAT,C.internalFormat=o.SizedPixelFormat.R16F,C.samplingMode=o.TextureSamplingMode.NEAREST;const R=new c.TextureDescriptor;R.dataType=o.PixelType.HALF_FLOAT,R.internalFormat=o.SizedPixelFormat.RGBA16F,R.samplingMode=o.TextureSamplingMode.NEAREST;const f={[e.ColorFormat.RED]:m,[e.ColorFormat.RG]:F,[e.ColorFormat.RGBA4]:E,[e.ColorFormat.RGBA]:D,[e.ColorFormat.RGBA_MIPMAP]:x,[e.ColorFormat.R16F]:C,[e.ColorFormat.RGBA16F]:R};var M;e.DepthFormat=void 0,(M=e.DepthFormat||(e.DepthFormat={}))[M.DEPTH_STENCIL_TEXTURE=0]="DEPTH_STENCIL_TEXTURE",M[M.DEPTH_STENCIL_BUFFER=1]="DEPTH_STENCIL_BUFFER",M[M.DEPTH24_BUFFER=2]="DEPTH24_BUFFER",M[M.DEPTH16_BUFFER=3]="DEPTH16_BUFFER";const P=new c.TextureDescriptor;P.pixelFormat=o.PixelFormat.DEPTH_STENCIL,P.dataType=o.PixelType.UNSIGNED_INT_24_8,P.samplingMode=o.TextureSamplingMode.NEAREST,P.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE;const w={[e.DepthFormat.DEPTH_STENCIL_TEXTURE]:P,[e.DepthFormat.DEPTH_STENCIL_BUFFER]:new h.RenderbufferDescriptor(o.RenderbufferFormat.DEPTH24_STENCIL8,4),[e.DepthFormat.DEPTH24_BUFFER]:new h.RenderbufferDescriptor(o.RenderbufferFormat.DEPTH_COMPONENT24,4),[e.DepthFormat.DEPTH16_BUFFER]:new h.RenderbufferDescriptor(o.RenderbufferFormat.DEPTH_COMPONENT16,4)};e.FBOCache=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
