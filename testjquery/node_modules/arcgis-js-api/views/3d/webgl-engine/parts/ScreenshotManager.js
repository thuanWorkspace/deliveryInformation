/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/promiseUtils","../../../../chunks/vec4f64","../core/FBOCache","../lib/basicInterfaces","../../../support/RenderState","../../../support/screenshotUtils","../../../webgl/enums","../../../webgl/FramebufferObject","../../../../core/imageUtils"],(function(e,t,r,a,s,i,n,o,c,h){"use strict";class l{constructor(e,t,r){this.parameters=e,this.frameHasDecorations=t,this.fbos=r}}class d{constructor(e,t,r){this._rctx=e,this._renderFunctions=t,this._forceCameraHook=r,this.supersample=!0,this._screenshotQueue=new Array}destroy(){this._rctx=null}async takeScreenshot(e){await this._renderFunctions.prepareOverlay(),this._renderFunctions.requestRenderScene(s.RenderRequestType.BACKGROUND);const r=t.createResolver();return this._screenshotQueue.push({settings:e,resolver:r}),r.promise}update(e,t){for(const r of this._screenshotQueue){if(null==this._rctx){r.resolver.reject();continue}const a={...r.settings,pixelRatio:r.settings.pixelRatio*e.parameters.camera.pixelRatio},s=this._renderScreenshot(e,a,t);r.resolver(s)}this._screenshotQueue.length=0}_renderScreenshotOverlay(e,t,r){e.width=t.width,e.height=t.height;const a=e.getContext("2d"),i=r.pixelRatio;return a.save(),a.translate(0,t.height),a.scale(1,-1),r.region&&a.translate(-r.region.x,-r.region.y),a.scale(i,i),t=this._renderFunctions.renderOverlay(e,r.disableDecorations?s.Decorations.OFF:s.Decorations.ON,t),a.restore(),t}_readbackScreenshot(e,t){return e.resample?this._readbackScreenshotResampled({...e,resample:e.resample},t):this._readbackScreenshotImmediate(e,t)}_readbackScreenshotResampled(e,t){const{framebufferWidth:r,framebufferHeight:a,region:s,resample:i}=e,c=this._ensureScreenshotEncodeCanvas();let l=h.createEmptyImageData(r,a,c);this._rctx.gl.readPixels(0,0,r,a,o.PixelFormat.RGBA,o.DataType.UNSIGNED_BYTE,new Uint8Array(l.data.buffer)),t(),l=this._renderScreenshotOverlay(c,l,{...e,region:void 0});const d=h.createEmptyImageData(s.width,s.height,c);return n.resampleHermite(l,d,!0,i.region.x,a-(i.region.y+i.region.height),i.region.width,i.region.height)}_readbackScreenshotImmediate(e,t){const{framebufferHeight:r,region:a}=e,s=this._ensureScreenshotEncodeCanvas(),i=h.createEmptyImageData(a.width,a.height,s);return this._rctx.gl.readPixels(a.x,r-(a.y+a.height),a.width,a.height,o.PixelFormat.RGBA,o.DataType.UNSIGNED_BYTE,new Uint8Array(i.data.buffer)),t(),this._renderScreenshotOverlay(s,i,e)}_renderScreenshot(e,t,n){const o=e.parameters.camera,h={width:t.framebufferWidth,height:t.framebufferHeight};c.ensureAttachmentMaxSize(h,Math.min(this._rctx.parameters.maxTextureSize,this._rctx.parameters.maxRenderbufferSize));let l=!1;const d=t.disableDecorations&&e.frameHasDecorations,u=h.width!==o.fullWidth||h.height!==o.fullHeight,f=t.ignorePadding&&o.pixelRatio!==t.pixelRatio,m=u||d||f||t.objectAndLayerIdColor;let g=null;t.objectAndLayerIdColor&&(g=e.fbos.acquire(a.ColorFormat.RGBA,h.width,h.height),g.acquireDepth(a.DepthFormat.DEPTH_STENCIL_BUFFER));let p=null;if(m){const c=o.clone();if(t.ignorePadding){const e=r.clone(c.padding);for(let r=0;r<4;r++)e[r]=Math.round(e[r]/c.pixelRatio*t.pixelRatio);c.padding=e}c.fullWidth=h.width,c.fullHeight=h.height,c.pixelRatio=t.pixelRatio;const d=o.fovX-c.fovX,u=o.fovY-c.fovY;d<0&&d<u?c.fovX=o.fovX:u<0&&u<d&&(c.fovY=o.fovY);const f={camera:c,contentCamera:c,mode:i.RenderState.IDLE,alignPixelEnabled:!0,contentPixelRatio:c.pixelRatio};this._forceCameraHook(f),l=!0,p=e.fbos.acquire(a.ColorFormat.RGBA,h.width,h.height);const m=t.disableDecorations?s.Decorations.OFF:s.Decorations.ON;this._renderFunctions.renderScene(p,g,f,m,n)}const _=()=>{this._rctx.bindFramebuffer(null),p?.release()};this._rctx.bindFramebuffer(p?.fbo);const b=this._readbackScreenshot(t,_);let x=null;if(t.objectAndLayerIdColor){const e=()=>{this._rctx.bindFramebuffer(null),g?.release()};this._rctx.bindFramebuffer(g?.fbo),x=this._readbackScreenshot(t,e),this._rctx.bindFramebuffer(null)}if(m&&!this._rctx.contextAttributes.alpha)for(let r=3;r<b.data.length;r+=4)b.data[r]=255;if(x&&!this._rctx.contextAttributes.alpha)for(let r=3;r<x.data.length;r+=4)x.data[r]=255;return l&&this._forceCameraHook(e.parameters),[b,x]}_ensureScreenshotEncodeCanvas(){return this._screenshotEncodeCanvas||(this._screenshotEncodeCanvas=document.createElement("canvas")),this._screenshotEncodeCanvas}}e.ScreenshotContext=l,e.ScreenshotManager=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
