/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/mathUtils","../../../../../chunks/vec3f64","../../../../../geometry/support/aaBoundingBox","../../materials/internal/MaterialUtil"],(function(t,e,n,i,r){"use strict";const s=200,o=40,a=.8,c=10,l=1e-6;function h(t,e,n){const i=e,r=n;let s=0,o=1/0;for(let a=0;a<3;++a){{const e=t[a];if(i[a]<e){if(r[a]<=l)return!1;const t=(e-i[a])/r[a];s=Math.max(s,t)}else if(r[a]<=-l){const t=(e-i[a])/r[a];o=Math.min(o,t)}if(s>o)return!1}{const e=t[a+3];if(i[a]>e){if(r[a]>=-l)return!1;const t=(e-i[a])/r[a];s=Math.max(s,t)}else if(r[a]>=l){const t=(e-i[a])/r[a];o=Math.min(o,t)}if(s>o)return!1}}return!0}class f{constructor(t,e,n,i,r){this.aabb=t,this.axis=e,this.d=n,this.midStartIndex=i,this.rightStartIndex=r}}class u{constructor(t,i,r,s){this.globalTriangleVertexIndices=t,this.firstTriangleIndex=i,this.positions=s,this._rayDirection=n.create(),this.bspNodeTree=new Array;const l=r-i,h=l<=I?new Uint16Array(l):new Uint32Array(l);this.indices=h;for(let e=0;e<l;++e)h[e]=e;{const n=b(t,i,r,s.data,s.stride),u=e.clamp(Math.log2(l/o),2,c),d=(t,e,i)=>{const r=x(h,n,t,e),s=e-t;if(s<=o){const n=new f(r,void 0,0,t,e);return this.bspNodeTree.push(n),n}const{axis:c,midValue:l}=N(r),m=y(h,n,t,e,c,l),g=(t,e)=>{if(i>u)return;const n=e-t;return n<o||n>=a*s?void 0:d(t,e,i+1)},b=new f(r,c,l,m.next,m.mid);return this.bspNodeTree.push(b),b.leftNode=g(t,m.next),b.rightNode=g(m.mid,e),b};d(0,l,0),this.triangleVertexIndices=p(h,t,i,r)}}intersectRayTriangleRange(t,e){{if(t>=e)return;const n=this.triangleVertexIndices,i=this.positions.data,s=this.positions.stride,o=this._rayOrigin,a=o[0],c=o[1],l=o[2],h=this._rayDirection,f=h[0],u=h[1],m=h[2];for(let g=t,y=3*t;g<e;++g){let t=n[y++]*s;const e=i[t++],o=i[t++],h=i[t];t=n[y++]*s;const x=i[t++],N=i[t++],b=i[t];t=n[y++]*s;const p=x-e,I=N-o,M=b-h,T=i[t++]-e,S=i[t++]-o,R=i[t]-h,V=u*R-S*m,_=m*T-R*f,w=f*S-T*u,U=p*V+I*_+M*w;if(Math.abs(U)<=Number.EPSILON)continue;const v=a-e,A=c-o,B=l-h,D=v*V+A*_+B*w;if(U>0){if(D<0||D>U)continue}else if(D>0||D<U)continue;const P=A*M-I*B,F=B*p-M*v,O=v*I-p*A,k=f*P+u*F+m*O;if(U>0){if(k<0||D+k>U)continue}else if(k>0||D+k<U)continue;const L=(T*P+S*F+R*O)/U;if(L>=0){const t=this.indices[g]+this.firstTriangleIndex,e=r.computeNormal(p,I,M,T,S,R,d);this._callback(L,e,t,!1)}}}u.numFacesTested+=e-t}intersectRay(t,e){u.numFacesTested=0;const i=n.fromValues(t.r0[0],t.r0[1],t.r0[2]),r=n.fromValues(t.r1[0],t.r1[1],t.r1[2]),s=r[0]-i[0],o=r[1]-i[1],a=r[2]-i[2];if(s*s+o*o+a*a<l)return;this._rayOrigin=i;const c=this._rayDirection;c[0]=s,c[1]=o,c[2]=a;const h=this.triangleVertexIndices.length/3;this._callback=e;const f=this.bspNodeTree[0];this.intersectRayBSP(f,0,h)}intersectRayBSP(t,e,n){const i=this._rayOrigin,r=this._rayDirection;if(!h(t.aabb,i,r))return;const s=t.axis,o=t.d;if(i[s]<o||r[s]<0){const n=e,i=t.midStartIndex;if(n<i){const e=t.leftNode;void 0!==e?this.intersectRayBSP(e,n,i):this.intersectRayTriangleRange(n,i)}}if(this.intersectRayTriangleRange(t.midStartIndex,t.rightStartIndex),i[s]>o||r[s]>0){const e=t.rightStartIndex,i=n;if(e<i){const n=t.rightNode;void 0!==n?this.intersectRayBSP(n,e,i):this.intersectRayTriangleRange(e,i)}}}get estimatedMemoryUsage(){return this.triangleVertexIndices.byteLength+this.indices.byteLength}}u.numFacesTested=0;const d=n.create(),m=[1/0,1/0,1/0],g=[-1/0,-1/0,-1/0];function y(t,e,n,i,r,s){let o=n,a=i;for(;o<a;){const n=t[o];e[6*n+r+3]<=s?++o:(--a,t[o]=t[a],t[a]=n)}let c=o;for(a=i;c<a;){const n=t[a-1];e[6*n+r]>=s?--a:(t[a-1]=t[c],t[c]=n,++c)}return{next:o,mid:c}}function x(t,e,n,r){if(r<=n)return i.fromValues(NaN,NaN,NaN,NaN,NaN,NaN);{const i=6*t[n];for(let t=0;t<3;++t)m[t]=e[i+0+t],g[t]=e[i+3+t]}for(let i=n+1;i<r;++i){const n=6*t[i];for(let t=0;t<3;++t)m[t]=Math.min(m[t],e[n+0+t]),g[t]=Math.max(g[t],e[n+3+t])}return i.fromValues(m[0],m[1],m[2],g[0],g[1],g[2])}function N(t){const e=t[3]-t[0],n=t[4]-t[1],i=t[5]-t[2],r=e>n?e>i?0:n>i?1:2:n>i?1:i>e?2:0;return{axis:r,midValue:(t[r]+t[r+3])/2}}function b(t,e,n,i,r){const s=n-e,o=new Float32Array(6*s);for(let a=0;a<s;++a){const n=3*(a+e),s=t[n]*r,c=t[n+1]*r,l=t[n+2]*r;for(let t=0;t<3;++t){const e=i[s+t],n=i[c+t],r=i[l+t];o[6*a+t]=Math.min(e,n,r),o[6*a+3+t]=Math.max(e,n,r)}}return o}function p(t,e,n,i){const r=i-n;let s=0;for(let a=n;a<i;++a)for(let t=0;t<3;++t)s=Math.max(e[3*a+t],s);const o=s<=I?new Uint16Array(3*r):new Uint32Array(3*r);for(let a=0;a<r;++a){const i=3*(t[a]+n);for(let t=0;t<3;++t){const n=e[i+t];o[3*a+t]=n}}return o}const I=65535;t.ComponentIntersectionData=u,t.componentMinimalSizeForIntersectionData=s,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
