/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../../ViewingMode","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/DefaultVertexAttributeLocations","../lib/Program","../../../../chunks/LineCallout.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,i,t,n,a,r,l,o,u,d){"use strict";class s extends a.ShaderTechnique{initializeConfiguration(e,i){i.spherical=e.viewingMode===t.ViewingMode.Global}initializeProgram(e){return new l.Program(e.rctx,s.shader.get().build(this.configuration),r.Default3D)}setPipelineState(e){const i=e?u.CompareFunction.ALWAYS:u.CompareFunction.LESS;return this.configuration.depthHudEnabled?d.makePipelineState({depthTest:{func:i},depthWrite:d.defaultDepthWriteParams}):d.makePipelineState({blending:d.separateBlendingParams(u.BlendFactor.ONE,u.BlendFactor.SRC_ALPHA,u.BlendFactor.ONE_MINUS_SRC_ALPHA,u.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:{func:i},colorWrite:d.defaultColorWriteParams})}initializePipeline(){return this.setPipelineState(this.configuration.multipassEnabled)}}s.shader=new n.ReloadableShaderModule(o.LineCallout,(()=>new Promise(((i,t)=>e(["./LineCallout.glsl"],i,t))))),i.LineCalloutTechnique=s,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})}));
