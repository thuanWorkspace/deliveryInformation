/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../core/shaderLibrary/ShaderOutput","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OrderIndependentTransparency","../lib/Program","../lib/StencilUtils","../lib/TransparencyPassType","../lib/VertexAttribute","../../../../chunks/LineMarker.glsl","../../../webgl/renderState"],(function(e,t,i,r,n,l,a,s,u,c,o,d){"use strict";const p=new Map([[c.VertexAttribute.POSITION,0],[c.VertexAttribute.UV0,1],[c.VertexAttribute.AUXPOS1,2],[c.VertexAttribute.NORMAL,3],[c.VertexAttribute.COLOR,4],[c.VertexAttribute.COLORFEATUREATTRIBUTE,4],[c.VertexAttribute.SIZE,5],[c.VertexAttribute.SIZEFEATUREATTRIBUTE,5],[c.VertexAttribute.OPACITYFEATUREATTRIBUTE,6]]);class h extends n.ShaderTechnique{initializeProgram(e){return new a.Program(e.rctx,h.shader.get().build(this.configuration),p)}_makePipelineState(e,t){const r=this.configuration,n=e===u.TransparencyPassType.NONE;return d.makePipelineState({blending:r.output===i.ShaderOutput.Color||r.output===i.ShaderOutput.Alpha?n?l.blendingDefault:l.oitBlending(e):null,depthTest:{func:l.oitDepthTest(e)},depthWrite:n?r.writeDepth?d.defaultDepthWriteParams:null:l.oitDepthWrite(e),colorWrite:d.defaultColorWriteParams,stencilWrite:r.hasOccludees?s.stencilWriteMaskOn:null,stencilTest:r.hasOccludees?t?s.stencilToolMaskBaseParams:s.stencilBaseAllZerosParams:null,polygonOffset:{factor:0,units:-10}})}initializePipeline(){return this.configuration.occluder&&(this._occluderPipelineTransparent=d.makePipelineState({blending:l.blendingDefault,depthTest:s.depthCompareAlways,depthWrite:null,colorWrite:d.defaultColorWriteParams,stencilWrite:null,stencilTest:s.stencilToolTransparentOccluderParams}),this._occluderPipelineOpaque=d.makePipelineState({blending:l.blendingDefault,depthTest:s.depthCompareAlways,depthWrite:null,colorWrite:d.defaultColorWriteParams,stencilWrite:s.stencilWriteMaskOff,stencilTest:s.stencilToolMaskOccluderParams}),this._occluderPipelineMaskWrite=d.makePipelineState({blending:null,depthTest:s.depthCompareLess,depthWrite:null,colorWrite:null,stencilWrite:s.stencilWriteMaskOn,stencilTest:s.stencilToolMaskBaseParams})),this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0),this._makePipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e,t,i){return e?this._occludeePipelineState:this.configuration.occluder?i?this._occluderPipelineTransparent:t?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipeline()}}h.shader=new r.ReloadableShaderModule(o.LineMarker,(()=>new Promise(((t,i)=>e(["./LineMarker.glsl"],t,i))))),t.LineMarkerTechnique=h,t.vertexAttributeLocations=p,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
