/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/tslib.es6","../core/shaderLibrary/ShaderOutput","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../core/shaderTechnique/ShaderTechniqueConfiguration","../lib/basicInterfaces","../lib/OrderIndependentTransparency","../lib/Program","../lib/TransparencyPassType","../lib/VertexAttribute","../materials/DefaultTechniqueConfiguration","../../../../chunks/ShadedColorMaterial.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,t,r,a,o,n,i,s,l,p,u,d,c,h,y,S){"use strict";class T extends n.ShaderTechnique{initializeProgram(e){return new p.Program(e.rctx,T.shader.get().build(this.configuration),g)}_setPipelineState(e){const t=this.configuration,r=e===u.TransparencyPassType.NONE,o=e===u.TransparencyPassType.FrontFace;return S.makePipelineState({blending:t.output!==a.ShaderOutput.Color&&t.output!==a.ShaderOutput.Alpha||!t.transparent?null:r?l.blendingDefault:l.oitBlending(e),culling:S.cullingParams(t.cullFace),depthTest:{func:o?y.CompareFunction.LESS:t.shadingEnabled?y.CompareFunction.LEQUAL:y.CompareFunction.LESS},depthWrite:r?t.writeDepth?S.defaultDepthWriteParams:null:l.oitDepthWrite(e),colorWrite:S.defaultColorWriteParams,polygonOffset:r||o?null:l.OITPolygonOffset})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}T.shader=new o.ReloadableShaderModule(h.ShadedColorMaterialShader,(()=>new Promise(((t,r)=>e(["./ShadedColorMaterial.glsl"],t,r)))));class b extends c.DefaultTechniqueConfiguration{constructor(){super(...arguments),this.output=a.ShaderOutput.Color,this.cullFace=s.CullFaceOptions.None,this.transparencyPassType=u.TransparencyPassType.NONE,this.hasSlicePlane=!1,this.transparent=!1,this.writeDepth=!0,this.screenSizeEnabled=!0,this.shadingEnabled=!0,this.multipassEnabled=!1,this.cullAboveGround=!1}}r.__decorate([i.parameter({count:a.ShaderOutput.COUNT})],b.prototype,"output",void 0),r.__decorate([i.parameter({count:s.CullFaceOptions.COUNT})],b.prototype,"cullFace",void 0),r.__decorate([i.parameter({count:u.TransparencyPassType.COUNT})],b.prototype,"transparencyPassType",void 0),r.__decorate([i.parameter()],b.prototype,"hasSlicePlane",void 0),r.__decorate([i.parameter()],b.prototype,"transparent",void 0),r.__decorate([i.parameter()],b.prototype,"writeDepth",void 0),r.__decorate([i.parameter()],b.prototype,"screenSizeEnabled",void 0),r.__decorate([i.parameter()],b.prototype,"shadingEnabled",void 0),r.__decorate([i.parameter()],b.prototype,"multipassEnabled",void 0),r.__decorate([i.parameter()],b.prototype,"cullAboveGround",void 0),r.__decorate([i.parameter({constValue:!1})],b.prototype,"occlusionPass",void 0);const g=new Map([[d.VertexAttribute.POSITION,0],[d.VertexAttribute.NORMAL,1],[d.VertexAttribute.OFFSET,2]]);t.ShadedColorMaterialTechnique=T,t.ShadedColorMaterialTechniqueConfiguration=b,t.vertexAttributeLocations=g,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
