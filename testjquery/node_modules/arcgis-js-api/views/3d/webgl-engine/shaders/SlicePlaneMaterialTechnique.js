/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/vec4f64","../core/shaderModules/interfaces","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/DefaultVertexAttributeLocations","../lib/Program","../../../../chunks/SlicePlaneMaterial.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,r,a,l,i,t,n,o,s,c,d){"use strict";class u extends l.NoParameters{constructor(){super(...arguments),this.backgroundColor=a.fromValues(1,0,0,.5),this.gridColor=a.fromValues(0,1,0,.5),this.gridWidth=4}}class h extends t.ShaderTechnique{initializeProgram(e){return new o.Program(e.rctx,h.shader.get().build(this.configuration),n.Default3D)}initializePipeline(){return d.makePipelineState({blending:d.separateBlendingParams(c.BlendFactor.ONE,c.BlendFactor.ONE,c.BlendFactor.ONE_MINUS_SRC_ALPHA,c.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:{func:c.CompareFunction.LESS},colorWrite:d.defaultColorWriteParams})}}h.shader=new i.ReloadableShaderModule(s.SlicePlaneMaterial,(()=>new Promise(((r,a)=>e(["./SlicePlaneMaterial.glsl"],r,a))))),r.SlicePlaneMaterialPassParameters=u,r.SlicePlaneMaterialTechnique=h,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
