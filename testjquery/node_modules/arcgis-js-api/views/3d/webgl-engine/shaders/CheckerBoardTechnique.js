/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/DefaultVertexAttributeLocations","../lib/OrderIndependentTransparency","../lib/Program","../lib/TransparencyPassType","../../../../chunks/CheckerBoard.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,r,t,n,a,i,l,o,s,c,d){"use strict";class u extends n.ShaderTechnique{initializeProgram(e){return new l.Program(e.rctx,u.shader.get().build(this.configuration),a.Default3D)}_setPipelineState(e){const r=this.configuration,t=e===o.TransparencyPassType.NONE,n=e===o.TransparencyPassType.FrontFace;return d.makePipelineState({blending:r.transparent?t?p:i.oitBlending(e):null,depthTest:{func:i.oitDepthTest(e)},depthWrite:t?r.writeDepth?d.defaultDepthWriteParams:null:i.oitDepthWrite(e),colorWrite:d.defaultColorWriteParams,polygonOffset:t||n?r.polygonOffset?h:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}u.shader=new t.ReloadableShaderModule(s.CheckerBoard,(()=>new Promise(((r,t)=>e(["./CheckerBoard.glsl"],r,t)))));const h={factor:0,units:-25},p=d.separateBlendingParams(c.BlendFactor.SRC_ALPHA,c.BlendFactor.ONE,c.BlendFactor.ONE_MINUS_SRC_ALPHA,c.BlendFactor.ONE_MINUS_SRC_ALPHA);r.CheckerBoardTechnique=u,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
