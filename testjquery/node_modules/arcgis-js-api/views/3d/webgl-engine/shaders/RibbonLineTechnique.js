/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../core/shaderLibrary/ShaderOutput","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OrderIndependentTransparency","../lib/Program","../lib/StencilUtils","../lib/TransparencyPassType","../lib/VertexAttribute","../../../../chunks/RibbonLine.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,t,i,r,n,l,a,s,o,u,c,p,d){"use strict";const h=new Map([[u.VertexAttribute.POSITION,0],[u.VertexAttribute.SUBDIVISIONFACTOR,1],[u.VertexAttribute.UV0,2],[u.VertexAttribute.AUXPOS1,3],[u.VertexAttribute.AUXPOS2,4],[u.VertexAttribute.COLOR,5],[u.VertexAttribute.COLORFEATUREATTRIBUTE,5],[u.VertexAttribute.SIZE,6],[u.VertexAttribute.SIZEFEATUREATTRIBUTE,6],[u.VertexAttribute.OPACITYFEATUREATTRIBUTE,7],[u.VertexAttribute.OBJECTANDLAYERIDCOLOR,8]]);class T extends n.ShaderTechnique{initializeProgram(e){return new a.Program(e.rctx,T.shader.get().build(this.configuration),h)}_makePipelineState(e,t){const r=this.configuration,n=e===o.TransparencyPassType.NONE,a=e===o.TransparencyPassType.FrontFace;return d.makePipelineState({blending:r.output===i.ShaderOutput.Color||r.output===i.ShaderOutput.Alpha?n?l.blendingDefault:l.oitBlending(e):null,depthTest:{func:l.oitDepthTest(e)},depthWrite:n?r.writeDepth?d.defaultDepthWriteParams:null:l.oitDepthWrite(e),colorWrite:d.defaultColorWriteParams,stencilWrite:r.hasOccludees?s.stencilWriteMaskOn:null,stencilTest:r.hasOccludees?t?s.stencilToolMaskBaseParams:s.stencilBaseAllZerosParams:null,polygonOffset:n||a?r.hasPolygonOffset?P:null:l.OITPolygonOffset})}initializePipeline(){const e=this.configuration;if(e.occluder){const t=e.hasPolygonOffset?P:null;this._occluderPipelineTransparent=d.makePipelineState({blending:l.blendingDefault,polygonOffset:t,depthTest:s.depthCompareAlways,depthWrite:null,colorWrite:d.defaultColorWriteParams,stencilWrite:null,stencilTest:s.stencilToolTransparentOccluderParams}),this._occluderPipelineOpaque=d.makePipelineState({blending:l.blendingDefault,polygonOffset:t,depthTest:s.depthCompareAlways,depthWrite:null,colorWrite:d.defaultColorWriteParams,stencilWrite:s.stencilWriteMaskOff,stencilTest:s.stencilToolMaskOccluderParams}),this._occluderPipelineMaskWrite=d.makePipelineState({blending:null,polygonOffset:t,depthTest:s.depthCompareLess,depthWrite:null,colorWrite:null,stencilWrite:s.stencilWriteMaskOn,stencilTest:s.stencilToolMaskBaseParams})}return this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0),this._makePipelineState(this.configuration.transparencyPassType,!1)}get primitiveType(){return this.configuration.wireframe?p.PrimitiveType.LINES:p.PrimitiveType.TRIANGLE_STRIP}getPipeline(e,t,i){return e?this._occludeePipelineState:this.configuration.occluder?i?this._occluderPipelineTransparent:t?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipeline()}}T.shader=new r.ReloadableShaderModule(c.RibbonLine,(()=>new Promise(((t,i)=>e(["./RibbonLine.glsl"],t,i)))));const P={factor:0,units:-4};t.RibbonLineTechnique=T,t.vertexAttributeLocations=h,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
