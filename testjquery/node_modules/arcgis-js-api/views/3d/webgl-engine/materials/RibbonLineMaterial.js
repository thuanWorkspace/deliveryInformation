/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../../../core/Logger","../../../../core/mathUtils","../../../../core/screenUtils","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../../../../geometry/support/frustum","../../../../geometry/support/lineSegment","../../../../geometry/support/plane","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/Util","../lib/VertexAttribute","./VisualVariablePassParameters","../shaders/LineMarkerTechniqueConfiguration","../../../../chunks/RibbonLine.glsl","../shaders/RibbonLineTechnique","../shaders/RibbonLineTechniqueConfiguration"],(function(e,t,r,i,a,s,n,o,u,c,l,h,d,p,f,T,A,m,_,E,b,R,S,g){"use strict";var O;!function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"}(O||(O={}));class I extends T.Material{constructor(e){super(e,new v),this._configuration=new g.RibbonLineTechniqueConfiguration,this._vertexAttributeLocations=S.vertexAttributeLocations}getConfiguration(e,t){this._configuration.output=e,this._configuration.draped=t.slot===A.RenderSlot.DRAPED_MATERIAL;const r=null!=this.parameters.stipplePattern&&e!==p.ShaderOutput.Highlight;return this._configuration.stippleEnabled=r,this._configuration.stippleOffColorEnabled=r&&null!=this.parameters.stippleOffColor,this._configuration.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.roundJoins="round"===this.parameters.join,this._configuration.capType=this.parameters.cap,this._configuration.applyMarkerOffset=null!=this.parameters.markerParameters&&N(this.parameters.markerParameters),this._configuration.hasPolygonOffset=this.parameters.hasPolygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.vvOpacity=!!this.parameters.vvOpacity,this._configuration.innerColorEnabled=this.parameters.innerWidth>0&&null!=this.parameters.innerColor,this._configuration.falloffEnabled=this.parameters.falloff>0,this._configuration.occluder=this.parameters.renderOccluded===T.RenderOccludedFlag.OccludeAndTransparentStencil,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.wireframe=this.parameters.wireframe,this._configuration}intersectDraped(e,t,r,a,s,n){if(!r.options.selectionMode)return;const o=e.attributes.get(_.VertexAttribute.POSITION).data,u=e.attributes.get(_.VertexAttribute.SIZE);let c=this.parameters.width;if(this.parameters.vvSize){const t=e.attributes.get(_.VertexAttribute.SIZEFEATUREATTRIBUTE).data[0];c*=i.clamp(this.parameters.vvSize.offset[0]+t*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else u&&(c*=u.data[0]);const l=a[0],h=a[1],d=(c/2+4)*e.screenToWorldRatio;let p=Number.MAX_VALUE,f=0;for(let T=0;T<o.length-5;T+=3){const e=o[T],t=o[T+1],r=l-e,a=h-t,s=o[T+3]-e,n=o[T+4]-t,u=s*r+n*a,c=s*s+n*n,d=i.clamp(u/c,0,1),A=s*d-r,m=n*d-a,_=A*A+m*m;_<p&&(p=_,f=T/3)}p<d*d&&s(n.dist,n.normal,f,!1)}intersect(e,t,a,o,u,d){if(!a.options.selectionMode||!e.visible)return;if(!m.isTranslationMatrix(t))return void r.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial").error("intersection assumes a translation-only matrix");const p=e.attributes,f=p.get(_.VertexAttribute.POSITION).data;let T=this.parameters.width;if(this.parameters.vvSize){const e=p.get(_.VertexAttribute.SIZEFEATUREATTRIBUTE).data[0];T*=i.clamp(this.parameters.vvSize.offset[0]+e*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else p.has(_.VertexAttribute.SIZE)&&(T*=p.get(_.VertexAttribute.SIZE).data[0]);const A=a.camera,E=F;s.copy(E,a.point);const b=T*A.pixelRatio/2+4*A.pixelRatio;n.set(Z[0],E[0]-b,E[1]+b,0),n.set(Z[1],E[0]+b,E[1]+b,0),n.set(Z[2],E[0]+b,E[1]-b,0),n.set(Z[3],E[0]-b,E[1]-b,0);for(let r=0;r<4;r++)if(!A.unprojectFromRenderScreen(Z[r],W[r]))return;h.fromPoints(A.eye,W[0],W[1],q),h.fromPoints(A.eye,W[1],W[2],Y),h.fromPoints(A.eye,W[2],W[3],X),h.fromPoints(A.eye,W[3],W[0],Q);let R=Number.MAX_VALUE,S=0;const g=x(this.parameters,p)?f.length-2:f.length-5;for(let r=0;r<g;r+=3){C[0]=f[r]+t[12],C[1]=f[r+1]+t[13],C[2]=f[r+2]+t[14];const e=(r+3)%f.length;if(D[0]=f[e]+t[12],D[1]=f[e+1]+t[13],D[2]=f[e+2]+t[14],h.signedDistance(q,C)<0&&h.signedDistance(q,D)<0||h.signedDistance(Y,C)<0&&h.signedDistance(Y,D)<0||h.signedDistance(X,C)<0&&h.signedDistance(X,D)<0||h.signedDistance(Q,C)<0&&h.signedDistance(Q,D)<0)continue;if(A.projectToRenderScreen(C,M),A.projectToRenderScreen(D,w),M[2]<0&&w[2]>0){n.subtract(V,C,D);const e=A.frustum,t=-h.signedDistance(e[c.PlaneIndex.NEAR],C)/n.dot(V,h.normal(e[c.PlaneIndex.NEAR]));n.scale(V,V,t),n.add(C,C,V),A.projectToRenderScreen(C,M)}else if(M[2]>0&&w[2]<0){n.subtract(V,D,C);const e=A.frustum,t=-h.signedDistance(e[c.PlaneIndex.NEAR],D)/n.dot(V,h.normal(e[c.PlaneIndex.NEAR]));n.scale(V,V,t),n.add(D,D,V),A.projectToRenderScreen(D,w)}else if(M[2]<0&&w[2]<0)continue;M[2]=0,w[2]=0;const i=l.distance2(l.fromPoints(M,w,G),E);i<R&&(R=i,n.copy(B,C),n.copy(J,D),S=r/3)}const O=a.rayBegin,I=a.rayEnd;if(R<b*b){let e=Number.MAX_VALUE;if(l.closestLineSegmentPoint(l.fromPoints(B,J,G),l.fromPoints(O,I,z),U)){n.subtract(U,U,O);const t=n.length(U);n.scale(U,U,1/t),e=t/n.distance(O,I)}d(e,U,S,!1)}}get _layout(){const e=d.newLayout().vec3f(_.VertexAttribute.POSITION).f32(_.VertexAttribute.SUBDIVISIONFACTOR).vec2f(_.VertexAttribute.UV0).vec3f(_.VertexAttribute.AUXPOS1).vec3f(_.VertexAttribute.AUXPOS2);return this.parameters.vvSize?e.f32(_.VertexAttribute.SIZEFEATUREATTRIBUTE):e.f32(_.VertexAttribute.SIZE),this.parameters.vvColor?e.f32(_.VertexAttribute.COLORFEATUREATTRIBUTE):e.vec4f(_.VertexAttribute.COLOR),this.parameters.vvOpacity&&e.f32(_.VertexAttribute.OPACITYFEATUREATTRIBUTE),t("enable-feature:objectAndLayerId-rendering")&&e.vec4u8(_.VertexAttribute.OBJECTANDLAYERIDCOLOR),e}createBufferWriter(){return new L(this._layout,this.parameters)}produces(e,t){if(t===p.ShaderOutput.Color||t===p.ShaderOutput.Alpha||t===p.ShaderOutput.Highlight||t===p.ShaderOutput.Depth||t===p.ShaderOutput.ObjectAndLayerIdColor){if(e===A.RenderSlot.DRAPED_MATERIAL)return!0;if(this.parameters.renderOccluded===T.RenderOccludedFlag.OccludeAndTransparentStencil)return e===A.RenderSlot.OPAQUE_MATERIAL||e===A.RenderSlot.OCCLUDER_MATERIAL||e===A.RenderSlot.TRANSPARENT_OCCLUDER_MATERIAL;if(t===p.ShaderOutput.Color||t===p.ShaderOutput.Alpha){return e===(this.parameters.writeDepth?A.RenderSlot.TRANSPARENT_MATERIAL:A.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL)}return e===A.RenderSlot.OPAQUE_MATERIAL}return!1}createGLMaterial(e){return new P(e)}validateParameters(e){"miter"!==e.join&&(e.miterLimit=0),null!=e.markerParameters&&(e.markerScale=e.markerParameters.width/e.width)}}class P extends f{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextureRepository.release(this._stipplePattern),this._stipplePattern=null}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){this._output!==p.ShaderOutput.Color&&this._output!==p.ShaderOutput.Alpha||this._updateOccludeeState(e);const t=this._material.parameters.stipplePattern;return this._stipplePattern!==t&&(this._material.setParameters({stippleTexture:this._stippleTextureRepository.swap(t,this._stipplePattern)}),this._stipplePattern=t),this.ensureTechnique(S.RibbonLineTechnique,e)}}class v extends E.VisualVariablePassParameters{constructor(){super(...arguments),this.width=0,this.color=u.ONES,this.join="miter",this.cap=g.CapType.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleTexture=null,this.stipplePreferContinuous=!0,this.markerParameters=null,this.markerScale=1,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.hasOccludees=!1,this.wireframe=!1}}class L{constructor(e,t){this.vertexBufferLayout=e,this._parameters=t,this.numJoinSubdivisions=0;const r=t.stipplePattern?1:0;switch(this._parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=R.ribbonlineNumRoundJoinSubdivisions+r}}_isClosed(e){return x(this._parameters,e.attributes)}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const t=2,r=e.attributes.get(_.VertexAttribute.POSITION).indices.length/2+1,i=this._isClosed(e);let a=i?2:2*t;return a+=((i?r:r-1)-(i?0:1))*(2*this.numJoinSubdivisions+4),a+=2,this._parameters.wireframe&&(a=2+4*(a-2)),a}write(e,r,i,a,s){const o=H,u=j,c=k,l=i.attributes.get(_.VertexAttribute.POSITION),h=l.indices,d=l.data.length/3,p=i.attributes.get(_.VertexAttribute.DISTANCETOSTART)?.data;h&&h.length!==2*(d-1)&&console.warn("RibbonLineMaterial does not support indices");let f=1,T=0;const A=this.vertexBufferLayout.fields.has(_.VertexAttribute.SIZEFEATUREATTRIBUTE);A?T=i.attributes.get(_.VertexAttribute.SIZEFEATUREATTRIBUTE).data[0]:i.attributes.has(_.VertexAttribute.SIZE)&&(f=i.attributes.get(_.VertexAttribute.SIZE).data[0]);let m=[1,1,1,1],E=0;const b=this.vertexBufferLayout.fields.has(_.VertexAttribute.COLORFEATUREATTRIBUTE);b?E=i.attributes.get(_.VertexAttribute.COLORFEATUREATTRIBUTE).data[0]:i.attributes.has(_.VertexAttribute.COLOR)&&(m=i.attributes.get(_.VertexAttribute.COLOR).data);const R=t("enable-feature:objectAndLayerId-rendering")?i.objectAndLayerIdColor:null;let S=0;const g=this.vertexBufferLayout.fields.has(_.VertexAttribute.OPACITYFEATUREATTRIBUTE);g&&(S=i.attributes.get(_.VertexAttribute.OPACITYFEATUREATTRIBUTE).data[0]);const I=new Float32Array(a.buffer),P=t("enable-feature:objectAndLayerId-rendering")?new Uint8Array(a.buffer):null,v=this.vertexBufferLayout.stride/4;let L=s*v;const x=L;let N=0;const C=p?(e,t,r)=>N=p[r]:(e,t,r)=>N+=n.distance(e,t),D=t("enable-feature:objectAndLayerId-rendering"),V=(e,t,r,i,a,s,n)=>{if(I[L++]=t[0],I[L++]=t[1],I[L++]=t[2],I[L++]=i,I[L++]=n,I[L++]=a,I[L++]=e[0],I[L++]=e[1],I[L++]=e[2],I[L++]=r[0],I[L++]=r[1],I[L++]=r[2],I[L++]=A?T:f,b)I[L++]=E;else{const e=Math.min(4*s,m.length-4);I[L++]=m[e],I[L++]=m[e+1],I[L++]=m[e+2],I[L++]=m[e+3]}g&&(I[L++]=S),D&&(null!=R&&(P[4*L]=R[0],P[4*L+1]=R[1],P[4*L+2]=R[2],P[4*L+3]=R[3]),L++)};L+=v,n.set(u,l.data[0],l.data[1],l.data[2]),e&&n.transformMat4(u,u,e);const U=this._isClosed(i);if(U){const t=l.data.length-3;n.set(o,l.data[t],l.data[t+1],l.data[t+2]),e&&n.transformMat4(o,o,e)}else n.set(c,l.data[3],l.data[4],l.data[5]),e&&n.transformMat4(c,c,e),V(u,u,c,1,O.LEFT_CAP_START,0,0),V(u,u,c,1,O.RIGHT_CAP_START,0,0),n.copy(o,u),n.copy(u,c);const F=U?0:1,M=U?d:d-1;for(let t=F;t<M;t++){const r=(t+1)%d*3;n.set(c,l.data[r],l.data[r+1],l.data[r+2]),e&&n.transformMat4(c,c,e),C(o,u,t),V(o,u,c,0,O.LEFT_JOIN_END,t,N),V(o,u,c,0,O.RIGHT_JOIN_END,t,N);const i=this.numJoinSubdivisions;for(let e=0;e<i;++e){const r=(e+1)/(i+1);V(o,u,c,r,O.LEFT_JOIN_END,t,N),V(o,u,c,r,O.RIGHT_JOIN_END,t,N)}V(o,u,c,1,O.LEFT_JOIN_START,t,N),V(o,u,c,1,O.RIGHT_JOIN_START,t,N),n.copy(o,u),n.copy(u,c)}U?(n.set(c,l.data[3],l.data[4],l.data[5]),e&&n.transformMat4(c,c,e),N=C(o,u,M),V(o,u,c,0,O.LEFT_JOIN_END,F,N),V(o,u,c,0,O.RIGHT_JOIN_END,F,N)):(N=C(o,u,M),V(o,u,u,0,O.LEFT_CAP_END,M,N),V(o,u,u,0,O.RIGHT_CAP_END,M,N)),y(I,x+v,I,x,v);L=y(I,L-v,I,L,v),this._parameters.wireframe&&this._addWireframeVertices(a,x,L,v)}_addWireframeVertices(e,t,r,i){const a=new Float32Array(e.buffer,r*Float32Array.BYTES_PER_ELEMENT),s=new Float32Array(e.buffer,t*Float32Array.BYTES_PER_ELEMENT,r-t);let n=0;const o=e=>n=y(s,e,a,n,i);for(let u=0;u<s.length-1;u+=2*i)o(u),o(u+2*i),o(u+1*i),o(u+2*i),o(u+1*i),o(u+3*i)}}function y(e,t,r,i,a){for(let s=0;s<a;s++)r[i++]=e[t++];return i}function x(e,t){if(!e.isClosed)return!1;return t.get(_.VertexAttribute.POSITION).indices.length>2}function N(e){return e.anchor===b.LineMarkerAnchor.Tip&&e.hideOnShortSegments&&"begin-end"===e.placement&&e.worldSpace}const C=o.create(),D=o.create(),V=o.create(),U=o.create(),F=o.create(),M=a.createRenderScreenPointArray3(),w=a.createRenderScreenPointArray3(),B=o.create(),J=o.create(),G=l.create(),z=l.create(),H=o.create(),j=o.create(),k=o.create(),Z=[a.createRenderScreenPointArray3(),a.createRenderScreenPointArray3(),a.createRenderScreenPointArray3(),a.createRenderScreenPointArray3()],W=[o.create(),o.create(),o.create(),o.create()],q=h.create(),Y=h.create(),X=h.create(),Q=h.create();e.Parameters=v,e.RibbonLineMaterial=I,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
