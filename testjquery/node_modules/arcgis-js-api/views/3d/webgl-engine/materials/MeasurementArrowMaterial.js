/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/VertexAttribute","../shaders/MeasurementArrowTechnique"],(function(e,t,r,s,n,a,o,i,u,c,l){"use strict";class f extends i.Material{constructor(e){super(e,new p),this._configuration=new l.MeasurementArrowTechniqueConfiguration}getConfiguration(e,t){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration}intersect(){}produces(e,t){if(t===a.ShaderOutput.Color||t===a.ShaderOutput.Alpha){return e===(this._transparent?u.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:u.RenderSlot.OPAQUE_MATERIAL)}return!1}createGLMaterial(e){return new h(e)}createBufferWriter(){return new O}get _transparent(){const{parameters:e}=this;return e.outlineColor[3]<1||e.stripeEvenColor[3]<1||e.stripeOddColor[3]<1}}class h extends o{beginSlot(e){return this.ensureTechnique(l.MeasurementArrowTechnique,e)}}class p extends i.MaterialParameters{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=s.fromValues(1,.5,0,1),this.stripeEvenColor=s.fromValues(1,1,1,1),this.stripeOddColor=s.fromValues(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const d=n.newLayout().vec3f(c.VertexAttribute.POSITION).vec3f(c.VertexAttribute.NORMAL).vec2f(c.VertexAttribute.UV0).f32(c.VertexAttribute.AUXPOS1),A=r.create(),b=r.create(),g=r.create(),m=r.create(),M=r.create();class O{constructor(){this.vertexBufferLayout=d}elementCount(e){return 2*(e.attributes.get(c.VertexAttribute.POSITION).indices.length/2+1)}write(e,r,s,n,a){const{data:o,indices:i}=s.attributes.get(c.VertexAttribute.POSITION),u=s.attributes.get(c.VertexAttribute.NORMAL).data,l=o.length/3;i&&i.length!==2*(l-1)&&console.warn("MeasurementArrowMaterial does not support indices");const f=A,h=b,p=g,d=m,O=M,S=n.position,T=n.normal,V=n.uv0;let x=0;for(let c=0;c<l;++c){const s=3*c;if(t.set(f,o[s],o[s+1],o[s+2]),c<l-1){const e=3*(c+1);t.set(h,o[e],o[e+1],o[e+2]),t.set(O,u[e],u[e+1],u[e+2]),t.normalize(O,O),t.subtract(p,h,f),t.normalize(p,p),t.cross(d,O,p),t.normalize(d,d)}const n=t.distance(f,h);e&&r&&(t.transformMat4(f,f,e),t.transformMat4(h,h,e),t.transformMat4(d,d,r));const i=a+2*c,A=i+1;S.setVec(i,f),S.setVec(A,f),T.setVec(i,d),T.setVec(A,d),V.set(i,0,x),V.set(i,1,-1),V.set(A,0,x),V.set(A,1,1),c<l-1&&(x+=n)}const w=n.auxpos1;for(let t=0;t<2*l;++t)w.set(a+t,x)}}e.MeasurementArrowMaterial=f,e.Parameters=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
