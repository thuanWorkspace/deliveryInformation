/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/mathUtils","../../../../geometry/support/aaBoundingBox","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/shading/Normals.glsl","../lib/GLMaterial","../lib/Material","../lib/PathGeometry","../lib/RenderSlot","../lib/VertexAttribute","./DefaultBufferWriter","./PathTechnique","./internal/MaterialUtil"],(function(e,t,a,r,i,s,u,o,n,h,d,c,l,p){"use strict";class S extends o.Material{constructor(e){super(e,new f),this.supportsEdges=!0,this._vertexAttributeLocations=l.vertexAttributeLocations,this._configuration=new l.PathTechniqueConfiguration,this._vertexBufferLayout=S.getVertexBufferLayout()}getConfiguration(e,t){return this._configuration.output=e,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.vvOpacity=!!this.parameters.vvOpacity,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.hasOccludees=this.parameters.hasOccludees,e!==i.ShaderOutput.Color&&e!==i.ShaderOutput.Alpha||(this._configuration.doubleSidedMode=this.parameters.doubleSided&&"normal"===this.parameters.doubleSidedType?s.NormalsDoubleSidedMode.View:this.parameters.doubleSided&&"winding-order"===this.parameters.doubleSidedType?s.NormalsDoubleSidedMode.WindingOrder:s.NormalsDoubleSidedMode.None,this._configuration.receiveShadows=this.parameters.receiveShadows,this._configuration.receiveAmbientOcclusion=null!=t.ssao),this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}isVisibleForOutput(e){return e!==i.ShaderOutput.Shadow&&e!==i.ShaderOutput.ShadowExcludeHighlight&&e!==i.ShaderOutput.ShadowHighlight||this.parameters.castShadows}isVisible(){return super.isVisible()&&this.parameters.opacity>0}intersect(e,r,i,s,u,o){const h=e;if(!n.isPathGeometry(h))return;const d=h.path,c=[this.parameters.size[0],this.parameters.size[1]];if(this.parameters.vvSize){const{offset:e,factor:a,minSize:r,maxSize:i}=this.parameters.vvSize,s=d.sizeAttributeValue;c[0]*=t.clamp(e[0]+s*a[0],r[0],i[0]),c[1]*=t.clamp(e[2]+s*a[2],r[2],i[2])}const l=Math.max(c[0],c[1]),S=e.boundingInfo;if(null==S)return void this._intersectTriangles(d,c,s,u,o);const b=a.fromValues(S.bbMin[0]-l,S.bbMin[1]-l,S.bbMin[2]-l,S.bbMax[0]+l,S.bbMax[1]+l,S.bbMax[2]+l),f=[u[0]-s[0],u[1]-s[1],u[2]-s[2]],m=Math.sqrt(f[0]*f[0]+f[1]*f[1]+f[2]*f[2]),g=[m/f[0],m/f[1],m/f[2]];p.intersectAabbInvDir(b,s,g,i.tolerance)&&this._intersectTriangles(d,c,s,u,o)}_intersectTriangles(e,t,a,r,i){e.baked.size&&e.baked.size[0]===t[0]&&e.baked.size[1]===t[1]||e.baked.bake(t),e.baked.intersect(a,r,i)}createBufferWriter(){return new c.DefaultBufferWriter(this._vertexBufferLayout)}produces(e,t){switch(t){case i.ShaderOutput.Shadow:case i.ShaderOutput.ShadowHighlight:case i.ShaderOutput.ShadowExcludeHighlight:if(!this.parameters.castShadows)return!1;case i.ShaderOutput.Color:case i.ShaderOutput.Alpha:case i.ShaderOutput.Depth:case i.ShaderOutput.Normal:case i.ShaderOutput.Highlight:case i.ShaderOutput.ObjectAndLayerIdColor:return e===(this.parameters.transparent?h.RenderSlot.TRANSPARENT_MATERIAL:h.RenderSlot.OPAQUE_MATERIAL)||e===h.RenderSlot.DRAPED_MATERIAL;default:return!1}}createGLMaterial(e){return new b(e)}static getVertexBufferLayout(){return r.newLayout().vec3f(d.VertexAttribute.POSITION).vec4f(d.VertexAttribute.PROFILERIGHT).vec4f(d.VertexAttribute.PROFILEUP).vec4f(d.VertexAttribute.PROFILEVERTEXANDNORMAL).vec4f(d.VertexAttribute.FEATUREVALUE)}}class b extends u{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}_updateShadowState(e){null!=this.technique&&e.shadowMap.enabled===this.technique.configuration.receiveShadows||this._material.setParameters({receiveShadows:e.shadowMap.enabled})}beginSlot(e){return this._output!==i.ShaderOutput.Color&&this._output!==i.ShaderOutput.Alpha||(this._updateShadowState(e),this._updateOccludeeState(e)),this.ensureTechnique(l.PathTechnique,e)}}class f extends l.PathPassParameters{constructor(){super(...arguments),this.doubleSided=!1,this.doubleSidedType="normal",this.receiveShadows=!1,this.castShadows=!0,this.hasSlicePlane=!1,this.transparent=!1,this.hasOccludees=!1}}e.PathMaterial=S,e.PathMaterialParameters=f,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
