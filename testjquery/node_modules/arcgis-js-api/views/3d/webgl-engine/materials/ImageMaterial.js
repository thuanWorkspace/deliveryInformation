/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../geometry/support/buffer/BufferView","../core/shaderLibrary/ShaderOutput","../lib/basicInterfaces","../lib/GLTextureMaterial","../lib/Material","../lib/OrderIndependentTransparency","../lib/RenderSlot","../lib/Util","../lib/VertexAttribute","./DefaultBufferWriter","./DefaultLayouts","./TriangleMaterial","./internal/bufferWriterUtils","../shaders/ImageMaterialTechnique"],(function(e,t,r,a,i,s,n,u,l,o,c,h,p,f,d){"use strict";class m extends p.TriangleMaterial{constructor(e){super(e,new T),this.supportsEdges=!0,this._vertexAttributeLocations=d.vertexAttributeLocations,this._configuration=new d.ImageMaterialTechniqueConfiguration}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<n.OITPolygonOffsetLimit,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}produces(e,t){if(t===r.ShaderOutput.Color||t===r.ShaderOutput.Alpha||t===r.ShaderOutput.Highlight){if(e===u.RenderSlot.DRAPED_MATERIAL)return!0;if(t===r.ShaderOutput.Highlight)return e===u.RenderSlot.OPAQUE_MATERIAL;return e===(this.parameters.transparent?this.parameters.writeDepth?u.RenderSlot.TRANSPARENT_MATERIAL:u.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:u.RenderSlot.OPAQUE_MATERIAL)}return!1}createGLMaterial(e){return new g(e)}createBufferWriter(){const e=h.PositionUVLayout.clone();return this.parameters.perspectiveInterpolation&&e.f32(o.VertexAttribute.PERSPECTIVEDIVIDE),new _(e)}}class g extends i.GLTextureMaterial{constructor(e){super({...e,...e.material.parameters})}_updateParameters(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(d.ImageMaterialTechnique,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&(this._material.setParameters({hasOccludees:e.hasOccludees}),this._updateParameters(e))}beginSlot(e){return this._output!==r.ShaderOutput.Color&&this._output!==r.ShaderOutput.Alpha||this._updateOccludeeState(e),this._updateParameters(e)}}class _ extends c.DefaultBufferWriter{write(e,r,a,i,s){for(const n of this.vertexBufferLayout.fields.keys()){const u=a.attributes.get(n);if(u)if(n===o.VertexAttribute.PERSPECTIVEDIVIDE){l.assert(1===u.size);const e=i.getField(n,t.BufferViewFloat);e&&f.writeBufferFloat(u,e,s)}else f.writeDefaultAttribute(n,u,e,r,i,s)}}}class T extends s.MaterialParameters{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=a.CullFaceOptions.None,this.hasOccludees=!1,this.opacity=1,this.textureId=null,this.initTextureTransparent=!0,this.perspectiveInterpolation=!1}}e.ImageMaterial=m,e.Parameters=T,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
