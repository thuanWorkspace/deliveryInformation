/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/vec2","../../../../chunks/vec2f64","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/VertexAttribute","./internal/bufferWriterUtils","../shaders/HeatmapDensityTechnique"],(function(t,e,r,s,i,a,n,u,o,l,c){"use strict";const b=2;class f extends c.HeatmapDensityPassParameters{constructor(){super(...arguments),this.isAttributeDriven=!1,this.usesHalfFloats=!1}}class h extends n.Material{constructor(t){super(t,new f),this._configuration=new c.HeatmapDensityTechniqueConfiguration}produces(t,e){return t===u.RenderSlot.DRAPED_MATERIAL&&e===i.ShaderOutput.Color}getConfiguration(){return this._configuration.isAttributeDriven=this.parameters.isAttributeDriven,this._configuration.usesHalfFloat=this.parameters.usesHalfFloats,this._configuration}createGLMaterial(t){return new d(t)}intersect(){}intersectDraped(t,r,s,i,a,n){const u=t.attributes.get(o.VertexAttribute.POSITION),{parameters:l}=this,{searchRadius:c}=l,{screenToWorldRatio:f}=t,h=c*f+b*f,d=h*h,A=u.data.length/u.size;for(let o=0;o<A;o++){const t=o*u.size,r=e.set(V,u.data[t],u.data[t+1]);e.squaredDistance(r,i)<d&&a(n.dist,n.normal,-1,!1)}}createBufferWriter(){return new A(this.parameters.isAttributeDriven?p:T)}}class d extends a{beginSlot(t){return this.ensureTechnique(c.HeatmapDensityTechnique,t)}}class A{constructor(t){this.vertexBufferLayout=t}elementCount(t){return t.attributes.get(o.VertexAttribute.POSITION).indices.length*g}write(t,e,r,s,i){l.writePosition(r.attributes.get(o.VertexAttribute.POSITION),t,s.position,i,g);const a=r.attributes.get(o.VertexAttribute.POSITION).indices.length,n=s.uv0;let u=i;for(let o=0;o<a;++o)n.setValues(u++,-1,-1),n.setValues(u++,1,-1),n.setValues(u++,1,1),n.setValues(u++,1,1),n.setValues(u++,-1,1),n.setValues(u++,-1,-1);const c=o.VertexAttribute.FEATUREATTRIBUTE in s?s.featureAttribute:null;c&&l.writeBufferFloat(r.attributes.get(o.VertexAttribute.FEATUREATTRIBUTE),c,i,g)}}const T=s.newLayout().vec3f(o.VertexAttribute.POSITION).vec2f(o.VertexAttribute.UV0),p=T.clone().f32(o.VertexAttribute.FEATUREATTRIBUTE),g=6,V=r.create();t.HeatmapDensityMaterial=h,t.HeatmapDensityMaterialParameters=f,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
