/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/has","../../../../core/time","../../../../chunks/vec2f64","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../core/shaderLibrary/ShaderOutput","../lib/AnimationTimer","../lib/Material","../lib/OrderIndependentTransparency","../lib/RenderSlot","./DefaultBufferWriter","./DefaultLayouts","./TriangleMaterial","./WaterGLMaterial","./WaterTechnique"],(function(e,t,a,r,i,n,s,o,h,l,c,u,d,p,f,m){"use strict";class S extends p.TriangleMaterial{constructor(e){super(e,new A),this._configuration=new m.WaterTechniqueConfiguration,this._animation=new o.AnimationTimer}getConfiguration(e,t){return this._configuration.output=e,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.receiveShadows=this.parameters.receiveShadows,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.hasScreenSpaceReflections=this.parameters.hasScreenSpaceReflections,this._configuration.hasCloudsReflections=this.parameters.hasCloudsReflections,this._configuration.isDraped=this.parameters.isDraped,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<l.OITPolygonOffsetLimit,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}update(e){const t=Math.min(e.camera.relativeElevation,e.camera.distance);this._animation.enabled=Math.sqrt(this.parameters.waveTextureRepeat/this.parameters.waveStrength)*t<R;const r=this._animation.advance(e);return this.setParameters({timeElapsed:a.secondsFromMilliseconds(this._animation.time)*this.parameters.animationSpeed},!1),this._animation.enabled&&r}produces(e,t){switch(t){case s.ShaderOutput.Normal:return e===c.RenderSlot.DRAPED_WATER;case s.ShaderOutput.Color:if(this.parameters.isDraped)return e===c.RenderSlot.DRAPED_MATERIAL;break;case s.ShaderOutput.Alpha:break;case s.ShaderOutput.Highlight:case s.ShaderOutput.ObjectAndLayerIdColor:return e===c.RenderSlot.OPAQUE_MATERIAL||e===c.RenderSlot.DRAPED_MATERIAL;default:return!1}let a=c.RenderSlot.OPAQUE_MATERIAL;return this.parameters.transparent&&(a=this.parameters.writeDepth?c.RenderSlot.TRANSPARENT_MATERIAL:c.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),e===a}createGLMaterial(e){return new f.WaterGLMaterial(e)}createBufferWriter(){return new u.DefaultBufferWriter(t("enable-feature:objectAndLayerId-rendering")?d.PositionUVLayoutObjectAndLayerId:d.PositionUVLayout)}get test(){return{animationEnabled:this._animation.enabled}}}class A extends h.MaterialParameters{constructor(){super(...arguments),this.waveStrength=.06,this.waveTextureRepeat=32,this.waveDirection=r.fromValues(1,0),this.waveVelocity=.05,this.flowStrength=.015,this.flowOffset=-.5,this.animationSpeed=.35,this.timeElapsed=0,this.color=n.fromValues(0,0,0,0),this.transparent=!0,this.writeDepth=!0,this.hasSlicePlane=!1,this.isDraped=!1,this.receiveShadows=!0,this.hasScreenSpaceReflections=!1,this.hasCloudsReflections=!1,this.origin=i.create(),this.modelTransformation=null}}const R=35e3;e.WaterMaterial=S,e.WaterMaterialParameters=A,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
