/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Evented","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../core/accessorSupport/watch","../../../chunks/vec3f64","../../../geometry/ellipsoidUtils","../../ViewAnimation","../../ViewingMode","./Constraints","./controllers/AnimationController","./controllers/CameraController","../support/PropertiesPool","../webgl-engine/lib/Camera","../../support/RenderState"],(function(e,t,r,a,o,i,n,s,l,p,c,d,h,m,u,_,y,g,C,w){"use strict";let v=class extends t{constructor(){super(...arguments),this._propertiesPool=new g.PropertiesPool({camera:C.Camera},this),this._lastSeenCameraProjectionValues=new C.Camera,this.mode=w.RenderState.ANIMATING,this._cssCamera=new C.Camera,this._camera=new C.Camera,this.rasterPixelRatio=1,this.contentPixelRatio=1,this.events=new r,this.viewingMode=m.ViewingMode.Global,this._cameraChanged=!1,this._updateQueue=new Array,this._processingUpdates=!1}init(e,t){this._set("viewingMode",e),this._set("spatialReference",t),this._set("constraints",new u.Constraints({mode:this.viewingMode}))}exit(){this.cameraController=null,this._propertiesPool.destroy(),this._propertiesPool=new g.PropertiesPool({camera:C.Camera},this)}destroy(){this.cameraController=null,this._propertiesPool?.destroy(),this._propertiesPool=null}createInitialCamera(){if(this.viewingMode===m.ViewingMode.Global){const e=d.getReferenceEllipsoid(this.spatialReference).radius;this.camera=new C.Camera({eye:c.fromValues(4*e,0,0),center:c.fromValues(e,0,0),up:c.fromValues(0,0,1)})}else this.camera=new C.Camera({eye:c.fromValues(0,0,100),center:c.fromValues(0,0,0),up:c.fromValues(0,1,0)})}get animation(){return this.cameraController instanceof _.AnimationController&&null!=this.cameraController.viewAnimation?this.cameraController.viewAnimation:null}get camera(){return this._camera}get cssCamera(){const e=this._cssCamera.copyFrom(this.camera),{height:t,width:r,pixelRatio:a}=this.camera;return e.pixelRatio=1,e.height=Math.round(t/a),e.width=Math.round(r/a),e}set camera(e){e!==f&&f.copyFrom(e),f.computeUp(this.viewingMode),this.events.emit("before-camera-change",f);const t=this._camera;if(this._cameraProjectionChanged(this._lastSeenCameraProjectionValues,f)&&(this._lastSeenCameraProjectionValues.copyFrom(f),this.events.emit("camera-projection-changed",this._lastSeenCameraProjectionValues)),!t.equals(f)&&(this._camera=this._propertiesPool.get("camera").copyFrom(f),this._cameraChanged=!t.almostEquals(f),this._cameraChanged)){const e=p.afterDispatch((()=>{this._cameraChanged=!1,e.remove()}))}}get pixelRatio(){return this.camera.pixelRatio}get alignPixelEnabled(){return this.pixelRatio===this.rasterPixelRatio&&this.mode===w.RenderState.IDLE}get updating(){return this.mode!==w.RenderState.IDLE}get contentCamera(){return this._contentCamera??this.camera}set contentCamera(e){this._contentCamera=null!=e?e.clone():null}get fixedContentCamera(){return null!=this._contentCamera}get isGlobal(){return this.viewingMode===m.ViewingMode.Global}get isLocal(){return this.viewingMode===m.ViewingMode.Local}get navigating(){return!(!this.cameraController||!this.cameraController.isInteractive)}get stationary(){return!this._cameraChanged&&!this.navigating}get cameraController(){return this._get("cameraController")}set cameraController(e){this.stopActiveCameraController()?(this.cameraController?.destroy(),e&&(this.removeHandles(S),this.addHandles(a.when((()=>e.state===y.State.Finished||e.state===y.State.Stopped),(()=>{this._set("cameraController",null),this.updateCamera((t=>e.onControllerEnd(t)))}),{sync:!0,once:!0}),S),e.onControllerStart(this.camera)),this._set("cameraController",e)):e&&(e.state=y.State.Rejected)}switchCameraController(e){return this.cameraController=e,e.state!==y.State.Rejected}stopActiveCameraController(){return!(this.cameraController&&!this.cameraController.stopController())}updateCamera(e){this._updateQueue.push(e),this._processUpdateQueue()}_processUpdateQueue(){if(0===this._updateQueue.length||this._processingUpdates)return;this._processingUpdates=!0;const e=this._updateQueue.shift();f.copyFrom(this._get("camera")),e(f),this.camera=f,this._processingUpdates=!1,this._processUpdateQueue()}_cameraProjectionChanged(e,t){return e.fov!==t.fov||(e.fullViewport[0]!==t.fullViewport[0]||e.fullViewport[1]!==t.fullViewport[1]||e.fullViewport[2]!==t.fullViewport[2]||e.fullViewport[3]!==t.fullViewport[3]||(e.padding[C.PaddingSide.TOP]!==t.padding[C.PaddingSide.TOP]||e.padding[C.PaddingSide.RIGHT]!==t.padding[C.PaddingSide.RIGHT]||e.padding[C.PaddingSide.BOTTOM]!==t.padding[C.PaddingSide.BOTTOM]||e.padding[C.PaddingSide.LEFT]!==t.padding[C.PaddingSide.LEFT]))}};e.__decorate([o.property()],v.prototype,"mode",void 0),e.__decorate([o.property({readOnly:!0,type:h})],v.prototype,"animation",null),e.__decorate([o.property({type:C.Camera})],v.prototype,"camera",null),e.__decorate([o.property({type:C.Camera})],v.prototype,"cssCamera",null),e.__decorate([o.property()],v.prototype,"_cssCamera",void 0),e.__decorate([o.property()],v.prototype,"_camera",void 0),e.__decorate([o.property({readOnly:!0})],v.prototype,"pixelRatio",null),e.__decorate([o.property()],v.prototype,"rasterPixelRatio",void 0),e.__decorate([o.property()],v.prototype,"contentPixelRatio",void 0),e.__decorate([o.property({readOnly:!0})],v.prototype,"alignPixelEnabled",null),e.__decorate([o.property({readOnly:!0})],v.prototype,"updating",null),e.__decorate([o.property({})],v.prototype,"_contentCamera",void 0),e.__decorate([o.property({type:C.Camera})],v.prototype,"contentCamera",null),e.__decorate([o.property({readOnly:!0})],v.prototype,"fixedContentCamera",null),e.__decorate([o.property({readOnly:!0})],v.prototype,"constraints",void 0),e.__decorate([o.property({readOnly:!0})],v.prototype,"events",void 0),e.__decorate([o.property({readOnly:!0})],v.prototype,"isGlobal",null),e.__decorate([o.property({readOnly:!0})],v.prototype,"isLocal",null),e.__decorate([o.property({readOnly:!0})],v.prototype,"viewingMode",void 0),e.__decorate([o.property({readOnly:!0})],v.prototype,"spatialReference",void 0),e.__decorate([o.property()],v.prototype,"navigating",null),e.__decorate([o.property()],v.prototype,"stationary",null),e.__decorate([o.property()],v.prototype,"_cameraChanged",void 0),e.__decorate([o.property()],v.prototype,"cameraController",null),v=e.__decorate([l.subclass("esri.views.3d.state.ViewState")],v);const P=v,f=new C.Camera,S="ViewStateHandles";return P}));
