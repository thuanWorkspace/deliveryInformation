/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../Camera","../../../Viewpoint","../../../core/Error","../../../core/promiseUtils","../../../core/reactiveUtils","../camera/constraintUtils","../camera/constraintUtils/surfaceCollision","./controllers/CameraController","./controllers/PointToPointAnimationController","./controllers/SurfaceCollisionCorrectionController","../support/cameraUtils","../support/viewpointUtils"],(function(t,i,e,n,a,o,r,s,l,c,h,m,w){"use strict";class v{constructor(t,i,e){this.target=t,this.options=i,this.view=e,this.state="pending",this._animationController=null,this.promise=new Promise(((t,i)=>{this._resolveCallback=t,this._rejectCallback=i;const e=new AbortController;null!=this.options.signal&&a.onAbort(this.options.signal,(()=>{this.abort()})),this._abortController=e,this.waitForReady()}))}resolve(t){if("finished"!==this.state)return this.state="finished",this._resolveCallback(t)}reject(t){if("finished"!==this.state)return this.state="finished",this._rejectCallback(t)}abort(t=!1){if(this._abortController.abort(),"wait-for-animation-finish"===this.state)!t&&null!=this._animationController&&this.view.state.cameraController===this._animationController&&this._animationController.active&&this._animationController.stopController();this.reject(a.createAbortError())}async waitForReady(){if(this.state="wait-for-ready",!this.view.ready)try{await o.whenOnce((()=>this.view.ready),this._abortController.signal)}catch(t){return this.reject(t)}this.createViewPoint()}async createViewPoint(){if("finished"!==this.state){this.state="wait-for-viewpoint",this._animationController=this.options.animate?this._getAnimationController():null;try{const t=await w.create(this.view,this.target,this._abortController.signal);if("finished"===this.state)return;const i=t?this._getCameraFromViewpoint(t):null;if(null==i)return;if(this.options.animate){if(null==this._animationController)return;this.startAnimation(i,this._animationController)}else this.view.stateManager.setStateCamera(i.camera,{applyConstraints:!i.isFullySpecified,positionAndOrientationOnly:!0,doNotCancelGoToOperation:!0}),this.resolve()}catch(t){this.reject(t)}}}_getCameraFromViewpoint(t){const a=!!(this.target instanceof e&&this.target.camera||this.target instanceof i),o=t.camera;if(null==o)return null;if(!this.view.stateManager.isCompatible(o)){const t=o.position,i=t&&t.spatialReference,e=i?i.wkid:"none",a=this.view.spatialReference?.wkid;return this.reject(new n("GotoAnimation:incompatible-spatialreference",`Resulting camera has an incompatible spatial reference (camera: ${e}, view: ${a})`,{camera:o})),null}const r=m.externalToInternal(this.view,o);return null==r?(this.reject(new n("GotoAnimation:invalid-camera","Resulting camera is invalid")),null):{viewpoint:t,camera:r,isFullySpecified:a}}startAnimation(t,i){this.state="wait-for-animation-finish";const e=i.viewAnimation;if(null==e)return void this.reject(new n("GotoAnimation:missing-animation","Unreachable code in view.stateManager"));if(e.update(t.viewpoint,"running"),!i.active||null==i.viewAnimation||i.viewAnimation.target!==t.viewpoint||this.view.state.cameraController!==i)return this.abort();let a;t.isFullySpecified?(a=new h.SurfaceCollisionCorrectionController({view:this.view,desiredCamera:t.camera}),s.applySurfaceCollisionConstraint(this.view,t.camera,s.Mode.EYE_AND_CENTER)):r.applyAll(this.view,t.camera),i.begin(t.camera,this.options);const o=()=>{const e=this.view.state.cameraController;a&&(e&&e.active?e instanceof c.PointToPointAnimationController&&null!=e.viewAnimation&&e.viewAnimation.target===t.viewpoint&&(this.view.state.cameraController=a):null!=i.viewAnimation&&i.viewAnimation.target===t.viewpoint&&"finished"===i.state&&(this.view.state.cameraController=a))},m=t=>{if(null!=this.view.state)switch(i.state){case l.State.Finished:switch(this.state){case"pending":case"wait-for-ready":case"wait-for-viewpoint":case"wait-for-animation-finish":this.resolve()}break;case l.State.Ready:case l.State.Rejected:case l.State.Running:case l.State.Stopped:switch(this.state){case"pending":case"wait-for-ready":case"wait-for-viewpoint":case"wait-for-animation-finish":this.reject(t)}}};e.when(o,(t=>m(t))),i.asyncResult={resolve:()=>m(),reject:t=>m(t)}}_getAnimationController(){let t=null,i=null;const e=this.view.state.cameraController;return e instanceof c.PointToPointAnimationController&&(e.updateStateFromViewAnimation(),e.active&&(t=e,i=t.viewAnimation)),null!=t||(t=new c.PointToPointAnimationController({view:this.view,mode:"animation"}),i=t.viewAnimation,this.view.state.switchCameraController(t))?t:(null!=i&&i.stop(),this.reject(new n("GotoAnimation:goto-cannot-interrupt","Cannot start an animation while interacting")),null)}}t.GoToOperation=v,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
