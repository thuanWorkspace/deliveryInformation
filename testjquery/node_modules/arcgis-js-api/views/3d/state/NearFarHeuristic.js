/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../core/mathUtils","../../../core/unitUtils","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/ellipsoidUtils","../../../geometry/Extent","../../ViewingMode","../environment/atmosphereUtils"],(function(e,t,i,n,r,s,a,o,l){"use strict";function m(e,t,i){return e===o.ViewingMode.Global?new h(i):new c(t,i)}class c{constructor(e,t){this._elevationProvider=e,this._referenceEllipsoid=s.getReferenceEllipsoid(t),this._unitInMeters=i.getMetersPerUnitForSR(t,this._referenceEllipsoid.metersPerDegree)}compute(e,i,r,s,o){o||(o={near:0,far:0});let l=e[2]*this._unitInMeters;const m=l,c=l-s,h=this._elevationProvider?.visibleElevationBounds;h&&(l=c>=0?m-this._unitInMeters*h.min:this._unitInMeters*h.max-m);const M={x:(r=null!=r?r:new a({xmin:0,ymin:0,zmin:0,xmax:0,ymax:0,zmax:0})).xmax-r.xmin,y:r.ymax-r.ymin,z:4*Math.max(r.xmax-r.xmin,r.ymax-r.ymin)},y=Math.max(M.x,M.y,M.z);n.subtract(_,i,e),p[0]=_[0]>0?r.xmax:r.xmin,p[1]=_[1]>0?r.ymax:r.ymin,p[2]=_[2]>0?y/2:-y/2,n.subtract(p,p,e),n.normalize(_,_);const g=1.1*n.dot(p,_)*this._unitInMeters,E=Math.sqrt(l*(l+2*this._referenceEllipsoid.radius)),v=Math.max(r.xmax-r.xmin,r.ymax-r.ymin),I=v*d*this._unitInMeters,b=v*f*this._unitInMeters,w=t.clamp((l-b)/(I-b),0,1)**3,z=Math.min(t.lerp(E,g,w),E)*Math.max(Math.log(Math.abs(c)),1);return u(Math.min(z,Math.max(34064e4,y))/this._unitInMeters,x,this._unitInMeters,o)}}class h{constructor(e){this._referenceEllipsoid=s.getReferenceEllipsoid(e)}compute(e,i,r,s,a){a||(a={near:0,far:0});const o=n.length(e),m=o-this._referenceEllipsoid.radius,c=this._referenceEllipsoid.radius+Math.min(0,s),h=Math.abs(m-s),x=Math.max(h,Math.abs(m)),M=Math.sqrt(x*(x+2*c)),d=o+this._referenceEllipsoid.radius;return u(1.2*t.lerp(M,d,l.computeInnerAltitudeFade(x)),t.clamp(2e4-(Math.log(x)-7.983)/9.011*19e3,1e3,2e4),1,a)}}function u(e,t,i,n){const r=M/i;return e/t>r?(n.far=e,n.near=n.far/t):(n.near=r,n.far=n.near*t),n}const x=2e4,M=2,d=.001,f=1e-4,p=r.create(),_=r.create();e.createNearFarHeuristic=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
