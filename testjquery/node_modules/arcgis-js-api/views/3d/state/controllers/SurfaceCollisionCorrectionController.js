/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../camera/intersectionUtils","../../camera/constraintUtils/surfaceCollision","./CameraController"],(function(e,t,r,o,n,s,a,i,l,c){"use strict";e.SurfaceCollisionCorrectionController=class extends c.CameraController{set desiredCamera(e){this._set("desiredCamera",e.clone())}constructor(e){super(e)}get canStop(){return!0}get constraintEnabled(){return this.view.state.constraints.collision.enabled}onControllerStart(){this.state=c.State.Running,this.addHandles(this.view.basemapTerrain.on("elevation-change",(e=>this._handleElevationChangeEvent(e)))),this._applyCorrection()}onControllerEnd(){this.removeAllHandles()}stepController(){}_handleElevationChangeEvent(e){(null==e.spatialReference||i.eyeWithinExtent(this.view,this.desiredCamera,e.extent,e.spatialReference))&&this._applyCorrection()}_applyCorrection(){this.view.state.updateCamera((e=>{e.copyViewFrom(this.desiredCamera),l.applySurfaceCollisionConstraint(this.view,e,l.Mode.EYE_AND_CENTER)||this.constraintEnabled||(this.state=c.State.Stopped)}))}},t.__decorate([r.property({constructOnly:!0})],e.SurfaceCollisionCorrectionController.prototype,"desiredCamera",null),e.SurfaceCollisionCorrectionController=t.__decorate([a.subclass("esri.views.3d.state.controllers.SurfaceCollisionCorrectionController")],e.SurfaceCollisionCorrectionController),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
