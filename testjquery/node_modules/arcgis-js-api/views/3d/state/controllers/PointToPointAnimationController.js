/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3f64","../../../ViewAnimation","../../animation/pointToPoint/Animation","./AnimationController","../../webgl-engine/lib/Camera","../../webgl-engine/lib/Intersector","../../../animation/easing"],(function(t,i,n,e,o,r,s,a,c,l,m,h,p,u){"use strict";t.PointToPointAnimationController=class extends m.AnimationController{get intersectionHelper(){return this.view.sceneIntersectionHelper}constructor(t){super(t),this.mode="interaction",this._hasTarget=!1}initialize(){this.animation=new l.Animation(this.view.state.viewingMode),this.viewAnimation="interaction"===this.mode?null:new c}get isInteractive(){return"interaction"===this.mode}begin(t,i){this._hasTarget=!0;const n=this.animationSettings(i);d.copyFrom(this.view.state.camera);const e=p.newIntersector(this.view.state.viewingMode);this.intersectionHelper.intersectRay(d.ray,e,g)&&(d.center=g),this.animation.update(d,t,n),this.animation.finished&&this.finish()}finish(){this.animation.currentTime=this.animation.time,super.finish()}get steppingFinished(){return this._hasTarget&&this.animation.finished}stepController(t,i){this._hasTarget&&this.animation.step(t,i)}onControllerEnd(t){this._hasTarget&&(this.animation.cameraAt(this.animation.currentTime/this.animation.time,t),this.animation.currentTime=this.animation.time),super.onControllerEnd(t)}animationSettings(t={}){return{apex:{maximumDistance:this.view.state.constraints.clampAltitude(1/0)/6,ascensionFactor:void 0,descensionFactor:void 0},...t,easing:"string"==typeof t.easing?u.EasingFunctions[t.easing]:t.easing}}},i.__decorate([n.property({constructOnly:!0})],t.PointToPointAnimationController.prototype,"mode",void 0),i.__decorate([n.property({readOnly:!0})],t.PointToPointAnimationController.prototype,"isInteractive",null),t.PointToPointAnimationController=i.__decorate([s.subclass("esri.views.3d.state.controllers.PointToPointAnimationController")],t.PointToPointAnimationController);const d=new h.Camera,g=a.create();Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
