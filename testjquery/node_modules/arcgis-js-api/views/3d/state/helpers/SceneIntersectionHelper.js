/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/PooledArray","../../../../core/screenUtils","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../ViewingMode","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtils"],(function(e,t,r,n,i,s,o,l,c,a,d,u,h){"use strict";class p{constructor(e,r,n){this.viewingMode=e,this._forEachLayer=r,this._view=n,this._externalIntersectionHandlers=new t,this._tolerance=d.defaultTolerance,this._tmpRay=o.create(),this._tmpRegion=s.create(),this._validateHUDIntersector=d.newIntersector(this.viewingMode),this._validateHUDIntersector.options.hud=!1}intersectScreen(e,t,r){return this.intersectRay(this._getPickRay(e,this._tmpRay),R(this.viewingMode),t,r)}intersectScreenFreePointFallback(e,t,r){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,r)}intersectRayFreePointFallback(e,t,r){return this.intersectRay(e,R(this.viewingMode),t,r)||this._intersectRayFreePointLocal(e,t)}intersectRay(e,t,r,n){return t.options.selectionMode=!1,t.options.store=u.StoreResults.MIN,this.computeIntersection(e,t,n),!!t.results.min&&t.results.min.getIntersectionPoint(r)}getCenterRayWithSubpixelOffset(e,t,r=.5,n=.5){return e.getRenderCenter(w,r,n),w[0]+=.0466,w[1]-=.0123,a.fromRenderAtEye(e,w,t)}intersectIntersectorScreen(e,t,r){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,r)}intersectToolIntersectorScreen(e,t,r){const n=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(n,t,r)}intersectToolIntersectorRay(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,r);const n=t.results.min;!!this._view.basemapTerrain&&this._view.basemapTerrain.opaque||h.isValidIntersectorResult(n)&&n.intersector!==u.IntersectorType.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,r))}setTolerance(e=d.defaultTolerance){this._tolerance=e}addIntersectionHandler(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort(((e,t)=>e.type===u.IntersectorType.TERRAIN?1:t.type===u.IntersectorType.TERRAIN?-1:0))}removeIntersectionHandler(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort(((e,t)=>e.type===u.IntersectorType.TERRAIN?1:t.type===u.IntersectorType.TERRAIN?-1:0))}_getPickRay(e,t){const r=this._view.state.camera;return a.fromScreen(r,e,t)}_intersectRayFreePointLocal(e,t){return this.viewingMode!==c.ViewingMode.Local||null==e||n.add(t,e.origin,n.normalize(l.sv3d.get(),e.direction)),!1}intersectElevationFromScreen(e,t,r=0,n=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,r,n)}_intersectElevation(e,t,i=0,s=null){if(null==e)return null;const o=null!=t?t.mode:"absolute-height",c=t?.offset??0,a="on-the-ground"!==o?c+i:0,p=a/this._view.renderCoordsHelper.unitInMeters;if("absolute-height"===o){if(this._view.renderCoordsHelper.intersectInfiniteManifold(e,a,v)){const e=this._view.computeMapPointFromVec3d(v);return e.z??(e.z=0),e.z-=c,e}return null}const y=this._view.state.camera,g=r.castRenderScreenPointArray3(l.sv3d.get());y.projectToRenderScreen(e.origin,g);const f=new _(null,this._forEachLayer),m=this._view.slicePlane,R=null!=m?h.sliceFilterPredicate(m):null,I=d.newIntersector(this.viewingMode);I.options.store=u.StoreResults.MIN,I.options.verticalOffset=p;const w=e.origin,P=n.add(l.sv3d.get(),w,e.direction);I.reset(w,P,y),I.point=g;const b=s?"type"in s&&"graphics"===s.type?e=>e.layerUid!==s.uid:e=>e.graphicUid!==s.uid:null;switch(o){case"relative-to-scene":{const e=e=>(!b||b(e))&&!!e.lastValidElevationBB;I.intersect(f.layers,g,this._tolerance,null,e),this._externalIntersectionHandlers.forAll((e=>{if(e.type===u.IntersectorType.I3S||e.type===u.IntersectorType.TERRAIN){const t=e.slicePlaneEnabled?R:null;e.intersect(I,t,I.rayBegin,I.rayEnd,g)}}));break}case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?R:null;e.intersect(I,t,I.rayBegin,I.rayEnd,g)}}))}if(I.results.min.getIntersectionPoint(v)){const e=this._view.computeMapPointFromVec3d(v);return e.z=i,e}return null}computeIntersection(e,t,i){if(null==e)return;const s=this._view.state.camera,o=r.castRenderScreenPointArray3(l.sv3d.get());s.projectToRenderScreen(e.origin,o);const c=new _(i,this._forEachLayer);t.options.selectOpaqueTerrainOnly=!i||!("include"in i||"exclude"in i);const a=e.origin,d=n.add(l.sv3d.get(),e.origin,e.direction);t.reset(a,d,s),t.intersect(c.layers,o,this._tolerance);const u=this._view.slicePlane,p=null!=u?h.sliceFilterPredicate(u):null;t.intersect(c.sliceableLayers,o,this._tolerance,p);const y=i&&(i.requiresGroundFeedback||i.enableDraped);this._externalIntersectionHandlers.forAll((e=>{const r=e.layerUid,n=Array.isArray(r),i=n?r:[r];n&&(t.options.filteredLayerUids=[]);let s=!1;for(const o of i){!c.filterLayerUid(o)?n&&t.options.filteredLayerUids.push(o):s=!0}if(t.options.isFiltered=!s,e.isGround&&y||!t.options.isFiltered){const r=e.slicePlaneEnabled?p:null;e.intersect(t,r,a,d,o)}}));const g=l.sv3d.get(),f=this._view.basemapTerrain;if(i&&i.enableDraped&&null!=f.spatialReference&&t.results.ground.getIntersectionPoint(g)){const e=f.overlayManager.renderer,r=this._view.renderCoordsHelper.spatialReference,n=l.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(g,n,f.spatialReference),n[2]=this._view.elevationProvider?.getElevation(g[0],g[1],g[2],r,"ground")??0,e.intersect(t,n,t.results.ground,(e=>c.filterRenderGeometry(e)))}t.sortResults(),this._processHUDResults(t)}_processHUDResults(e){const t=e.results.hud;s.copy(this._tmpRegion,s.negativeInfinity);const r=this._view.state.camera,n=[],i=this._tmpRegion,o=e=>{const t=new f(e);r.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),n.push(t),s.expandPointInPlace(i,t.screenPoint)};e.sortResults(t.all),null!=t.min.dist&&o(t.min);for(const s of t.all)t.min.target.object!==s.target.object&&t.max.target.object!==s.target.object&&o(s);if(null!=t.max.dist&&t.max.target.object!==t.min.target.object&&o(t.max),!n.length)return;i[0]===i[2]&&(i[2]+=1),i[1]===i[3]&&(i[3]+=1);const l=r.fullWidth,c=r.fullHeight,a=Math.max(0,i[0]-y),d=Math.max(0,i[1]-y),h=Math.min(s.width(i)+2*y,l-a),p=Math.min(s.height(i)+2*y,c-d),m=new Uint8Array(h*p*4);this._view._stage.renderer.readHUDVisibility(a,d,h,p,m);let R=!0;const _=null==e.results.max.dist;let I=0;for(const s of n)for(const t of g){if(m[4*(Math.min(s.screenPoint[0]+t[0],l)-i[0]+(Math.min(s.screenPoint[1]+t[1],c)-i[1])*h)]){R&&(e.results.min.copy(s.result),R=!1),_&&e.results.max.copy(s.result),e.options.store===u.StoreResults.ALL&&e.results.all.splice(I++,0,s.result);break}}}}const y=1,g=(()=>{const e=[],t=y;for(let r=-t;r<=t;r++)for(let n=-t;n<=t;n++)e.push([n+t,r+t]);return e})();class f{constructor(e){this.result=e,this.screenPoint=r.createRenderScreenPointArray3()}}let m;function R(e){return m&&m.viewingMode===e||(m=d.newIntersector(e)),m}class _{constructor(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t((e=>{e.pickable&&this.filterLayerUid(e.apiLayerUid)&&(e.sliceable?this.sliceableLayers:this.layers).push(e)}))}filterLayerUid(e){const{include:t,exclude:r}=this;return null==e?null==t&&null==r:(null==t||t.has(e))&&(null==r||!r.has(e))}filterRenderGeometry(e){return this.filterLayerUid(e.layerUid)}}function I(e){return"object"==typeof e&&"intersect"in e}const v=i.create(),w=r.createRenderScreenPointArray3();e.SceneIntersectionHelper=p,e.isIntersectionHandler=I,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
