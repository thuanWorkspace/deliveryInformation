/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/asyncUtils","../../../core/handleUtils","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/support/aaBoundingRect","./interfaces","./LayerView3D","./support/overlayImageUtils","./support/projectExtentUtils","../support/debugFlags","../terrain/interfaces","../webgl-engine/lib/ModelDirtyTypes","../webgl-engine/lib/RenderGeometry","../webgl-engine/lib/Texture","../webgl-engine/lib/UpdatePolicy","../webgl-engine/materials/ImageMaterial","../../layers/LayerView","../../layers/RefreshableLayerView","../../support/layerViewUtils","../../webgl/enums"],(function(e,t,r,i,a,s,n,o,l,h,c,d,u,g,m,p,y,_,f,w,x,b,R,v,S,E,I,A,D){"use strict";let M=class extends(I(p.LayerView3D(E))){constructor(){super(...arguments),this.drapeSourceType=m.DrapeSourceType.RasterImage,this.updatePolicy=v.UpdatePolicy.SYNC,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this.updateWhenStationary=!0,this._drapeSourceRenderer=null,this.refreshDebounced=s.debounce((async e=>{this.destroyed||await this._doRefresh(e).catch((e=>{s.isAbortError(e)||i.getLogger(this).error(e)}))}),2e3)}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.addHandles(r.makeHandle((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this)))),this.addResolvingPromise(_.toViewIfLocal(this).then((e=>this._set("fullExtentInLocalViewSpatialReference",e)))),this._updatingHandles.add((()=>this.suspended),(()=>this._suspendedChangeHandler())),this.addHandles(this.view.resourceController.scheduler.registerIdleStateCallbacks((()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")}),(()=>{}))),this._isScaleRangeLayer()&&this._updatingHandles.add((()=>this.layer.effectiveScaleRange),(()=>this.notifyChange("suspended")))}destroy(){this.clear()}setDrapingExtent(e,t){this._spatialReference=t,e.forEach(((e,t)=>{this._overlays[t]=e,this._updateImageExtent(e,t)}))}_updateImageExtent(e,t){const r=this._clippedExtent(e.extent,O);if(null==r)return;const a=y.computeImageExportSize(e.extent,r,e.resolution);let n=e.pixelRatio*this.view.state.pixelRatio;const{layer:o}=this;if("imageMaxWidth"in o&&null!=o.imageMaxWidth||"imageMaxHeight"in o&&null!=o.imageMaxHeight){const e=o.imageMaxWidth,t=o.imageMaxHeight;if(a.width>e){const t=e/a.width;a.height=Math.floor(a.height*t),a.width=e,n*=t}if(a.height>t){const e=t/a.height;a.width=Math.floor(a.width*e),a.height=t,n*=e}}const l=this._extents[t];l&&g.equals(l.extent,r)&&this._imageSizeEquals(r,l.imageSize,a)||(this._extents[t]={extent:g.create(r),imageSize:a,pixelRatio:n},this.suspended||this._fetch(t).catch((e=>{s.isAbortError(e)||i.getLogger(this).error(e)})))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(){return this._doRefresh()}async _doRefresh(e){if(this.suspended)return;const t=[];for(let r=0;r<this._extents.length;r++)this._extents[r]&&t.push(this._fetch(r,e));await Promise.allSettled(t)}canResume(){if(!super.canResume())return!1;const e=this.layer;if(this._isScaleRangeActive()){const{minScale:t,maxScale:r}=e.effectiveScaleRange,i=this.view.scale;if(i<r||t>0&&i>t)return!1}return!0}async processResult(e,t,r){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const r=t.extent;if(new u(r[0],r[1],r[2],r[3],this._spatialReference).contains(e))return t}return null}getFetchOptions(){}async redraw(e,r){await t.forEach(this._images,(async(t,i)=>{t&&(await e(t,r),await this._createStageObjects(i,t.image,r))}))}_imageSizeEquals(e,t,r){if(!this.maximumDataResolution)return!1;const i=g.width(e)/this.maximumDataResolution.x,a=g.height(e)/this.maximumDataResolution.y,s=i/t.width,n=a/t.height,o=i/r.width,l=a/r.height,h=Math.abs(s-o),c=Math.abs(n-l),d=f.debugFlags.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return h<=d&&c<=d}async _fetch(e,t){if(this.suspended)return;const r=this._extents[e],n=r.extent;this._images[e]||(this._images[e]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:g.create(n)});const o=this._images[e];o.loadingAbortController=a.abortMaybe(o.loadingAbortController);const l=new u(n[0],n[1],n[2],n[3],this._spatialReference);if(0===l.width||0===l.height)return void this._clearImage(e);const h=new AbortController;o.loadingAbortController=h,s.onAbort(t,(()=>h.abort()));const c=h.signal,d=this._waitFetchReady(c).then((async()=>{const t={requestAsImageElement:!0,pixelRatio:this._overlays[e].pixelRatio,...this.getFetchOptions(),signal:c},{height:i,width:a}=r.imageSize;return this.layer.fetchImage(l,a,i,t)})).then((e=>{if(s.isAborted(c))throw i.getLogger(this).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),s.createAbortError();return this.processResult(o,e)})).then((()=>{g.copy(o.renderExtent,n)}));o.loadingPromise=d,await this._updatingHandles.addPromise(d.then((async()=>{s.throwIfAborted(c),await this._createStageObjects(e,o.image,c)})).catch((e=>{throw e&&!s.isAbortError(e)&&i.getLogger(this).error(e),e})).finally((()=>{d===o.loadingPromise&&(o.loadingPromise=null,o.loadingAbortController=null)})))}_clearImage(e){const t=this._images[e];if(t){null!=t.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([t.renderGeometry],x.DirtyOperation.UPDATE),t.renderGeometry=null);const e=this.view._stage,r=t.texture;r?.unload(),e.remove(r),t.texture=null,e.remove(t.material),t.material=null,t.loadingAbortController=a.abortMaybe(t.loadingAbortController),t.loadingPromise=null,t.image=null,t.pixelData=null}}async _createStageObjects(e,r,i){const a=this.view._stage,n=this._images[e],o=()=>{n.texture?.unload(),a.remove(n.texture),n.texture=null,n.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([n.renderGeometry],x.DirtyOperation.UPDATE),n.renderGeometry=null)};if(r){const l=new R.Texture(r,{width:r.width,height:r.height,preMultiplyAlpha:!0,wrap:{s:D.TextureWrapMode.CLAMP_TO_EDGE,t:D.TextureWrapMode.CLAMP_TO_EDGE}});let h;if(await t.result(this._images[e===w.OverlayIndex.INNER?w.OverlayIndex.OUTER:w.OverlayIndex.INNER].loadingPromise),s.throwIfAborted(i),o(),await a.schedule((()=>l.load(a.renderView.renderingContext)),i),a.add(l),n.texture=l,null==n.material?(n.material=new S.ImageMaterial({transparent:!0,textureId:l.id}),a.add(n.material)):n.material.setParameters({textureId:l.id}),e===w.OverlayIndex.INNER)h=y.createGeometryForExtent(n.material,n.renderExtent);else{const e=this._images[0].renderExtent;if(!e)return void o();h=y.createOuterImageGeometry(n.material,e,n.renderExtent)}n.renderGeometry=new b.RenderGeometry(h),n.renderGeometry.localOrigin=this._overlays[e].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([n.renderGeometry],x.DirtyOperation.UPDATE)}else o(),a.remove(n.material),n.material=null}_isScaleRangeLayer(){return"effectiveScaleRange"in this.layer}_isScaleRangeActive(){const e=this.layer;if(!this._isScaleRangeLayer())return!1;const{minScale:t,maxScale:r}=e.effectiveScaleRange;return A.isScaleRangeActive(t,r)}_clippedExtent(e,t){if("local"!==this.view.viewingMode)return g.copy(t,e);const r=this.view.basemapTerrain;return r.ready?g.intersection(e,r.extent,t):g.copy(t,e)}_suspendedChangeHandler(){this.suspended?this.clear():this.refreshDebounced()}async _waitFetchReady(e){await n.whenOnce((()=>this.view.stationary),e),s.throwIfAborted(e)}};e.__decorate([o.property()],M.prototype,"layer",void 0),e.__decorate([o.property()],M.prototype,"suspended",void 0),e.__decorate([o.property({readOnly:!0})],M.prototype,"fullExtentInLocalViewSpatialReference",void 0),e.__decorate([o.property()],M.prototype,"updating",void 0),M=e.__decorate([d.subclass("esri.views.3d.layers.DynamicLayerView3D")],M);const L=M,O=g.create();return L}));
