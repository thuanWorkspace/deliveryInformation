/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../Graphic","../../../../symbols","../../../../core/Collection","../../../../geometry/Polygon","../../../../symbols/FillSymbol3DLayer","../../../../symbols/PointSymbol3D","../../../../symbols/PolygonSymbol3D","../../../../symbols/TextSymbol3DLayer","../../../../symbols/support/Symbol3DVerticalOffset","../../terrain/TilingScheme","../../../../symbols/callouts/LineCallout3D"],(function(e,t,i,s,a,o,l,n,r,h,c,y){"use strict";const d=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];class m{constructor(e,t,i){this._loadingGraphics=new Map,this._loadedGraphics=new Map,this._pendingGraphics=new Map,this._dataExtentGraphic=null,this._enabled=!0,this._tileFetcher=e,this._view=i,this._tilingScheme=new c.TilingScheme(t),this._loadedSymbols=d.map((e=>new n({symbolLayers:new s([new o({material:{color:[e[0],e[1],e[2],.6]},outline:{color:"black",size:1}})])}))),this._loadingSymbols=[new n({symbolLayers:new s([new o({material:{color:[200,200,200,.4]},outline:{color:[30,30,30],size:1}})])})],this._pendingSymbols=[new n({symbolLayers:new s([new o({material:{color:[100,100,100,.4]},outline:{color:[30,30,30],size:1}})])})],this._dataExtentSymbol=new n({symbolLayers:new s([new o({material:{color:[0,0,0,0]},outline:{color:"green",size:4}})])})}destroy(){this.enabled=!1}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this.update()}update(){this._enabled?(this._synchronizeMaps(this._loadingGraphics,{filter:e=>e.isFetching,symbols:this._loadingSymbols}),this._synchronizeMaps(this._loadedGraphics,{filter:e=>!e.isFetching,symbols:this._loadedSymbols}),this._synchronizeMaps(this._pendingGraphics,{filter:e=>!e.isFetching,symbols:this._pendingSymbols}),this.showDataExtent(this._tileFetcher.filterExtent)):(this._loadingGraphics.forEach((e=>{this._view.graphics.removeMany(e)})),this._loadingGraphics.clear(),this._loadedGraphics.forEach((e=>{this._view.graphics.removeMany(e)})),this._loadedGraphics.clear(),this._pendingGraphics.forEach((e=>{this._view.graphics.removeMany(e)})),this._pendingGraphics.clear(),this._dataExtentGraphic&&(this._view.graphics.remove(this._dataExtentGraphic),this._dataExtentGraphic=null))}showDataExtent(e){if(this._dataExtentGraphic&&(this._view.graphics.remove(this._dataExtentGraphic),this._dataExtentGraphic=null),null==e)return;const i=a.fromExtent(e);this._dataExtentGraphic=new t({geometry:i,symbol:this._dataExtentSymbol}),this._view.graphics.add(this._dataExtentGraphic)}_synchronizeMaps(e,i){const a=[];e.forEach(((e,t)=>{const s=this._tileFetcher.test.getFeatureTileById(t);s&&i.filter(s)||(this._view.graphics.removeMany(e),a.push(t))})),a.forEach((t=>e.delete(t))),this._tileFetcher.test.forEachFeatureTile((a=>{if(i.filter(a)&&!e.has(a.id)){const[o,n,c]=a.descriptor.lij;this._tilingScheme.ensureMaxLod(o);const d=this._tilingScheme.getExtentGeometry(o,n,c),m=[new t({geometry:d,symbol:i.symbols[o%i.symbols.length]}),new t({geometry:d.center,symbol:new l({verticalOffset:new h({screenLength:40/.75}),callout:new y({color:"white",border:{color:"black"}}),symbolLayers:new s([new r({text:`${o}/${n}/${c}`,halo:{color:"white",size:1/.75},material:{color:"black"},size:16})])})})];e.set(a.id,m),this._view.graphics.addMany(m)}}))}}e.FeatureTileFetcher3DDebugger=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
