/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/arrayUtils","../../../../core/byteSizeEstimations","../../../../core/handleUtils","../../../../core/Logger","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3f64","../../../../core/support/UpdatingHandles","../../../../geometry/projection/projectPointToVector","../../../../geometry/support/Indices","../../../../geometry/support/scaleUtils","../../../../layers/graphics/dehydratedFeatures","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedFeature","../../../../layers/graphics/OptimizedGeometry","../../../../layers/graphics/data/FeatureStore","../../../../layers/support/fieldUtils","../../../../renderers/support/heatmapUtils","../interfaces","../graphics/DisplayFeatureLimit","./FeatureVisibilityFilter","../../terrain/OverlayRenderer","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/ContentObjectType","../../webgl-engine/lib/DrapedHeatmapRenderer","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/ModelDirtyTypes","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/UpdatePolicy","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/HeatmapDensityMaterial","../../../support/layerViewUtils","../../../webgl/enums","../../../webgl/heatmapTextureUtils"],(function(e,t,r,a,i,o,s,n,l,p,d,u,c,m,h,_,y,g,F,P,f,b,R,S,H,v,w,T,x,V,A,G,M,I,O,D,N,U,E,C,L){"use strict";const j="esri.views.3d.layers.support.HeatmapFeatureProcessor",z=s.getLogger(j),B=112;e.HeatmapFeatureProcessor=class extends r{constructor(e){super(e),this.type="heatmap",this.preferredUpdatePolicy=D.UpdatePolicy.ASYNC,this.dataExtent=null,this.drapeSourceType=v.DrapeSourceType.Features,this._renderGeometries=new Map,this._fieldTotal=0,this._drapeSourceRenderer=null,this._dataType=C.PixelType.HALF_FLOAT,this._pixelFormat=C.PixelFormat.RGBA,this._updatingHandles=new h.UpdatingHandles,this.initializePromise=Promise.resolve()}initialize(){this._featureStore=new R({geometryType:"esriGeometryPoint",hasZ:this.hasZ,hasM:this.hasM});const{dataType:e,samplingMode:t,pixelFormat:r,internalFormat:a}=L.loadHeatmapTextureConfiguration(this._renderView.renderingContext,z);this._dataType=e,this._pixelFormat=r;const i=e!==C.PixelType.FLOAT;this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerDrapeSource(this,G.DrapedHeatmapRenderer,{...this._rendererParameters,dataType:e,samplingMode:t,pixelFormat:r,internalFormat:a}),this._material=new U.HeatmapDensityMaterial({usesHalfFloats:i}),this._materialWithField=new U.HeatmapDensityMaterial({usesHalfFloats:i,isAttributeDriven:!0}),this._filterVisibility=new T.FeatureVisibilityFilter({context:{layerView:this.owner,featureStore:this.featureStore,getFeatureCount:()=>this._loadedPointGraphics.length,setAllFeaturesVisibility:e=>this._setAllFeaturesVisibility(e),clearFeaturesVisibility:()=>this._setAllFeaturesVisibility(!0),updateFeatureVisibilities:e=>this._updateFeatureVisibilities(e)}}),this._updatingHandles.addOnCollectionChange((()=>this._loadedPointGraphics),(e=>this._onLoadedFeaturesChange(e)),n.initial),this._updatingHandles.addWhen((()=>this._materialParameters),(e=>this._forEachMaterial((t=>t.setParameters(e)))),n.initial),this._updatingHandles.add((()=>this._rendererParameters),(e=>this._drapeSourceRenderer.set(e))),this._updatingHandles.add((()=>this._heatmapRendererField),(()=>{this._recreate()}),n.sync),this._updatingHandles.add((()=>({fieldName:this._heatmapRendererFieldName,numeric:this._heatmapRendererFieldIsNumeric})),(({fieldName:e,numeric:t})=>{if(null!=e&&t){let t=0;this._featureStore.forEach((r=>t+=r.attributes[e]??0)),this._fieldTotal=t}else this._fieldTotal=this._featureStore.numFeatures}),n.initial),this.addHandles([n.watch((()=>({fieldName:this._heatmapRendererFieldName,field:this._heatmapRendererField})),(({fieldName:e,field:t})=>{e&&!t&&z.warn(`Heatmap renderer field '${e}' for layer '${this.layer.title??this.layer.id}' not found`)})),n.watch((()=>({field:this._heatmapRendererField,numeric:this._heatmapRendererFieldIsNumeric})),(({field:e,numeric:t})=>{null==e||t||z.warn(`Heatmap renderer field '${e.name}' for layer '${this.layer.title??this.layer.id}' does not contain numeric values and cannot be used to drive the heatmap density`)})),o.makeHandle((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this)))])}destroy(){this._renderGeometries.clear(),this._material=null,this._materialWithField=null,this._featureStore.clear(),this._featureStore=null,this._updatingHandles.destroy()}get layer(){return this.owner.layer}get featureStore(){return this._featureStore}get updating(){return this._updatingHandles.updating||this.filterVisibility.updating}get updatingRemaining(){return 0}get suspendInfo(){return{}}get legendEnabled(){return!0}get filterVisibility(){return this._filterVisibility}get displayFeatureLimit(){const e=this.owner?.view?.quality??1,t=this.owner?.view?.qualitySettings,r=t?Math.ceil(t.heatmap.maxTotalNumberOfFeatures*e):0,a=r*6,i=r;return new w.DisplayFeatureLimit(a,i)}get hasZ(){return"hasZ"in this.layer&&this.layer.hasZ}get hasM(){return"hasM"in this.layer&&this.layer.hasM}get view(){return this.owner.view}get fullOpacity(){return this.owner.fullOpacity}get updatePolicy(){return this.owner.updatePolicy}get scaleVisibilitySuspended(){if(!this._isScaleRangeActive)return!1;const{minScale:e,maxScale:t}=this.layer.effectiveScaleRange,{scale:r}=this.view;return!E.scaleBoundsPredicate(r,e??0,t??0)}get usedMemory(){const e=this.usedMemoryPerFeature*this._featureStore.numFeatures,t=this._pixelFormat===C.PixelFormat.RED?1:4,r=this._dataType===C.PixelType.FLOAT?4:2,a=Math.ceil((this._overlayRenderer?.overlays[0]?.resolution??0)*this._densityMapPixelRatio)??0;return a*a*t*r+e}get usedMemoryPerFeature(){const e=this._loadedPointGraphics.find((()=>!0));if(null==e)return 0;const t=i.estimateAttributesObjectSize(e),r=i.estimateNumberByteSize(),a=6;return a*i.estimateFixedArraySize([0,0,0],r)+a*i.estimateFixedArraySize([0,0],r)+(this._heatmapRendererFieldIsNumeric?a*r:0)+t}get loadedFeatures(){return this._featureStore.numFeatures}get unprocessedMemoryEstimate(){return 0}get performanceInfo(){return{core:{visible:this._visibleFeatures,missing:0,pending:0},elevationUpdating:!1,visibilityFrustum:!0,visibilityScale:!0}}get renderer(){return this._heatmapRenderer}get _overlayRenderer(){return this.view.basemapTerrain.overlayManager.renderer}get _overlaySpatialReference(){return this._overlayRenderer.spatialReference}get _rendererParameters(){return{...this._radiusParameter,...this._densityParameters,...this._colorRampParameter,...this._pixelRatioParameter}}get _materialParameters(){return{...this._radiusParameter,...this._resolutionForScaleParameter}}get _densityParameters(){const e=this._heatmapRenderer;if(null==e)return null;const{minDensity:t,maxDensity:r}=e;return{minDensity:t,maxDensity:r,fieldTotal:this._fieldTotal}}get _radiusParameter(){const e=this._heatmapRenderer;return e?{searchRadius:l.pt2px(this._clampSearchRadius(e.radius))}:null}get _resolutionForScaleParameter(){const e=this._heatmapRenderer;if(!e)return null;const{referenceScale:t}=e;return{resolutionForScale:0===t?0:g.getResolutionForScale(t,this.view.spatialReference)}}get _colorRampParameter(){const e=this._heatmapRenderer;return e?{colorRampData:H.generateGradient(e.colorStops)}:null}get _pixelRatioParameter(){return{pixelRatio:this._densityMapPixelRatio}}get _densityMapPixelRatio(){return this.owner?.view?.qualitySettings.heatmap.pixelRatio??1}get _renderView(){return this.view._stage.renderView}get _featuresArePoints(){return"point"===this.layer.geometryType}get _loadedPointGraphics(){return this.owner.loadedGraphics}get _heatmapRenderer(){const e=this.layer.renderer;return"heatmap"===e?.type?e:null}get _heatmapRendererFieldName(){return this._heatmapRenderer?.field}get _heatmapRendererField(){const e=this._heatmapRendererFieldName;return null!=e?this.layer.fieldsIndex.get(e):null}get _heatmapRendererFieldIsNumeric(){const e=this._heatmapRendererField;return null!=e&&S.isNumericField(e)}get _isScaleRangeActive(){const{layer:e}=this;if(!("effectiveScaleRange"in e))return!1;const{minScale:t,maxScale:r}=e.effectiveScaleRange;return E.isScaleRangeActive(t,r)}get _visibleFeatures(){let e=0;return this._renderGeometries.forEach((t=>{t.visible&&++e})),e}async whenGraphicBounds(){return null}computeAttachmentOrigin(){return null}highlight(){return o.makeHandle()}maskOccludee(){return o.makeHandle()}setObjectIdVisibility(){}refreshFilter(){this.filterVisibility.reapply()}_onLoadedFeaturesChange(e){if(!this._featuresArePoints)return;const{objectIdField:t}=this.layer;this._featureStore.removeManyById(e.removed.map((e=>F.getObjectId(e,t)))),this._featureStore.addMany(e.added.map((e=>{const{attributes:r,centroid:a,geometry:i}=e,o=new f.OptimizedFeature(P.convertFromPoint(new b,i),r,a?P.convertFromPoint(new b,a):null,F.getObjectId(e,t));return o.displayId=e.uid,o})));const r=e.added,i=e.removed;this._fieldTotal+=this._computeFieldTotalChange(r,i);const o=i.map((({uid:e})=>{const t=this._renderGeometries.get(e);return this._renderGeometries.delete(e),t})).filter(a.isSome),s=r.map((e=>{const t=this._pointGraphicToRenderGeometry(e);return this._renderGeometries.set(e.uid,t),t}));o.length>0&&this._drapeSourceRenderer.removeGeometries(o,I.DirtyOperation.REMOVE),s.length>0&&this._drapeSourceRenderer.addGeometries(s,I.DirtyOperation.ADD),(s.length>0||o.length>0)&&(this.filterVisibility.reapply(),this._renderView.requestRender())}_recreate(){if(!this._loadedPointGraphics)return;const e=this._loadedPointGraphics.toArray();this._onLoadedFeaturesChange({added:e,removed:e})}_pointGraphicToRenderGeometry(e){const t=this._heatmapRendererFieldName,r=null!=t?this._materialWithField:this._material,a=m.create();_.projectPointToVector(e.geometry,a,this._overlaySpatialReference),a[2]=x.drapedZ;const i=y.getContinuousIndexArray(1),o=[[N.VertexAttribute.POSITION,new V.Attribute(a,i,a.length)]],s=this._heatmapRendererFieldIsNumeric;null!=t&&o.push([N.VertexAttribute.FEATUREATTRIBUTE,new V.Attribute([s?e.attributes[t]??0:0],i,1)]);const n=new O.RenderGeometry(new M.Geometry(r,o,null,A.ContentObjectType.Point),{layerUid:this.layer.uid,graphicUid:e.uid});return n.visible=this.filterVisibility.defaultVisibility,n}_forEachMaterial(e){e(this._material),e(this._materialWithField)}_computeFieldTotalChange(e,t){if(null==this._heatmapRendererFieldName||!this._heatmapRendererFieldIsNumeric)return e.length-t.length;const r=this._heatmapRendererFieldName,a=(e,t)=>e+(t.attributes[r]??0);return e.reduce(a,0)-t.reduce(a,0)}_clampSearchRadius(e){return e>B&&z.warnOnce(`SceneView supports a maximum radius of ${B} pt for HeatmapRenderer.`),Math.min(e,B)}_updateFeatureVisibilities(e){const t=[];this._featureStore.forEach((({objectId:r,displayId:a})=>{const i=e(r),o=this._renderGeometries.get(a);o&&o.visible!==i&&(t.push(o),o.visible=i)})),this._drapeSourceRenderer.modifyGeometries(t,I.DirtyState.VISIBILITY)}_setAllFeaturesVisibility(e){const t=[];for(const r of this._renderGeometries.values())r.visible!==e&&(t.push(r),r.visible=e);this._drapeSourceRenderer.modifyGeometries(t,I.DirtyState.VISIBILITY)}get test(){return{visibleFeatureCount:this._visibleFeatures}}},t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"type",void 0),t.__decorate([p.property({constructOnly:!0})],e.HeatmapFeatureProcessor.prototype,"owner",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"layer",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"featureStore",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"updating",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"updatingRemaining",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"suspendInfo",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"legendEnabled",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"filterVisibility",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"displayFeatureLimit",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"preferredUpdatePolicy",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"hasZ",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"hasM",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"dataExtent",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"view",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"fullOpacity",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"updatePolicy",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"drapeSourceType",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"scaleVisibilitySuspended",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"renderer",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_featureStore",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_filterVisibility",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_overlayRenderer",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_overlaySpatialReference",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_rendererParameters",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_materialParameters",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_densityParameters",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_radiusParameter",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_resolutionForScaleParameter",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_colorRampParameter",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_pixelRatioParameter",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_densityMapPixelRatio",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_renderGeometries",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_material",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_materialWithField",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_renderView",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_featuresArePoints",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_loadedPointGraphics",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRenderer",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRendererFieldName",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRendererField",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_heatmapRendererFieldIsNumeric",null),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_fieldTotal",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_drapeSourceRenderer",void 0),t.__decorate([p.property()],e.HeatmapFeatureProcessor.prototype,"_isScaleRangeActive",null),e.HeatmapFeatureProcessor=t.__decorate([c.subclass(j)],e.HeatmapFeatureProcessor),e.maxRadiusPt=B,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
