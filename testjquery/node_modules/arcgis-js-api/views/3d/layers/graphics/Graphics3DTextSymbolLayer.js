/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Error","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../chunks/vec2f64","../../../../symbols/callouts/calloutUtils","./ElevationAligners","./elevationAlignmentUtils","./ElevationContext","./Graphics3DObject3DGraphicLayer","./Graphics3DObjectMetadata","./Graphics3DSymbolLayer","./graphicUtils","./LabelParameters","./placementUtils","./pointUtils","../../webgl-engine/lib/FontMetrics","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/TextRenderParameters","../../webgl-engine/lib/TextTextureFactory","../../webgl-engine/materials/HUDMaterial"],(function(e,t,n,r,a,l,i,s,o,c,h,m,u,p,d,y,f,g,b,x,v){"use strict";const P=[0,0,1];class O extends m.Graphics3DSymbolLayer{constructor(e,t,n,r){super(e,t,n,r),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const e=u.validateSymbolLayerSize(this.symbolLayer.size);if(e)throw new t("graphics3dtextsymbollayer:invalid-size",e)}await this._createTextRenderParameters()}async _createTextRenderParameters(){const e=this._context.graphicsCoreOwner.view.state.rasterPixelRatio;this._textRenderParameters=await b.TextRenderParameters.fromSymbol(this.symbolLayer,e)}destroy(){super.destroy()}createGraphics3DGraphic(e){const t=e.graphic,n=y.placePointOnGeometry(t.geometry);if(null==n)return this.logger.warn(`unsupported geometry type for text symbol: ${t.geometry.type}`),null;const r=this.symbolLayer.text;if(null==r||""===r)return null;const a=l.hasCalloutSupport(this.symbol)&&this.symbol.hasVisibleVerticalOffset()?this.symbol.verticalOffset:null;if(null!=a&&!l.textSymbolLayerSupportsVerticalOffset(this.symbolLayer))return this.logger.errorOncePerTick(`Callouts and vertical offset on text symbols are currently only supported with 'center' horizontal alignment (not with '${this.symbolLayer.horizontalAlignment}' alignment)`),null;const{verticalAlignment:i}=this.symbolLayer,s=new p.LabelPlacement(a);d.verticalScreenOffsetFromAlignment(i,s.screenOffset);const o=new p.LabelParameters(s,this.symbolLayer.horizontalAlignment,d.verticalPlacementFromAlignment(i));return this._createAs3DShape(t,n,r,o)}createLabel(e,t,n,r,a){const l=e.graphic,i=y.placePointOnGeometry(l.geometry);if(null==i)return this.logger.warn(`unsupported geometry type for label: ${l.geometry.type}`),null;const s=t.text;return!s||/^\s+$/.test(s)?null:this._createAs3DShape(l,i,s,t,n,r,a)}setGraphicElevationContext(e,t,n=0){return super.setGraphicElevationContext(e,t),t.addOffsetRenderUnits(n),t}layerOpacityChanged(){return this.logger.warn("layer opacity change not yet implemented in Graphics3DTextSymbolLayer"),!1}layerElevationInfoChanged(e,t){return S(e,t,((e,t)=>{this.updateGraphicElevationContext(t,e)})),s.SymbolUpdateType.UPDATE}slicePlaneEnabledChanged(e,t){return S(e,t,(e=>{for(const t of e.stageObject.geometries)t.material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})})),!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return!1}updateGraphicElevationContext(e,t){const n=t.elevationContext;this.setGraphicElevationContext(e,n,null!=t.metadata?t.metadata.elevationOffset:0),t.needsElevationUpdates=s.needsElevationUpdates2D(n.mode)||"absolute-height"===n.mode}_defaultElevationInfoNoZ(){return L}_createAs3DShape(e,t,l,m,u=null,p=null,b=(()=>m.placement.elevationOffset)){const O=this.setGraphicElevationContext(e,new o.ElevationContext,m.placement.elevationOffset),S="polyline"===e.geometry?.type,L=e.uid;let w=null,G=null;if(null==p){const e=d.textRenderAlignmentFromHorizontalPlacement(m.horizontalPlacement);w=new x(l,e,this._textRenderParameters);let t=null;if(null!=this._context.sharedResources.textures){G=this._context.sharedResources.textures.fromData(w.key,(()=>w.create())),G.texture.events.on("unloaded",(()=>t?.release()));const e=this._context.stage.renderView.textureRepository.acquire(G.texture.id);if(null==e||n.isPromiseLike(e))return G.release(),null;t=e}}const D=E(w,m),U={occlusionTest:!0,screenOffset:m.placement.screenOffset,anchorPosition:D,polygonOffset:!0,color:[1,1,1,1],centerOffsetUnits:m.placement.centerOffsetUnits,drawInSecondSlot:!0};if(p?U.textureId=p.id:G&&(U.textureId=G.texture.id),null!=m.placement.verticalOffset){const{screenLength:e,minWorldLength:t,maxWorldLength:n}=m.placement.verticalOffset;U.verticalOffset={screenLength:r.pt2px(e),minWorldLength:t||0,maxWorldLength:null!=n?n:1/0}}if(this._context.screenSizePerspectiveEnabled){const{screenSizePerspectiveSettings:e,screenSizePerspectiveSettingsLabels:t}=this._context.sharedResources,n=f.getFontMetrics(this._textRenderParameters);U.screenSizePerspective=t.overrideFontHeight(n.maxHeight),U.screenSizePerspectiveAlignment=e}S&&(U.shaderPolygonOffset=1e-4),U.hasSlicePlane=this._context.slicePlaneEnabled;const _=(e,t)=>{const n=JSON.stringify(t);let r=e.get(n);return null==r&&(r=new v.HUDMaterial(t),e.add(n,r)),r},z=u?_(u,U):new v.HUDMaterial(U),A=m.placement.translation,C=w?a.fromValues(w.displayWidth,w.displayHeight):a.ZEROS,R=m.placement.centerOffset,T=P,j=[0,0],H=g.createPointGeometry(z,T,A,null,C,R,j,null),M=y.createStageObject(this._context,t,H,O,L);if(null==M)return null;const F=(t,n,r,a,l,s)=>{const o=b()||m.placement.elevationOffset,c=this.setGraphicElevationContext(e,n,o);return i.perObjectElevationAligner(t,c,r,a,l,s)},V=new c.Graphics3DObject3DGraphicLayer(this,M.object,[H],null==u?[z]:null,G,F,O);V.alignedSampledElevation=M.sampledElevation,V.needsElevationUpdates=s.needsElevationUpdates2D(O.mode)||"absolute-height"===O.mode,V.getScreenSize=(e=a.create())=>(e[0]=w?w.displayWidth:m.displaySize[0],e[1]=w?w.displayHeight:m.displaySize[1],e);const W=new h.Graphics3DObjectMetadata(m.placement.elevationOffset,l);return V.metadata=W,y.extendPointGraphicElevationContext(V,t,this._context.elevationProvider),V}}function S(e,t,n){e&&e.forEach((e=>{const r=t(e);null!=r&&n(r,e.graphic)}))}function E(e,t){if("baseline"===t.verticalPlacement){const n=d.horizontalPlacementToAnchorX[t.horizontalPlacement],r=null!=e?e.baselineAnchorY:0;return a.fromValues(n,r)}const n=d.anchorFromPlacements(t.horizontalPlacement,t.verticalPlacement);return d.namedAnchorToHUDMaterialAnchorPos[n]}const L={mode:"relative-to-ground",offset:0};e.Graphics3DTextSymbolLayer=O,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
