/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/asyncUtils","../../../../core/Logger","../../../../core/MapUtils","../../../../core/maybe","../../../../core/promiseUtils","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec2f64","../../../../layers/graphics/hydratedFeatures","../../../../layers/support/labelFormatUtils","../../../../symbols/callouts/calloutUtils","./enums","./Graphics3DCalloutSymbolLayerFactory","./Graphics3DLineCalloutSymbolLayer","./graphicSymbolUtils","./LabelParameters","./labelPlacement","./placementUtils","../../webgl-engine/lib/MaterialCollection","../../webgl-engine/lib/TextRenderer","../../webgl-engine/lib/TextRenderParameters","../../webgl-engine/lib/TextTextureAtlas","../../webgl-engine/lib/WebGLLayer","../../../support/Scheduler"],(function(e,t,s,l,i,a,r,o,n,c,h,b,d,u,y,g,p,x,C,_,f,L,m,v,T,A,G,w,D,I,P){"use strict";class R{constructor(e,t){this.labelingContext=e,this.graphics3DGraphic=t,this.hasGraphics3DResources=!1,this.visible=!1,this.addedToTextureAtlas=!1,this.textInitialized=!1,this.textRenderers=new Array,this.textLabelPlacements=new Array}}class S{constructor(e,t,s,l,i){this.labelClass=e,this.graphics3DSymbol=t,this.graphics3DCalloutSymbolLayer=s,this.textRenderParameters=l,this.labelFunction=i,this.calloutSymbolLayerIndex=0}}class V{constructor(e,t,s,l,i,a,r,o){this.layer=t,this.graphics3DCore=s,this.scaleVisibility=l,this.emptySymbolLabelSupported=i,this.elevationInfoOverride=a,this.disablePlacement=r,this.active=o,this.labelClassAbortController=new AbortController,this.labelClassContexts=new Array,this.graphics=new Map,this.labelsToInitialize=new Map,this.stageLayer=new I.WebGLLayer(e,{pickable:!0,disableOctree:!0},t.uid)}destroy(){this.stageLayer.destroy()}}function E(e){return!!e.labelClassPromise&&!!e.labelClassAbortController}function F(e){return!e||0===e.length}function O(e){return!0===e.labelsVisible&&!!e.labelingInfo?.some((e=>!!e.symbol))}e.Labeler=class extends s{constructor(e){super(e),this._dirty=!1,this._labels=new Map,this._labelingContexts=new Array}setup(){this.dispose(),this.addHandles([n.watch((()=>this.view.state?.camera),(()=>this.setDirty())),n.watch((()=>this.view.state?.rasterPixelRatio),(()=>this._resetAllLabels())),this.view.resourceController.scheduler.registerTask(P.TaskPriority.LABELER,this)]),this._textTextureAtlas=new D.TextTextureAtlas({view:this.view}),this._hudMaterialCollection=new A.MaterialCollection(this.view._stage),this._calloutMaterialCollection=new A.MaterialCollection(this.view._stage)}dispose(){this.removeAllHandles(),this._textTextureAtlas=r.disposeMaybe(this._textTextureAtlas),this._hudMaterialCollection=r.disposeMaybe(this._hudMaterialCollection),this._calloutMaterialCollection=r.disposeMaybe(this._calloutMaterialCollection),this._labelingContexts.length=0,this._labels.clear()}destroy(){this.dispose(),M.graphic=null,M.renderingInfo=null,M.layer=null}_activateLabelingContext(e){e.graphics.forEach(((t,s)=>{const l=new R(e,t);this._labels.set(s,l),e.labelsToInitialize.set(s,l),t.setVisibilityFlag(C.VisibilityGroup.LABEL,C.VisibilityFlag.USER,!0)})),e.active=!0}_deactivateLabelingContext(e){e.graphics.forEach(((e,t)=>{e.setVisibilityFlag(C.VisibilityGroup.LABEL,C.VisibilityFlag.USER,!1),this.setLabelGraphicVisibility(e,!1),this._labels.delete(t)})),e.active=!1}_addLabelTextureToAtlas(e){for(const t of e.graphics3DGraphic.labelLayers){if(!t._labelClass)continue;const s=e.textRenderers[t._labelIndex];s&&(this._textTextureAtlas.addTextTexture(s,t.stageObject),e.addedToTextureAtlas=!0)}}_removeLabelTextureFromAtlas(e){for(const t of e.graphics3DGraphic.labelLayers){if(!t._labelClass)continue;const s=e.textRenderers[t._labelIndex];null!=s&&(this._textTextureAtlas.removeTextTexture(s,t.stageObject),e.addedToTextureAtlas=!1)}}get running(){return this.view.ready&&(this._dirty||this.deconflictor.running)}runTask(e){return this._updateLabels(e),!this._dirty&&this.deconflictor.running&&this.deconflictor.runTask(e),P.Task.YIELD}_updateLabels(e){if(this._dirty){this._dirty=!1;for(const t of this._labelingContexts)if(t.active)if(E(t))this._dirty=!0;else if(F(t.labelClassContexts)){if(null===t.labelClassContexts){this._deactivateLabelingContext(t);continue}this._createLabelClassContext(t),this._dirty=!0}else a.someMap(t.labelsToInitialize,((s,l)=>(this._ensureGraphics3DResources(s)&&(this._labels.set(l,s),this.deconflictor.setDirty(),e.madeProgress()),(s.visible&&s.textInitialized||!s.visible&&s.hasGraphics3DResources)&&(t.labelsToInitialize.delete(l),e.madeProgress()),e.done)))&&(this._dirty=!0);this._dirty||this.notifyChange("updating")}}async _createLabelClassContextAsync(e){const t=e.labelClassAbortController?.signal;e.layer.when&&await e.layer.when(),o.throwIfAborted(t),e.scaleVisibility&&e.scaleVisibility.updateScaleRangeActive();const s=e.graphics3DCore,a=s.layer,r=a.labelingInfo?.filter((e=>!!e.symbol));if(!r||0===r.length)return;let n=!1;await l.forEach(r,(async(a,r)=>{const c=a.symbol,h=L.getGraphics3DSymbol(s.getOrCreateGraphics3DSymbol(c));if(null==h)return void i.getLogger(this).error("Failed to create Graphics3DSymbol for label");await h.load(),o.throwIfAborted(t);let b=null;x.hasCalloutSupport(c)&&c.hasVisibleCallout()&&(b=_.make(c,s.symbolCreationContext),await b.load(),o.throwIfAborted(t));const d=await l.result(p.createLabelFunction(a,e.layer.fieldsIndex,this.view.spatialReference));if(o.throwIfAborted(t),!0===d.ok){const s=await this._createTextRenderParameters(h.symbol);o.throwIfAborted(t),e.labelClassContexts[r]=new S(a,h,b,s,d.value)}else i.getLogger(this).error(`Label expression failed to evaluate: ${d.error}`),n=!0})),o.throwIfAborted(t)}async _createLabelClassContext(e){return null==e.labelClassPromise&&(e.labelClassPromise=this._createLabelClassContextAsync(e).catch((t=>{if(o.isAbortError(t))throw t;e.labelClassContexts.length=0})).then((()=>{e.labelClassAbortController=null,this.notifyChange("updating")})).catch((()=>{})),this.notifyChange("updating")),e.labelClassPromise}async _createTextRenderParameters(e){const t=e.symbolLayers.at(0);return"text"!==t?.type?null:w.TextRenderParameters.fromSymbol(t,this.view.state.rasterPixelRatio)}_destroyLabelClassContext(e){for(const s of e.labelClassContexts)--s.graphics3DSymbol.referenced;const t=e.labelClassAbortController;e.labelClassAbortController=new AbortController,r.abortMaybe(t),e.labelClassContexts.length=0,e.labelClassPromise=null,this.notifyChange("updating")}_createTextSymbolGraphic(e,t,s,l,i,a){const r=new m.LabelParameters(s,T.horizontalPlacementFromAnchor(s.anchor),T.verticalPlacementFromAnchor(s.anchor),e.text,y.fromValues(e.displayWidth,e.displayHeight));return M.graphic=t,M.renderingInfo=null,M.layer=l,i.createLabel(M,r,this._hudMaterialCollection,this._textTextureAtlas,(()=>{const e=v.getLabelPlacement(a);return e?e.elevationOffset:null}))}_createLineCalloutGraphic(e,t,s,l,i){M.graphic=e,M.layer=i;const a=l.screenOffset[0];return M.renderingInfo=new f.LineCalloutSymbolLayerRenderingInfo(null,t,l.translation,l.centerOffset,a,l.centerOffsetUnits,l.elevationOffset,this._calloutMaterialCollection),s.createGraphics3DGraphic(M)}_ensureGraphics3DResources(e){if(e.hasGraphics3DResources)return!1;const t=e.graphics3DGraphic;if(t.destroyed)return!1;this._ensureTextTextureResources(e);const s=e.labelingContext,l=s.labelClassContexts;if(F(l)||!s.emptySymbolLabelSupported&&0===t.layers.length)return!1;let i=!1;const a=t.graphic,r=s.layer,o=O(s.layer);for(let n=0;n<l.length;n++){const c=e.textRenderers[n],h=e.textLabelPlacements[n];if(null==c||null==h)continue;const b=l[n],d=b.graphics3DSymbol,u=d.symbol&&"label-3d"===d.symbol.type?d.symbol:null,y=d.symbolLayers[0];if(!y)continue;y.setElevationInfoOverride(s.elevationInfoOverride);const g=new v.LabelInfo(t,u,b.labelClass),p=this._createTextSymbolGraphic(c,a,h,r,y,g);if(null==p)return!1;p._labelClass=b.labelClass,p._labelIndex=n,t.addLabelGraphic(p,s.stageLayer),t.deconflictionPriority=b.textRenderParameters?.definition.size??0,t.setVisibilityFlag(C.VisibilityGroup.LABEL,C.VisibilityFlag.USER,o),t.setVisibilityFlag(C.VisibilityGroup.LABEL,C.VisibilityFlag.SCALE_RANGE,!0),t.setVisibilityFlag(C.VisibilityGroup.LABEL,C.VisibilityFlag.DECONFLICTION,!1),i=!0;const x=b.graphics3DCalloutSymbolLayer;if(x&&h.hasLabelVerticalOffset){x.setElevationInfoOverride(s.elevationInfoOverride);const e=this._createLineCalloutGraphic(a,u,x,h,r);null!=e&&(b.calloutSymbolLayerIndex=t.labelLayers.length,t.addLabelGraphic(e,s.stageLayer))}break}return s.scaleVisibility&&i&&s.scaleVisibility.updateGraphicLabelScaleVisibility(t),e.hasGraphics3DResources=!0,!0}_destroyGraphics3DResources(e){const t=e.labelingContext.labelClassContexts;for(const s of e.graphics3DGraphic.labelLayers){if(null==s._labelClass)continue;const e=t[s._labelIndex].graphics3DSymbol.symbolLayers[0];e?.onRemoveGraphic(s)}e.graphics3DGraphic.deconflictionPriority=0,e.graphics3DGraphic.clearLabelGraphics(),e.hasGraphics3DResources=!1}_ensureTextTextureResources(e){if(e.textInitialized)return;const t=e.labelingContext,s=t.labelClassContexts;if(F(s))return;const l=e.graphics3DGraphic.graphic;for(let a=0;a<s.length;a++){const r=s[a];if(e.textRenderers[a]=null,e.textLabelPlacements[a]=null,null==r?.textRenderParameters)continue;const o=r.labelFunction;let n;if("arcade"===o.type)try{const e=o.needsHydrationToEvaluate()?g.hydrateGraphic(l,t.layer):l;n=o.evaluate(e)}catch(i){n=null}else n=o.evaluate(l);if(null==n||""===n||/^\s+$/.test(n))continue;const c=r.graphics3DSymbol,h="label-3d"===c.symbol?.type?c.symbol:null;if(!c.symbolLayers[0])continue;const b=e.graphics3DGraphic,d=r.labelClass,u=t.disablePlacement,y=v.getLabelPlacement({graphics3DGraphic:b,labelSymbol:h,labelClass:d,disablePlacement:u});if(null==y)continue;const p=T.horizontalPlacementFromAnchor(y.anchor),x=T.textRenderAlignmentFromHorizontalPlacement(p);e.textRenderers[a]=new G.TextRenderer(n,x,r.textRenderParameters,D.TextTextureAtlas.maxSize),e.textLabelPlacements[a]=y}e.textInitialized=!0}_destroyTextTextureResources(e){e.textInitialized=!1,e.textRenderers.length=0,e.textLabelPlacements.length=0}_addGraphic(e,t){const s=t.graphic.uid;if(e.graphics.set(s,t),e.active){const l=new R(e,t);this._labels.set(s,l),e.labelsToInitialize.set(s,l)}this.setDirty(),this.deconflictor.setDirty()}_removeGraphic(e,t){const s=t.graphic.uid,l=this._labels.get(s);e.graphics.delete(s),l&&(this._destroyGraphic(l,s),e.labelsToInitialize.delete(s),this.setDirty(),this.deconflictor.setDirty())}_destroyGraphic(e,t){this._labels.delete(t),e.addedToTextureAtlas&&this._removeLabelTextureFromAtlas(e),this._destroyTextTextureResources(e),e.hasGraphics3DResources&&this._destroyGraphics3DResources(e)}async _labelingInfoChange(e,t){if(!t)return this._visibilityInfoChange(e),this._resetLabels(e),this._createLabelClassContext(e);for(const s of t){const t=e.graphics.get(s);t&&(this._removeGraphic(e,t),this._addGraphic(e,t))}}_globalPropertyChanged(e,t){for(const s of t.labelClassContexts){const l=new Map;t.graphics.forEach((e=>l.set(e.graphic.uid,e)));const i=e=>e.labelLayers[0];if(s.graphics3DSymbol.symbolLayers[0].globalPropertyChanged(e,l,i),s.graphics3DCalloutSymbolLayer){const t=e=>e.labelLayers[s.calloutSymbolLayerIndex];s.graphics3DCalloutSymbolLayer.globalPropertyChanged(e,l,t)}}}_visibilityInfoChange(e){const t=O(e.layer);t&&!e.active&&this._activateLabelingContext(e),!t&&e.active&&this._deactivateLabelingContext(e),this.setDirty()}_resetAllLabels(){for(const e of this._labelingContexts)this._resetLabels(e)}_resetLabels(e){e.graphics.forEach(((t,s)=>{const l=this._labels.get(s);l&&(this._destroyGraphic(l,s),l.visible=!1,e.labelsToInitialize.set(s,l))})),this._destroyLabelClassContext(e),this.setDirty(),this.deconflictor.setDirty()}_findLabelingContext(e){for(const t of this._labelingContexts)if(t.graphics3DCore===e)return t;return null}addGraphicsOwner(e,t,s){const l=s&&s.emptySymbolLabelSupported||!1,i=s?.elevationInfoOverride||null,a=s?.disablePlacement||null;if(this._findLabelingContext(e))return;const r=e.layer,o=new V(this.view._stage,r,e,t,l,i,a,O(r));return this._labelingContexts.push(o),this.setDirty(),{addGraphic:e=>this._addGraphic(o,e),removeGraphic:e=>this._removeGraphic(o,e),featureReductionChange:()=>{},layerLabelsEnabled:()=>O(o.layer),labelingInfoChange:e=>this._labelingInfoChange(o,e),elevationInfoChange:()=>this._globalPropertyChanged("elevationInfo",o),slicePlaneEnabledChange:()=>this._globalPropertyChanged("slicePlaneEnabled",o),visibilityInfoChange:()=>this._visibilityInfoChange(o),reset:()=>this._resetLabels(o),clear:()=>{}}}removeGraphicsOwner(e){const t=this._findLabelingContext(e);if(!t)return;const s=this._labelingContexts.indexOf(t);this._labelingContexts.splice(s,1),t.graphics.forEach((e=>this._removeGraphic(t,e))),t.destroy(),this.setDirty()}setLabelGraphicVisibility(e,t){const s=e.graphic.uid,l=this._labels.get(s);l&&l.visible!==t&&(t&&!l.addedToTextureAtlas?(this._addLabelTextureToAtlas(l),l.textInitialized||l.labelingContext.labelsToInitialize.set(s,l)):!t&&l.addedToTextureAtlas&&this._removeLabelTextureFromAtlas(l),l.visible=t,this.setDirty())}setDirty(){!this._dirty&&this._labelingContexts.length>0&&(this._dirty=!0,this.notifyChange("updating"))}get updating(){return this._dirty||this._textTextureAtlas?.updating||this.deconflictor.updating||this._labelingContexts.some((e=>E(e)))}get updatingProgress(){if(!this.updating||!this._textTextureAtlas)return 1;const e=this._labelingContexts.length>0?this._labelingContexts.reduce(((e,t)=>e+(E(t)?0:1)),0)/this._labelingContexts.length:1;return(this._dirty?0:.3)+(this._textTextureAtlas.updating?0:.1)+.1*e+.5*this.deconflictor.updatingProgress}get test(){return{textTextureAtlas:this._textTextureAtlas,resetAllLabels:()=>this._resetAllLabels()}}},t.__decorate([c.property({constructOnly:!0})],e.Labeler.prototype,"view",void 0),t.__decorate([c.property({constructOnly:!0})],e.Labeler.prototype,"deconflictor",void 0),t.__decorate([c.property()],e.Labeler.prototype,"_textTextureAtlas",void 0),t.__decorate([c.property({type:Boolean,readOnly:!0})],e.Labeler.prototype,"updating",null),e.Labeler=t.__decorate([u.subclass("esri.views.3d.layers.graphics.Labeler")],e.Labeler);const M=new f.LineCalloutCreationContext(null,null,null);e.areLabelsVisible=O,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
