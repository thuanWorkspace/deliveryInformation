/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../webgl-engine/materials/DefaultMaterial"],(function(a,e){"use strict";class t{constructor(){this._fastTransformOriginalMaterials=new Map,this._fastTransformClonedMaterials=new Map,this._graphicReferenceCount=0}enable(a,t,r){a.enableFastTransformUpdates((a=>{if(this._graphicReferenceCount<=1){if(this._fastTransformOriginalMaterials.has(a))return a;const e=t.byMaterial(a);return this._fastTransformOriginalMaterials.set(a,e),t.delete(a),a}const s=new e.DefaultMaterial(a.parameters);return r.stage.add(s),this._fastTransformClonedMaterials.set(s,a),s}),r.localOriginFactory)}disable(a,e,t){const r=new Set,s=new Set;a.disableFastTransformUpdates((a=>{if(!this._fastTransformClonedMaterials.has(a)){const t=a,i=this._fastTransformOriginalMaterials.get(t);return e.has(i.uid)?(r.add(t),e.byUid(i.uid).material):(s.add(t),i.material)}const i=a,n=this._fastTransformClonedMaterials.get(i);return this._fastTransformClonedMaterials.delete(i),t.stage.remove(i),n}));for(const i of r)this._fastTransformOriginalMaterials.delete(i),t.stage.remove(i);for(const i of s){const a=this._fastTransformOriginalMaterials.get(i);this._fastTransformOriginalMaterials.delete(i),e.set(a.uid,a)}}onAddGraphic(){this._graphicReferenceCount++}onRemoveGraphic(a,e,t){this._graphicReferenceCount--,this.disable(a,e,t)}forEachMaterialInfo(a){this._fastTransformOriginalMaterials.forEach(a)}forEachClonedMaterial(a){this._fastTransformClonedMaterials.forEach(a)}destroy(a){a.removeMany(Array.from(this._fastTransformClonedMaterials.keys())),a.removeMany(Array.from(this._fastTransformOriginalMaterials.values(),(({material:a})=>a))),this._fastTransformClonedMaterials.clear(),this._fastTransformOriginalMaterials.clear()}}class r{constructor(){this._byUid=new Map,this._byMaterial=new Map}get materials(){return Array.from(this._byUid.values(),(a=>a.material))}byUid(a){return this._byUid.get(a)}byMaterial(a){return this._byMaterial.get(a)}set(a,e){this._byUid.set(a,e),this._byMaterial.set(e.material,e)}delete(a){const e=this._byMaterial.get(a)?.uid;e&&(this._byUid.delete(e),this._byMaterial.delete(a))}has(a){return this._byUid.has(a)}forEachMaterialInfo(a){this._byUid.forEach(a)}clear(){this._byUid.clear(),this._byMaterial.clear()}}a.MaterialInfoCache=r,a.MeshFastUpdateProcessor=t,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})}));
