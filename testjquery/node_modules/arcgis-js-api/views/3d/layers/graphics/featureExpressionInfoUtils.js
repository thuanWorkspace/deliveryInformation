/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/Logger","../../../../core/promiseUtils","../../../../layers/graphics/hydratedFeatures","../../../../support/arcadeOnDemand"],(function(e,t,r,n,c){"use strict";const o=t.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function a(e){return{cachedResult:e.cachedResult,arcade:e.arcade?{func:e.arcade.func,context:e.arcade.modules.arcadeUtils.createExecContext(null,{sr:e.arcade.context.spatialReference}),modules:e.arcade.modules}:null}}function u(e){const t=e?.expression;if("string"==typeof t){const e=g(t);if(null!=e)return{cachedResult:e}}return null}async function s(e,t,n,o){const a=e?.expression;if("string"!=typeof a)return null;const u=g(a);if(null!=u)return{cachedResult:u};const s=await c.loadArcade();r.throwIfAborted(n);const l=s.arcadeUtils,i=l.createSyntaxTree(a);return l.dependsOnView(i)?(null!=o&&o.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:l.createFunction(i),context:l.createExecContext(null,{sr:t}),modules:s}}}function l(e,t,r){return e.arcadeUtils.createFeature(t.attributes,t.geometry,r)}function i(e,t){if(null!=e&&!x(e)){if(!t||!e.arcade)return void o.errorOncePerTick("Arcade support required but not provided");const r=t;r._geometry&&(r._geometry=n.hydrateGeometry(r._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,t)}}function d(e){if(null!=e){if(x(e))return e.cachedResult;const t=e.arcade;let r=t?.modules.arcadeUtils.executeFunction(t.func,t.context);return"number"!=typeof r&&(e.cachedResult=0,r=0),r}return 0}function f(e,t=!1){let r=e?.featureExpressionInfo;const n=r?.expression;return t||"0"===n||(r=null),r??null}const p={cachedResult:0};function x(e){return null!=e.cachedResult}function g(e){return"0"===e?0:null}e.clone=a,e.createContext=s,e.createContextWithoutExpressionSupport=u,e.createFeature=l,e.execute=d,e.extractExpressionInfo=f,e.setContextFeature=i,e.zeroContext=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
