/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/ellipsoidUtils","../../support/FrustumExtentIntersection","../../../support/Scheduler"],(function(e,t,i,s,r,n,a,o,c,u,l,h){"use strict";const p=1.2;e.Graphics3DFrustumVisibility=class extends i{constructor(e){super(e),this.suspended=!1,this._extent=null,this._extentIntersectionDirty=!0,this._isVisibleBelowSurfaceInternal=!1,this.graphicsCoreOwner=null,this.updating=!0}initialize(){const{graphicsCoreOwner:e}=this;this._extentIntersection=new l.FrustumExtentIntersection({renderCoordsHelper:e.view.renderCoordsHelper});const t=e.view,i=t.basemapTerrain,r=t.resourceController.scheduler;this.addHandles([t.on("resize",(()=>this._viewChange())),s.watch((()=>t.state.camera),(()=>this._viewChange()),s.sync),r.registerTask(h.TaskPriority.FRUSTUM_VISIBILITY,this),s.watch((()=>i.visibleElevationBounds),(()=>this._elevationBoundsChange()))]),"local"===t.viewingMode?this._isVisibleBelowSurface=!0:this.addHandles([s.watch((()=>[i.baseOpacity,i.wireframe,t.map?.ground?.navigationConstraint?.type]),(()=>this._updateIsVisibleBelowSurface()),s.initial)])}destroy(){this._set("graphicsCoreOwner",null),this._extent=null,this._extentIntersection=null}_setDirty(){this.updating||this._set("updating",!0)}setExtent(e){this._extent=e,this._extentIntersectionDirty=!0,this._setDirty()}_viewChange(){this._setDirty()}_elevationBoundsChange(){this._setDirty(),this._extentIntersectionDirty=!0}set _isVisibleBelowSurface(e){this._isVisibleBelowSurfaceInternal=e,this._setDirty(),this._extentIntersectionDirty=!0}_updateIsVisibleBelowSurface(){const e=this.graphicsCoreOwner.view,t=e.basemapTerrain,i="local"===e.viewingMode,s="none"===e.map.ground?.navigationConstraint?.type;this._isVisibleBelowSurface=i||!t.opaque||s}_updateExtentIntersection(){if(!this._extentIntersectionDirty)return;this._extentIntersectionDirty=!1;const e=this.graphicsCoreOwner.view;let t;if(this._isVisibleBelowSurfaceInternal)t=-.3*u.getReferenceEllipsoid(e.spatialReference).radius;else{const{min:i,max:s}=e.basemapTerrain.visibleElevationBounds;t=i-Math.max(1,(s-i)*(p-1))}this._extentIntersection.update(this._extent,e.spatialReference,t)}get running(){return this.updating}runTask(e){if(this._set("updating",!1),!this._extent)return this._set("suspended",!1),h.Task.YIELD;this._updateExtentIntersection();const t=this.graphicsCoreOwner.view.frustum,i=u.getReferenceEllipsoid(this.graphicsCoreOwner.view.spatialReference).radius;this._set("suspended",!this._extentIntersection.isVisibleInFrustum(t,i)),e.madeProgress()}},t.__decorate([r.property({readOnly:!0})],e.Graphics3DFrustumVisibility.prototype,"suspended",void 0),t.__decorate([r.property({constructOnly:!0})],e.Graphics3DFrustumVisibility.prototype,"graphicsCoreOwner",void 0),t.__decorate([r.property({readOnly:!0})],e.Graphics3DFrustumVisibility.prototype,"updating",void 0),e.Graphics3DFrustumVisibility=t.__decorate([c.subclass("esri.views.3d.layers.graphics.Graphics3DFrustumVisibility")],e.Graphics3DFrustumVisibility),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
