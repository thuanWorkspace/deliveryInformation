/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../geometry","../../../../core/Accessor","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/Extent","../../../../layers/graphics/data/QueryEngine","../../../../layers/support/FieldsIndex","../../../../rest/support/FeatureSet","../../../../rest/support/Query","../../../../geometry/support/typeUtils"],(function(e,t,r,n,s,a,u,o,i,y,c,l,p,d,h){"use strict";const Q=c.QueryEngine;e.QueryEngine=class extends n{get layer(){return this.context.layer}get spatialReference(){return this.context.spatialReference}get _queryGeometryType(){switch(this.layer.geometryType){case"multipoint":case"point":case"polygon":case"polyline":return this.layer.geometryType;case"mesh":return"polygon";default:return}}get defaultQueryJSON(){return new d({outSpatialReference:this.spatialReference}).toJSON()}get _dataQueryEngine(){return this._ensureDataQueryEngine()}constructor(e){super(e),this._dataQueryEngineInstance=null}destroy(){this.clear()}clear(){return!!this._dataQueryEngineInstance&&(this._dataQueryEngineInstance.destroy(),this._dataQueryEngineInstance=null,!0)}async executeQueryForIdSet(e,t,r){return this._dataQueryEngine.executeQueryForIdSet(this._ensureQueryJSON(e,t),r)}async executeQueryForCount(e,t){return this._dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:r,extent:n}=await this._dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:r,extent:y.fromJSON(n)}}async executeQueryForIds(e,t){return this._dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQueryForLatestObservations(e,t){const r=await this._dataQueryEngine.executeQueryForLatestObservations(this._ensureQueryJSON(e),t),n=p.fromJSON(r);return n.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),n}async executeQuery(e,t){const r=await this._dataQueryEngine.executeQuery(this._ensureQueryJSON(e),t),n=p.fromJSON(r);return n.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),n}_ensureQueryJSON(e,t){let r=this.defaultQueryJSON;if(null!=e&&("outSpatialReference"in e&&!e.outSpatialReference&&(e.outSpatialReference=this.spatialReference),r=e.toJSON()),null!=t){const e=t.geometries.map((e=>e.toJSON())).reduce(((e,t)=>(e.rings=e.rings.concat(t.rings),e)));r={...r,sceneFilter:{...t,geometry:e}}}return r}_ensureDataQueryEngine(){if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const e="timeInfo"in this.layer&&this.layer.timeInfo?.toJSON()||null,t=this.layer.objectIdField,r=h.featureGeometryTypeKebabDictionary.toJSON(this._queryGeometryType),n=this.layer.fieldsIndex?.toJSON()||new l([]),s=this.priority,a=this.spatialReference.toJSON(),{hasZ:u,hasM:o,featureStore:i,scheduler:y}=this.context;return this._dataQueryEngineInstance=new Q({hasZ:u,hasM:o,geometryType:r,fieldsIndex:n,timeInfo:e,spatialReference:a,objectIdField:t,featureStore:i,scheduler:y,priority:s}),this._dataQueryEngineInstance}},t.__decorate([s.property({constructOnly:!0})],e.QueryEngine.prototype,"context",void 0),t.__decorate([s.property({constructOnly:!0})],e.QueryEngine.prototype,"priority",void 0),t.__decorate([s.property()],e.QueryEngine.prototype,"layer",null),t.__decorate([s.property()],e.QueryEngine.prototype,"spatialReference",null),t.__decorate([s.property()],e.QueryEngine.prototype,"_queryGeometryType",null),t.__decorate([s.property()],e.QueryEngine.prototype,"defaultQueryJSON",null),e.QueryEngine=t.__decorate([i.subclass("esri.views.3d.layers.graphics.QueryEngine")],e.QueryEngine),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
