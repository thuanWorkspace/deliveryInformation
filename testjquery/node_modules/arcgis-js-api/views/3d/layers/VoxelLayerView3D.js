/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/Logger","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingBox","../../../geometry/support/spatialReferenceUtils","./LayerView3D","./VoxelWasm","./support/PopupSceneLayerView","../../layers/LayerView","../../../geometry/SpatialReference"],(function(e,s,t,a,i,r,o,l,n,h,c,d,u,m,y,p,V,b,w,_){"use strict";var g;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"}(g||(g={}));const W=d.create(),S=d.create();let v=class extends(b.PopupSceneLayerView(p.LayerView3D(w))){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){return this.layer.parsedUrl?.path??""}get wasmLayerId(){return this._wasmLayerId}initialize(){if(this._dbgFlags.add(g.Error),"local"!==this.view.viewingMode)throw new t("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!!!this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat?.textureFloat)throw new t("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!y.equals(e,this.view.spatialReference))throw new t("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const s=this.layer.currentVariableId,a=this.layer.getVolume(s),r=this.layer.getVariable(s);if(null!=a&&null!=r){const e=a.dimensions[0],s=a.dimensions[1],t=a.zDimension;if(t>1){const i=a.dimensions[t],o=e.size*s.size*i.size;let l=1;switch(r.renderingFormat.type){case"Int16":case"UInt16":l=2;break;case"Int32":case"UInt32":case"Float32":l=4}this._futureMemory=l*o}}const o=V.addLayerViewToWasm(this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=i.watch((()=>this.suspended),(e=>{const s=V.getVoxelWasm(this.view);s&&s.setEnabled(this,!e)}),i.initial),this.addHandles([i.watch((()=>this.layer.renderMode),(e=>this._pushRenderModeToWasm(e))),i.watch((()=>this.layer.currentVariableId),(e=>this._pushCurrentVariableIdToWasm(e))),i.watch((()=>this.layer.getSections()),(e=>this._pushSectionsToWasm(e))),i.watch((()=>this.layer.getVariableStyles()),(e=>this._pushVariableStylesToWasm(e))),i.watch((()=>this.layer.getVolumeStyles()),(e=>this._pushVolumeStylesToWasm(e))),i.watch((()=>this.layer.enableDynamicSections),(e=>this._pushEnableDynamicSectionsToWasm(e))),i.watch((()=>this.layer.enableIsosurfaces),(e=>this._pushEnableIsosurfacesToWasm(e))),i.watch((()=>this.layer.enableSections),(e=>this._pushEnableSectionsToWasm(e))),i.watch((()=>this.layer.enableSlices),(e=>this._pushEnableSlicesToWasm(e))),i.watch((()=>this.slicePlaneEnabled),(e=>this._pushAnalysisSliceToWasm(e,this.view.slicePlane))),i.watch((()=>this.view.slicePlane),(e=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,e)))])})).catch((e=>{if(V.removeLayerViewFromWasm(this),this._wasmLayerId=-1,-1===e)throw new t("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===e)throw new t("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(o)}destroy(){V.removeLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const e=V.getVoxelWasm(this.view);return!(this._wasmLayerId<0||null==e)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}whenGraphicBounds(e,s){const t=e.attributes["Voxel.WorldPosition"];if(t){const e=m.empty(),s=JSON.parse(t);if(u.projectVectorToVector(s,this.view.renderSpatialReference,S,this.view.spatialReference||_.WGS84))return m.expandWithVec3(e,S),Promise.resolve({boundingBox:e,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){const e=V.getVoxelWasm(this.view);e?.captureFrustum()}toggleFullVolumeExtentDraw(){const e=V.getVoxelWasm(this.view);e?.toggleFullVolumeExtentDraw(this)}getLayerTimes(){const e=V.getVoxelWasm(this.view);return e?.getLayerTimes(this)??[]}getCurrentLayerTimeIndex(){const e=V.getVoxelWasm(this.view);return e?.getCurrentLayerTimeIndex(this)??0}_pushRenderModeToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setRenderMode(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setStaticSections(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(s?"have WASM":"don't have WASM!!!")),s?.setCurrentVariable(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setVariableStyles(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(e,s){const t=null!=s?s:this.layer.enableSlices;for(let a=0;a<e.length;++a){const s=e[a];for(const e of s.slices)e.enabled=e.enabled&&t}}_pushVolumeStylesToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s&&(this._accountForEnableSlices(e,null),s.setVolumeStyles(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,s){const t=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(t?"have WASM":"don't have WASM!!!"));let a=!1;if(t){if(s){const i=s.origin;c.cross(W,s.basis1,s.basis2),c.normalize(W,W),a=t.setAnalysisSlice(this,e,i,W)}else c.set(W,0,0,1),a=t.setAnalysisSlice(this,!1,W,W);a||this._dbg(g.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableDynamicSections(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(e){const s=V.getVoxelWasm(this.view);if(this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s){const t=this.layer.getVolumeStyles();this._accountForEnableSlices(t,e),s.setVolumeStyles(this,t)||this._dbg(g.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableIsosurfaces(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(e){const s=V.getVoxelWasm(this.view);this._dbg(g.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableSections(this,e)||this._dbg(g.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}async whenGraphicAttributes(e,s){return e}_dbg(e,s){this._dbgFlags.has(e)&&(e===g.Error?a.getLogger(this).error(s):a.getLogger(this).warn(s))}};e.__decorate([r.property()],v.prototype,"layer",void 0),e.__decorate([r.property()],v.prototype,"baseUrl",null),e.__decorate([r.property({type:Boolean})],v.prototype,"slicePlaneEnabled",void 0),v=e.__decorate([h.subclass("esri.views.3d.layers.VoxelLayerView3D")],v);return v}));
