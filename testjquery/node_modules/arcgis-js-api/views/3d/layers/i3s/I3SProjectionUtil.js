/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/mat4f64","../../../../chunks/vec3f64","../../../../geometry/ellipsoidUtils","../../../../geometry/projection/computeTranslationToOriginAndRotation"],(function(t,o,n,e,a){"use strict";function i(t,n,e,i){const r=s(t,n,e),c=o.create();return a.computeTranslationToOriginAndRotation(e,r,c,i),c}const r=1,c=5-r;function s(t,o,a){const i=n.create(),s=t[3],u=2**(Math.ceil(Math.log(s)*Math.LOG2E/c)*c+r);if(a.isGeographic){const o=u/e.getReferenceEllipsoid(a).radius*180/Math.PI,n=Math.round(t[1]/o),r=Math.max(-90,Math.min(90,n*o)),c=o/Math.cos((Math.abs(r)-o/2)/180*Math.PI),s=Math.round(t[0]/c)*c;i[0]=s,i[1]=r}else{const o=Math.round(t[0]/u),n=Math.round(t[1]/u);i[0]=o*u,i[1]=n*u}const h=t[2]+o,l=Math.round(h/u);return i[2]=l*u,i}t.computeGlobalTransformation=i,t.getLocalOrigin=s,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
