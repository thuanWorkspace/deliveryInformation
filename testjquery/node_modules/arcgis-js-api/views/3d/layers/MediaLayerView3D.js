/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/handleUtils","../../../core/perspectiveUtils","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../chunks/mat3f64","../../../geometry/support/aaBoundingRect","../../../layers/support/MediaElementView","./interfaces","./LayerView3D","../terrain/OverlayRenderer","../webgl-engine/lib/Attribute","../webgl-engine/lib/Geometry","../webgl-engine/lib/ModelDirtyTypes","../webgl-engine/lib/RenderGeometry","../webgl-engine/lib/Texture","../webgl-engine/lib/UpdatePolicy","../webgl-engine/lib/VertexAttribute","../webgl-engine/materials/ImageMaterial","../../layers/LayerView","../../webgl/enums"],(function(e,t,r,n,i,a,s,d,o,l,c,u,h,p,m,y,_,g,E,D,w,b,v,R,A,f,T){"use strict";let x=class extends(y.LayerView3D(f)){constructor(){super(...arguments),this.type="media-3d",this.drapeSourceType=m.DrapeSourceType.RasterImage,this.updatePolicy=v.UpdatePolicy.ASYNC,this._uidToElement=new Map,this._renderedElements=new Map,this._lastDrapingExtent=null,this._update=i.debounce((async(e,t,r)=>{const n=await this._collectMediaElements(e,t,r);this._synchronizeRenderElements(n)}),0)}initialize(){this._renderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this);const e=()=>this._updateWithLastDrapingExtent();this.addHandles([r.makeHandle((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))),a.on((()=>this.layer.effectiveSource),"change",e),a.on((()=>this.layer.effectiveSource),"refresh",e)]),this._updatingHandles.add((()=>this.suspended),e)}setDrapingExtent(e,t){this._lastDrapingExtent={overlays:e,spatialReference:t},this._updateWithLastDrapingExtent()}getHit(e){const t=this._uidToElement.get(e);return t?{type:"media",element:t,layer:this.layer}:null}_updateWithLastDrapingExtent(){if(null==this._lastDrapingExtent||this.suspended)return void(this._renderer&&this._synchronizeRenderElements(new Set));const{overlays:e,spatialReference:t}=this._lastDrapingExtent;this._updatingHandles.addPromise(this._update(e,t).catch((()=>{})))}async _collectMediaElements(e,t,r){const n=this.layer.effectiveSource;return null==n?new Set:new Set((await Promise.all(e.map((e=>n.queryElements(h.toExtent(e.extent,t),{signal:r}))))).flat())}_synchronizeRenderElements(e){this._synchronizeRenderElementsRemove(e),this._synchronizeRenderElementsAdd(e)}_synchronizeRenderElementsRemove(e){const t=new Set,r=[];this._renderedElements.forEach(((n,i)=>{e.has(i)||(t.add(i),null!=n.renderData&&r.push(n.renderData.renderGeometry),this._removeElement(i,n))})),this._renderer.removeGeometries(r,D.DirtyOperation.REMOVE)}_synchronizeRenderElementsAdd(e){for(const t of e)this._renderedElements.has(t)||this._createRenderElement(t)}_removeElement(e,{renderData:t,handle:r}){this._destroyRenderData(t),this._renderedElements.delete(e),this._uidToElement.delete(e.uid),r.remove()}async _createRenderElement(e){const t=new p.MediaElementView({spatialReference:this.view.spatialReference,element:e}),n={renderData:null,handle:r.handlesGroup([this._updatingHandles.add((()=>e.opacity),(e=>{null!=n.renderData&&n.renderData.material.setParameters({opacity:e})})),this._updatingHandles.add((()=>t.coords),(()=>{null!=n.renderData?this._updateGeometry(t,n,n.renderData):this._initializeRenderData(t,n)})),this._updatingHandles.add((()=>e.content),(()=>this._initializeRenderData(t,n))),r.destroyHandle(t)])};this._renderedElements.set(e,n),this._uidToElement.set(e.uid,e),this._updatingHandles.addPromise(e.load().catch((()=>{}))),this._initializeRenderData(t,n)}_initializeRenderData(e,t){const{coords:r,element:n}=e,{contentWidth:a,contentHeight:s}=n;if(null==r||null==n.content)return void(t.renderData=this._destroyRenderData(t.renderData));if(null!=t.renderData)return;const d=this._createTexture(n.content),o=d.load(this.view._stage.renderView.renderingContext);this.view._stage.add(d),i.isPromiseLike(o)&&this._updatingHandles.addPromise(o);const l=new A.ImageMaterial({initTextureTransparent:!0,textureId:d.id,opacity:n.opacity,transparent:!0,perspectiveInterpolation:!0}),c=this._getPositionAttributeArray(r),u=[0,0,1,0,1,1,0,1],h=this._getPerspectiveDivideAttributeArray(c,a,s),p=[0,1,2,0,2,3],m=new E.Geometry(l,[[R.VertexAttribute.POSITION,new g.Attribute(c,p,3,!0)],[R.VertexAttribute.UV0,new g.Attribute(u,p,2,!0)],[R.VertexAttribute.PERSPECTIVEDIVIDE,new g.Attribute(h,p,1,!0)]]),y=new w.RenderGeometry(m,{layerUid:this.layer.uid,graphicUid:n.uid});this._renderer.addGeometries([y],D.DirtyOperation.ADD),t.renderData={renderGeometry:y,texture:d,material:l}}_updateGeometry(e,t,r){const{coords:n,element:i}=e;if(null==n||null==i.content)return void(t.renderData=this._destroyRenderData(t.renderData));const a=this._getPositionAttributeArray(n);r.renderGeometry.geometry.setAttributeData(R.VertexAttribute.POSITION,a);const s=this._getPerspectiveDivideAttributeArray(a,i.contentWidth,i.contentHeight);r.renderGeometry.geometry.setAttributeData(R.VertexAttribute.PERSPECTIVEDIVIDE,s),this._renderer.modifyGeometries([r.renderGeometry],D.DirtyState.GEOMETRY)}_getPositionAttributeArray(e){const[t,r,n,i]=e.rings[0];return[t[0],t[1],_.drapedZ,i[0],i[1],_.drapedZ,n[0],n[1],_.drapedZ,r[0],r[1],_.drapedZ]}_getPerspectiveDivideAttributeArray(e,t,r){n.getProjectiveTransform(P,[0,0,t,0,t,r,0,r],[e[0],e[1],e[3],e[4],e[6],e[7],e[9],e[10]]);const i=P[6]/P[8]*t,a=P[7]/P[8]*r;return[1,1+i,1+i+a,1+a]}_destroyRenderData(e){if(null==e)return null;const t=e.texture;return t.unload(),this.view._stage.remove(t),this._renderer.removeGeometries([e.renderGeometry],D.DirtyOperation.REMOVE),null}_createTexture(e){const r=e instanceof HTMLImageElement?e.naturalWidth:e.width,n=e instanceof HTMLImageElement?e.naturalHeight:e.height;if("getFrame"in e)throw new t("media-layer-view-3d","animation is not supported");return new b.Texture(e,{wrap:{s:T.TextureWrapMode.CLAMP_TO_EDGE,t:T.TextureWrapMode.CLAMP_TO_EDGE},preMultiplyAlpha:!0,width:r,height:n,mipmap:!0,updateCallback:()=>this.view.basemapTerrain.overlayManager.setDrawTexturesDirty()})}get test(){const e=this;return{get numberOfElements(){return e._renderedElements.size}}}};e.__decorate([s.property({readOnly:!0})],x.prototype,"type",void 0),e.__decorate([s.property()],x.prototype,"layer",void 0),x=e.__decorate([c.subclass("esri.views.3d.layers.MediaLayerView3D")],x);const P=u.create();return x}));
