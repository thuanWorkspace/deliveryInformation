/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","../../../chunks/tslib.es6","../../../Graphic","../../../core/arrayUtils","../../../core/Logger","../../../core/maybe","../../../core/reactiveUtils","../../../core/typedArrayUtil","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/projection/projectBuffer","../../../geometry/projection/projectVectorToVector","../../../geometry/support/contains","../../../geometry/support/DoubleArray","../../../geometry/support/zscale","../../../layers/LayerConstants","../../../layers/graphics/dehydratedFeatures","../../../layers/graphics/dehydratedPoint","../../../layers/graphics/hydratedFeatures","../../../layers/graphics/controllers/I3SOnDemandController","../../../layers/support/FeatureFilter","../../../rest/support/Query","../../../support/basemapUtils","./I3SPointsWorkerHandle","./LayerView3D","./graphics/Graphics3DFeatureProcessor","./graphics/QueryEngine","./i3s/featureEditing","./i3s/I3SGraphicsMap","./i3s/I3SOverrides","./i3s/I3SUtil","./support/DefinitionExpressionSceneLayerView","./support/fieldProperties","./support/PopupSceneLayerView","./support/SceneLayerViewRequiredFields","../support/debugFlags","../support/orientedBoundingBox","../support/updatingProperties","../webgl-engine/lib/Attribute","../webgl-engine/lib/UpdatePolicy","../../layers/SceneLayerView","../../layers/support/popupUtils","../../support/Scheduler"],(function(e,t,r,i,s,o,a,n,d,l,u,h,c,p,g,y,_,b,m,f,v,E,I,x,w,N,O,D,C,F,S,G,A,P,V,L,M,R,H,j,q,Q,U,T,k,B){"use strict";const z=L.defineFieldProperties();class W{constructor(e,t,r,i){this.graphics=e,this.featureIds=t,this.attributeInfo=r,this.node=i}}let Z=class extends(V.DefinitionExpressionSceneLayerView(M.PopupSceneLayerView(D.LayerView3D(T)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new G.I3SGraphicsMap(((e,t,r)=>J(e,t,r)),(e=>this.processor.graphicsCore.recreateGraphics(e))),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then((()=>{P.checkRecyclable(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const t=this.view.resourceController?.memoryController;this._i3sOverrides=new A.I3SOverrides({view:this.view,layer:e,memoryController:t}),o.destroyMaybe(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()})):null}initialize(){this.addResolvingPromise(this.layer.indexInfo);const t=this.view.resourceController?.memoryController;this._i3sOverrides=new A.I3SOverrides({view:this.view,layer:this.layer,memoryController:t}),P.checkSpatialReferences(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new R.SceneLayerViewRequiredFields({layerView:this}),this._updatingHandles.add((()=>this.layer.rangeInfos),(e=>this._rangeInfosChanged(e)),a.initial),this._updatingHandles.add((()=>this.layer.renderer),((e,t)=>this._rendererChange(e,t))),this._updatingHandles.add((()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted]),(()=>this._filterChange())),this.addHandles(a.watch((()=>H.debugFlags.I3S_TREE_SHOW_TILES),(t=>{if(t&&!this._treeDebugger){const t=this._controller.crsIndex;new Promise(((t,r)=>e(["./support/I3STreeDebugger"],t,r))).then((({I3STreeDebugger:e})=>{!this._treeDebugger&&H.debugFlags.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new e({lv:this,view:this.view,nodeSR:t}))}))}else t||!this._treeDebugger||H.debugFlags.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}),a.initial)),this._set("processor",new C.Graphics3DFeatureProcessor({owner:this,preferredUpdatePolicy:U.UpdatePolicy.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",(e=>this._controller.updateElevationChanged(e.extent,e.spatialReference))),this.supportsHeightUnitConversion&&(this._verticalScale=b.getGeometryZScaler("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new I({layerView:this,scaleVisibilityEnabled:!1}),P.containsDraco(this.layer.geometryDefinitions)&&(this._worker=new O.I3SPointsWorkerHandle((e=>this.view.resourceController.immediate.schedule(e)))),this.addHandles(this.layer.on("apply-edits",(e=>this._updatingHandles.addPromise(e.result)))),this.addHandles(this.layer.on("edits",(e=>{const t=this._pendingEditsQueue.then((()=>this._handleEdits(e))).then();this._pendingEditsQueue=t,this._updatingHandles.addPromise(t)}))),this.when((()=>{this._setupQueryEngine(),this._updatingHandles.add((()=>this.maximumNumberOfFeatures),(e=>this._controller.featureTarget=e),a.initial),this._updatingHandles.add((()=>this.suspended),(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=o.destroyMaybe(this._treeDebugger),this._i3sOverrides=o.destroyMaybe(this._i3sOverrides),this._set("processor",o.destroyMaybe(this.processor)),this._controller=o.destroyMaybe(this._controller),this._queryEngine=o.destroyMaybe(this._queryEngine),this._worker=o.destroyMaybe(this._worker),this._memCache=o.destroyMaybe(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=o.destroyMaybe(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??1}get requiredFields(){return this._fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){const e=this.processor?.graphicsCore?.displayFeatureLimit;return e?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&(!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached)}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort(((e,t)=>e-t)):null}get lodFactor(){return"Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){return!this.suspended&&!!this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}async whenGraphicAttributes(e,t){return P.whenGraphicAttributes(this.layer,e,this._getObjectIdField(),t,(()=>[...this.loadedGraphics.nodes()]))}getHit(e){if(!this.loadedGraphics)return null;const t=E.hydrateGraphic(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t?.attributes?.[r]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){return!!(this._controller?.updating||this.processor?.updating||this._fieldsHelper?.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return S.createInteractiveEditSession(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};null==this._worker&&(this._worker=new O.I3SPointsWorkerHandle((e=>this.view.resourceController.immediate.schedule(e))));const i=await this._worker.invoke(r,t);if(null==i)throw new Error("Failed to decompress Draco point data");return{positionData:i.positions,featureIds:i.featureIds}}async addNode(e,t,r){if(!$(t)&&!Y(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void s.getLogger(this).error("I3S node "+e.id+" already added");const i=null!=this.layer.fullExtent?ee(this.layer.fullExtent.clone(),.5):null,o=[],{featureIds:a,pointPositions:n}=$(t)?await this._extractBinaryPointPositions(e,t,r):this._extractLegacyPointPositions(t);this._validatePositions(e,a,n,i,o);const d=this._controller.crsVertex,l=this.view.spatialReference;p.projectBuffer(n,d,0,n,l,0,a.length);const u=$(t)?e.level:0,h=this._createGraphics(a,n,e.index,u),c=new W(h,a,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(c.featureIds,t.attributeDataInfo,r),e.numFeatures=c.graphics.length,this._updateNodeMemory(e),X(c),o.length>0&&(this._computeObb(e,o,d),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(c);if(null!=this._verticalScale)for(const s of c.graphics)this._verticalScale(s.geometry);const g=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(null!=g){const e=N.isBasemapLayer(this.view.map,this.layer.uid);for(let t=0;t<c.featureIds.length;t++){const r=c.featureIds[t];g.setUidToObjectAndLayerId(r,c.graphics[t].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!e&&k.hasPopupTemplate(this.layer,this.view.popup?.defaultPopupTemplateEnabled),c.node.resources.attributes,t)}}this.loadedGraphics.addNode(e.index,c),this._controller.updateLoadStatus(e.index,!0),this._filterNode(c),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;p.projectBuffer(t,r,0,t,s,0,t.length/3),e.serviceObb=j.compute(new Q.Vertices(t,3)),i.isGeographic&&g.projectVectorToVector(e.serviceObb.center,s,e.serviceObb.center,i)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,r){const i=await this._decompressBinaryPointData(t,r),s=i.positionData,o=3,a=s.length/o,n=_.newDoubleArray(3*a),d=null!=e.serviceObb?e.serviceObb.center:[0,0,0],l=Math.abs(d[2])*2**-20;for(let u=0;u<a;u++){const e=u*o;n[e]=s[e]+d[0],n[e+1]=s[e+1]+d[1],n[e+2]=s[e+2]+d[2],Math.abs(n[e+2])<l&&(n[e+2]=0)}return{featureIds:i.featureIds?_.doubleArrayFrom(i.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){const t=e.pointData.length,r=_.newDoubleArray(3*t),i=new Array;for(let s=0;s<t;s++){const t=e.pointData[s],o=t.featureDataPosition,a=o.length,n=t.geometries?.[0]??te[a],d=t.featureIds[0];if("Embedded"!==n.type||"points"!==n.params.type||a<2||a>3)continue;const l=n.params.vertexAttributes?.position??[0,0,0],u=3*i.length;r[u]=o[0]+l[0],r[u+1]=o[1]+l[1],r[u+2]=3===a?o[2]+l[2]:NaN,i.push(d)}return{featureIds:i,pointPositions:r}}_validatePositions(e,t,r,i,o){if(null==i&&e.serviceObb)return;const a=t.length,n=3;for(let d=0;d<a;d++){const t=d*n;h.set(re,r[t],r[t+1],r[t+2]);const a=!Number.isNaN(r[2]);null==i||(a?y.extentContainsCoords3D(i,re):y.extentContainsCoords2D(i,re))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&s.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&s.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObb||o.push(re[0],re[1],re[2])}}_createGraphics(e,t,i,s){const o=e.length,a=3,n=this._getObjectIdField(),d=this.processor.graphicsCore,l=new Array,u=this.view.spatialReference;for(let h=0;h<o;h++){const o=e[h],c={};null!=o&&(c[n]=o);const p=o??r.generateUID(),g=h*a,y=isNaN(t[g+2])?void 0:t[g+2],_=v.makeDehydratedPoint(t[g],t[g+1],y,u),b=this.loadedGraphics.get(p);if(null!=b)(null==b.level||b.level<s)&&(ie.property="geometry",ie.graphic=b,ie.oldValue=b.geometry,ie.newValue=_,b.geometry=_,b.level=s,d.graphicUpdateHandler(ie)),l.push(b);else{const e=r.generateUID();l.push({objectId:p,uid:e,geometry:_,attributes:c,visible:!0,nodeIndex:i,level:s})}}return l}_updateNodeMemory(e){e.memory=4096+(null!=e.numFeatures?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>f.estimateSize(t)+e),n.estimateSize(e.featureIds)+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode(((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)})),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return null==t?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){return this._memCache?.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){this.loadedGraphics.hasNode(e.index)?s.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,r,i),this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),t.attributeInfo=r,this._attributeValuesChanged(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this.loadedGraphics.getNode(e);null!=r?.attributeInfo&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const i=this.loadedGraphics.getNode(e);null!=i&&(await this._i3sOverrides.applyAttributeOverrides(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){if(X(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||m.fallbackObjectIDAttribute}_getGlobalIdField(){return this.layer.associatedLayer?.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&s.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,r=this._excludeObjectIdsSorted,s=this._getObjectIdField();for(const o of e.graphics){const e=o.visible,a=!t||this._evaluateClause(t,o),n=null==r||i.binaryIndexOf(r,o.attributes[s])<0;o.visible=a&&n,e!==o.visible&&(ie.graphic=o,ie.property="visible",ie.oldValue=e,ie.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(ie))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return null!=this.filter?this.filter.createQuery(e):new w(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(null==e?this.createQuery():w.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new F.QueryEngine({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:B.TaskPriority.FEATURE_QUERY_ENGINE})}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return.8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,r=await S.normalizeEditResultsEvent(t,e);S.processAttributeEdits(t,r)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:e=>this.loadedGraphics.forEachNode((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,i)=>{this._setAttributeData(t,r);const s=this.loadedGraphics.getNode(t);if(null!=i){const t=this.loadedGraphics.get(i.attributes[e]);null!=t&&this.processor.graphicsCore.recreateGraphics([t])}else null!=s&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this.loadedGraphics.nodeCount,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this.loadedGraphics.nodeCount,loadedGraphics:this.loadedGraphics}}};t.__decorate([d.property()],Z.prototype,"processor",void 0),t.__decorate([d.property({type:x})],Z.prototype,"filter",void 0),t.__decorate([d.property()],Z.prototype,"loadedGraphics",void 0),t.__decorate([d.property()],Z.prototype,"i3slayer",null),t.__decorate([d.property()],Z.prototype,"_controller",void 0),t.__decorate([d.property()],Z.prototype,"updating",void 0),t.__decorate([d.property()],Z.prototype,"suspended",void 0),t.__decorate([d.property()],Z.prototype,"holeFilling",void 0),t.__decorate([d.property(q.updatingProgress)],Z.prototype,"updatingProgress",void 0),t.__decorate([d.property()],Z.prototype,"updatingProgressValue",null),t.__decorate([d.property(z.requiredFields)],Z.prototype,"requiredFields",null),t.__decorate([d.property(z.availableFields)],Z.prototype,"availableFields",void 0),t.__decorate([d.property()],Z.prototype,"_fieldsHelper",void 0),t.__decorate([d.property({type:Number})],Z.prototype,"maximumNumberOfFeatures",null),t.__decorate([d.property({readOnly:!0})],Z.prototype,"maximumNumberOfFeaturesExceeded",null),t.__decorate([d.property()],Z.prototype,"_excludeObjectIdsSorted",null),t.__decorate([d.property({readOnly:!0})],Z.prototype,"lodFactor",null),t.__decorate([d.property({readOnly:!0})],Z.prototype,"hasM",null),t.__decorate([d.property({readOnly:!0})],Z.prototype,"hasZ",null),t.__decorate([d.property()],Z.prototype,"contentVisible",null),t.__decorate([d.property({readOnly:!0})],Z.prototype,"legendEnabled",null),Z=t.__decorate([u.subclass("esri.views.3d.layers.SceneLayerGraphicsView3D")],Z);const K=Z;function Y(e){return"pointData"in e}function $(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function J(e,t,r){const i=t.attributeInfo;if(null==i?.loadedAttributes||null==i.attributeData)return!1;let s=!1;for(const{name:o}of i.loadedAttributes)if(i.attributeData[o]){const t=P.getCachedAttributeValue(i.attributeData[o],r);t!==e.attributes[o]&&(e.attributes[o]=t,s=!0)}return s}function X(e){const t=e.attributeInfo,r=e.node.index;if(null!=t?.loadedAttributes&&null!=t.attributeData)for(let i=0;i<e.graphics.length;i++){const s=e.graphics[i];if(s.nodeIndex===r){s.attributes||(s.attributes={});for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=P.getCachedAttributeValue(t.attributeData[e],i))}}}function ee(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,null!=e.zmin&&null!=e.zmax&&(e.zmin-=t,e.zmax+=t),null!=e.mmin&&null!=e.mmax&&(e.mmin-=t,e.mmax+=t),e}const te={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},re=c.create(),ie={graphic:null,property:null,oldValue:null,newValue:null};return K}));
