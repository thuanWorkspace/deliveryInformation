/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../Color","../../../../analysis/LineOfSightAnalysisObserver","../../../../analysis/LineOfSightAnalysisTarget","../../../../core/Handles","../../../../core/Logger","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../core/support/UpdatingHandles","../../../../geometry/support/lineSegment","../../../../support/elevationInfoUtils","../../../../symbols/support/ElevationInfo","./LineOfSightConfiguration","./LineOfSightManipulators","./LineOfSightRayIntersector","../../interactive/visualElements/LaserlineVisualElement","../../webgl-engine/lib/IntersectorInterfaces","../../../input/ViewEvents","../../../interactive/AnalysisToolBase","../../../interactive/dragEventPipeline","../../../interactive/interfaces","../../../support/screenUtils","../../../input/IViewEvents"],(function(e,t,i,a,n,r,s,o,l,u,c,h,p,d,g,_,v,y,b,m,T,f,L,M,S,w,C,O,k){"use strict";var I;!function(e){e.Ready="ready",e.Creating="creating",e.Created="created"}(I||(I={})),e.LineOfSightTool=class extends S.AnalysisToolBase{constructor(e){super(e),this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new r,this._updatingHandles=new g.UpdatingHandles,this._manipulatorHandles=new r,this._targetTrackerManipulator=null}initialize(){this._intersector=new T.LineOfSightRayIntersector({view:this.view}),this.addHandles(l.watch((()=>this.state),(e=>{e===I.Created&&this.finishToolCreation()}),l.syncAndInitial)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add((()=>this.analysisViewData?.elevationAlignedObserver),(e=>this._onObserverLocationChange(e)),l.initial),this._updatingHandles.add((()=>b.getLaserLineColors(this.view.effectiveTheme)),(({glowColor:e,innerColor:t,globalAlpha:i})=>this._updateLaserLineStyle(e,t,i)),l.initial),this._updatingHandles.add((()=>this._laserLineRendererDependencies()),(e=>this._updateLaserLineRenderer(e))),this._connectComputations(),this._updatingHandles.addWhen((()=>!this._shouldRenderTracker),(()=>this._clearCursorTracker()),l.initial)])}destroy(){this._updatingHandles=o.destroyMaybe(this._updatingHandles),this._manipulatorHandles=o.destroyMaybe(this._manipulatorHandles),this._analysisHandles=o.destroyMaybe(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?I.Created:I.Creating:null!=this.analysis.observer?.position?I.Created:I.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return null!=this.analysisViewData&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&"mouse"===this._latestPointerMovePointerType}get _shouldRenderTracker(){return this._showTracker&&null!=this.analysis.observer?.position&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(e){switch(e.type){case"immediate-double-click":this._doubleClickHandler(e);break;case"key-down":this._keyDownHandler(e);break;case"pointer-move":this._pointerMoveHandler(e)}}onInputEventAfter(e){if("immediate-click"===e.type)this._clickHandler(e)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(e=>this._onComputationsCollectionChange(e)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_connectComputation(e){if(this.destroyed)return void s.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const t=this._analysisHandles;if(t.has(e))return;const i=this._createTargetManipulator(e.target);null==this._targetTrackerManipulator&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),t.add([this._updatingHandles.add((()=>this._getLineOfSightManipulatorStateDependencies(e)),(()=>this._updateManipulatorState(i,e)),l.initial),this._updatingHandles.add((()=>e.elevationAlignedTargetLocation),(e=>this._onTargetLocationChange(e,i)),l.initial)],e)}_disconnectComputation(e){if(this.destroyed)return void s.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(e);const t=this._getTargetManipulator(e.target);null!=t&&(this.manipulators.remove(t),this._manipulatorHandles.remove(t),null!=this._targetTrackerManipulator&&this._targetTrackerManipulator===t&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=o.destroyMaybe(this.analysisViewData.cursorTarget)}_createTargetManipulator(e){const t={target:e,type:"target"},i=new m.LineOfSightTargetManipulator(this.view,t);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(i),i.events.on("grab-changed",(e=>this._manipulatorGrabChanged(i,e))),i.events.on("immediate-click",(e=>this._manipulatorClick(i,e)))],i),this.manipulators.add(i),null!=e.position?i.elevationAlignedLocation=e.position:i.available=!1,i}_getTargetManipulator(e){let t=null;return this.manipulators.forEach((i=>{const a=i.manipulator;null==t&&"target"===a.metadata.type&&a.metadata.target===e&&(t=a)})),t}_createObserverManipulator(){const e=new m.LineOfSightObserverManipulator(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(e),e.events.on("grab-changed",(t=>this._manipulatorGrabChanged(e,t))),e.events.on("immediate-click",(t=>this._manipulatorClick(e,t)))],e),this.manipulators.add(e),e}_screenToIntersection(){return e=>{const t=this._intersector.getScreenPointIntersection(e.screenEnd);return null==t?null:{...e,intersection:t}}}_createTargetManipulatorDragPipeline(e){return w.createManipulatorDragEventPipeline(e,((t,i,a)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(e)).next((()=>this._updateLaserLineRenderer())),a.next(this._cancelTargetDragStep(e.metadata.target)).next((()=>this._updateLaserLineRenderer()))}))}_createObserverManipulatorDragPipeline(e){return w.createManipulatorDragEventPipeline(e,((e,t,i)=>{t.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next((()=>this._updateLaserLineRenderer())),i.next(this._cancelObserverDragStep()).next((()=>this._updateLaserLineRenderer()))}))}_updateObserverDragStep(){return e=>(null!=e.intersection.mapPoint?(null==this.analysis.observer&&(this.analysis.observer=new a),this._updateFromIntersection(this.analysis.observer,e.intersection)):this.analysis.observer=null,e)}_cancelObserverDragStep(){const e=null!=this.analysis.observer?.position?this.analysis.observer.clone():null;return t=>(this.analysis.observer=e,t)}_updateTargetDragStep(e){return t=>{this._updateFromIntersection(e.metadata.target,t.intersection);const i=t.intersection.mapPoint;return null!=i&&(e.elevationAlignedLocation=i),t}}_cancelTargetDragStep(e){const t=e.position?.clone();return i=>(e.position=t,i)}_manipulatorGrabChanged(e,t){switch(t.action){case"start":this._grabbedManipulator=e;break;case"end":this._grabbedManipulator===e&&(this._grabbedManipulator=null)}}_updateManipulatorState(e,t){const{isValid:i,isTargetVisible:a}=t.computationResult;e.state=i?a?C.ManipulatorStateCustomFlags.Custom1:C.ManipulatorStateCustomFlags.Custom2:C.ManipulatorStateCustomFlags.Custom3}_getLineOfSightManipulatorStateDependencies(e){const{isValid:t,isTargetVisible:i}=e.computationResult;return{isValid:t,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:null!=this.analysis.observer?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(e=this._laserLineRendererDependencies()){const{laserlineVisualElement:t,grabbedManipulator:i,shouldRenderTracker:a,observerPosition:n,visible:r}=e;if(null==t)return;const s=null!=i?i:a&&null!=n?this._targetTrackerManipulator:null;null!=s&&r?(t.visible=!0,t.heightManifoldTarget=s.renderLocation,s!==this._observerManipulator?t.lineVerticalPlaneSegment=_.fromPoints(this._observerManipulator.renderLocation,s.renderLocation,P):t.lineVerticalPlaneSegment=null):(t.visible=!1,t.heightManifoldTarget=null,t.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:e,innerWidth:t}=b.laserLineConfiguration;this._laserlineVisualElement=new f.LaserlineVisualElement({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:e,innerWidth:t},isDecoration:!0})}_removeLaserLine(){null!=this._laserlineVisualElement&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(e,t,a){const n=this._laserlineVisualElement;if(null==n)return;const r=n.style;n.style={...r,glowColor:i.toUnitRGB(e),innerColor:i.toUnitRGB(t),globalAlpha:a}}_onObserverLocationChange(e){null!=e?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=e):this._observerManipulator.available=!1}_onTargetLocationChange(e,t){null!=e?(t.elevationAlignedLocation=e,t!==this._targetTrackerManipulator&&(t.available=!0)):t.available=!1}_addPointFromClickEvent(e){const t=this._intersector.getScreenPointIntersection(e);if(null!=t?.mapPoint)if(null!=this.analysis.observer?.position){this._clearCursorTracker();const e=new n;this._updateFromIntersection(e,t),this.analysis.targets.add(e)}else{const e=new a;this._updateFromIntersection(e,t),this.analysis.observer=e}}_clickHandler(e){this.active&&e.button!==k.MouseButton.Right&&(this._addPointFromClickEvent(O.createScreenPointFromEvent(e)),e.stopPropagation())}_doubleClickHandler(e){this.active&&e.button!==k.MouseButton.Right&&(this.stop(),e.stopPropagation())}_keyDownHandler(e){this.active&&"Escape"===e.key&&(this.stop(),e.stopPropagation())}_pointerMoveHandler(e){if(this.hasGrabbedManipulators)return;if(this._latestPointerMovePointerType=e.pointerType,this._updateLaserLineRenderer(),!this._showTracker||null==this.analysis.observer?.position)return;const t=O.createScreenPointFromEvent(e),i=this._intersector.getScreenPointIntersection(t);null!=i?.mapPoint&&(null==this.analysisViewData.cursorTarget&&(this.analysisViewData.cursorTarget=new n),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(e,t){if(null==t.mapPoint)return e.position=null,e.elevationInfo=null,void(e.feature=null);switch(t.type){case L.IntersectorType.OBJECT:if(null!=t.graphic){const i=t.graphic,a=v.getGraphicEffectiveElevationInfo(i);"on-the-ground"===a.mode&&(a.mode="relative-to-ground",a.offset=0),e.elevationInfo=new y(a),e.feature=i}else e.elevationInfo=null,e.feature=null;break;case L.IntersectorType.TERRAIN:case L.IntersectorType.I3S:e.elevationInfo=new y({mode:"on-the-ground"}),e.feature=null;break;default:e.elevationInfo=null,e.feature=null}const i=t.mapPoint.clone();i.z=v.getConvertedElevation(this.view,i,{mode:"absolute-height",offset:0},e.elevationInfo),e.position=i}_manipulatorClick(e,t){if("observer"===e.metadata.type||e.grabbing||e.dragging||t.button!==k.MouseButton.Right||this.analysis.targets.length<=1)return;const{target:i}=e.metadata;this.analysis.targets.remove(i),t.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement,getTargetManipulator:e=>this._getTargetManipulator(e)}}},t.__decorate([u.property({constructOnly:!0})],e.LineOfSightTool.prototype,"view",void 0),t.__decorate([u.property({constructOnly:!0})],e.LineOfSightTool.prototype,"analysis",void 0),t.__decorate([u.property({readOnly:!0})],e.LineOfSightTool.prototype,"state",null),t.__decorate([u.property({readOnly:!0})],e.LineOfSightTool.prototype,"cursor",null),t.__decorate([u.property()],e.LineOfSightTool.prototype,"removeIncompleteOnCancel",void 0),t.__decorate([u.property({readOnly:!0})],e.LineOfSightTool.prototype,"updating",null),t.__decorate([u.property({constructOnly:!0})],e.LineOfSightTool.prototype,"analysisViewData",void 0),t.__decorate([u.property({readOnly:!0})],e.LineOfSightTool.prototype,"_showTracker",null),t.__decorate([u.property()],e.LineOfSightTool.prototype,"_latestPointerMovePointerType",void 0),t.__decorate([u.property()],e.LineOfSightTool.prototype,"_shouldRenderTracker",null),t.__decorate([u.property()],e.LineOfSightTool.prototype,"_laserlineVisualElement",void 0),t.__decorate([u.property()],e.LineOfSightTool.prototype,"_grabbedManipulator",void 0),e.LineOfSightTool=t.__decorate([d.subclass("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],e.LineOfSightTool);const P=_.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
