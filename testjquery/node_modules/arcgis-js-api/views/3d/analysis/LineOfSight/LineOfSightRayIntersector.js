/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../../layers/graphics/dehydratedFeatures","./LineOfSightIntersectionResult","../../layers/i3s/Intersector","../../support/geometryUtils/ray","../../terrain/Intersector","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtilsConversions"],(function(e,t,r,n,s,i,o,c,a,l,p,u,d,y,h,I,g,f,m,v,R){"use strict";e.LineOfSightRayIntersector=class extends r{constructor(e){super(e),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=m.newIntersector(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=v.StoreResults.MIN}getScreenPointIntersection(e){const t=n.screenPointObjectToArray(e,d.sv2d.get()),r=g.fromScreen(this.view.state.camera,t,L);return this._getRayIntersection(r)}_getRayIntersection(e,t){if(null==e||null==this.view.sceneIntersectionHelper)return null;const{intersector:r}=this;r.options.store=v.StoreResults.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,r,t);const n=r.results.min,s=p.create();if(!n.getIntersectionPoint(s))return null;if(null!=t?.maxDistance&&l.squaredDistance(s,e.origin)>t.maxDistance**2)return null;const i=this.view.renderCoordsHelper.fromRenderCoords(s,this.view.spatialReference),o=p.clone(n.normal);if(I.isI3sIntersectorResult(n))return new h.LineOfSightIntersectionResult({type:v.IntersectorType.OBJECT,id:`${n.target.layerUid}/${n.target.nodeIndex}/${n.target.componentIndex}`,mapPoint:i,renderPoint:s,normal:o,ray:u.copy(e),graphic:null});if(f.isTerrainIntersectorResult(n))return new h.LineOfSightIntersectionResult({type:v.IntersectorType.TERRAIN,id:n.target.lij.slice(),mapPoint:i,renderPoint:s,normal:o,ray:u.copy(e),graphic:null});const c=R.toGraphic(n,this.view);if(null!=c){const t=c.layer,r=c.sourceLayer;let n;if(r)if("scene"===r.type)n=y.getObjectId(c,r.objectIdField);else n=c.uid;else n=c.uid;return new h.LineOfSightIntersectionResult({type:v.IntersectorType.OBJECT,id:`${t?.uid}/${n}`,mapPoint:i,renderPoint:s,normal:o,ray:u.copy(e),graphic:c})}return null}updateFromGroundIntersection(e,t,r){const n=S,s=w,i=b,o=O;l.copy(s,e),this.view.renderCoordsHelper.worldUpAtPosition(s,i),l.normalize(i,i);const c=this.view.basemapTerrain.visibleElevationBounds,a=(t>=0?1:-1)*((c?Math.abs(c.max-c.min):100)+Math.abs(t));l.scale(o,i,a),l.add(n,s,o),u.fromPoints(n,s,L);const d=this._getRayIntersection(L,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:a});if(null!=d){const e=O;return l.scale(e,i,t),l.add(r,d.renderPoint,e),p.clone(d.normal)}return l.copy(r,e),null}},t.__decorate([s.property()],e.LineOfSightRayIntersector.prototype,"view",void 0),t.__decorate([s.property()],e.LineOfSightRayIntersector.prototype,"intersector",void 0),e.LineOfSightRayIntersector=t.__decorate([a.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],e.LineOfSightRayIntersector);const S=p.create(),w=p.create(),b=p.create(),O=p.create(),L=u.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
