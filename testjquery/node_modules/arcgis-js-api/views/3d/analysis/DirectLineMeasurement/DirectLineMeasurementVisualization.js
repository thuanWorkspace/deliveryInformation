/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../intl","../../../../core/Accessor","../../../../core/colorUtils","../../../../core/mathUtils","../../../../core/maybe","../../../../core/quantityFormatUtils","../../../../core/quantityUtils","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../core/unitUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec2","../../../../chunks/vec3","../../../../chunks/vec3f64","../interfaces","./interfaces","../support/viewUtils","../../interactive/visualElements/LabelVisualElement","../../interactive/visualElements/LineVisualElement","../../interactive/visualElements/MeasurementArrowVisualElement","../../interactive/visualElements/RightAngleQuadVisualElement","../../interactive/visualElements/support/Segment","../../webgl-engine/lib/Material","../../webgl-engine/materials/lineStippleUtils","../../../../intl/locale","../../../../intl/messages"],(function(e,t,i,n,s,a,r,l,o,c,d,u,h,m,g,p,_,v,b,L,y,V,w,M,S,E,A,z,P,D,O,f){"use strict";function C(e,t,i,n,s){const a=G,r=T;s.projectToRenderScreen(i,a),s.projectToRenderScreen(t,r);const l={segment:"bottom",horizontal:"top",vertical:a[0]<r[0]?"left":"right"};{const n=R,a=H;if(w.screenSpaceTangent(e,i,n,s),w.screenSpaceTangent(e,t,a,s),v.dot(n,a)>=x){const e=Math.sign(n[1])===Math.sign(a[1]);l.segment=e?M.mirrorPosition(l.vertical):l.vertical}else{const e=j;w.screenSpaceTangent(i,t,e,s),v.dot(e,a)>=x&&(l.segment=Math.sign(e[0])===Math.sign(a[0])?M.mirrorPosition(l.horizontal):l.horizontal)}}if(n===V.VisualElementOrientation.BelowSegment){const e=e=>"top"===e?"bottom":"top";l.segment=e(l.segment),l.horizontal=e(l.horizontal),l.vertical=e(l.vertical)}return l}e.DirectLineMeasurementVisualization=class extends n{get _parameters(){const e=this.view.effectiveTheme,{accentColor:t,textColor:i}=e,n=s.unitRGBAFromColor(t),a=s.multiplyOpacityToUnitRGBA(t,.75),r=s.unitRGBAFromColor(s.getContrast(t)),l=s.getContrast(i,s.BrightnessThreshold.Low);return{accentColor:n,contrastColor:r,translucentAccentColor:a,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:s.multiplyOpacity(l,.6),textCalloutColor:s.multiplyOpacity(l,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(null==e||null==t||e.equals(t))return V.ViewMode.None;const i=this.analysisView.result;if(null==i)return V.ViewMode.Direct;if("geodesic"===i.mode)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?V.ViewMode.ProjectedGeodesic:V.ViewMode.Direct;const{verticalDistance:n,horizontalDistance:s}=i,a=n.value,r=s.value;return Math.min(a/r,r/a)<this.triangleCollapseRatioThreshold?V.ViewMode.Direct:V.ViewMode.Triangle}get actualVisualizedMeasurement(){if(null==this.analysisView.result)switch(this.analysisView.measurementMode){case y.MeasurementMode.Auto:case y.MeasurementMode.Euclidean:default:return"euclidean";case y.MeasurementMode.Geodesic:return"geodesic"}return this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return null==this._triangleOrientationOverride}set allowVisualElementsOrientationChange(e){null==this._triangleOrientationOverride!==e&&(null==this._triangleOrientationOverride?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){const e="geodesic"===this.actualVisualizedMeasurement;return{direct:this._segmentLabel,horizontal:e?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}constructor(e){super(e),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=L.create(),this._endPosition=L.create(),this._cornerPosition=L.create(),this._startPositionAtSeaLevel=L.create(),this._endPositionAtSeaLevel=L.create(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=V.VisualElementOrientation.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const e=this._parameters,t={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:i,guideStippleLengthPixels:n,triangleLineWidth:s,geodesicProjectionLineWidth:a,directLabelFontSize:r,verticalLabelFontSize:l,horizontalLabelFontSize:o}=e;this._segmentVisualElement=new E.MeasurementArrowVisualElement({...t,geometry:null,renderOccluded:P.RenderOccludedFlag.OccludeAndTransparent}),this._triangleVisualElement=new S.LineVisualElement({...t,width:s,renderOccluded:P.RenderOccludedFlag.OccludeAndTransparent}),this._rightAngleQuad=new A.RightAngleQuadVisualElement({...t,renderOccluded:P.RenderOccludedFlag.OccludeAndTransparent});const d={...t,polygonOffset:!0,renderOccluded:P.RenderOccludedFlag.OccludeAndTransparent};this._projectedGeodesicLine=new S.LineVisualElement({...d,width:a,stipplePattern:D.createStipplePatternSimple(n)}),this._geodesicStartHint=new S.LineVisualElement({...d,width:i,stipplePattern:D.createStipplePatternSimple(n)}),this._geodesicEndHint=new S.LineVisualElement({...d,width:i,stipplePattern:D.createStipplePatternSimple(n)}),this._segmentLabel=new M.LabelVisualElement({...t,fontSize:r}),this._verticalLabel=new M.LabelVisualElement({...t,fontSize:l}),this._horizontalLabel=new M.LabelVisualElement({...t,fontSize:o}),this.addHandles([c.watch((()=>{const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(e=>this._updateGeometryAndViewMode(e)),c.syncAndInitial),c.watch((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateVisualElementVisibility(e)),c.syncAndInitial),c.watch((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(e=>this._updateLabelText(e)),c.syncAndInitial),c.watch((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateLabelVisibility(e)),c.syncAndInitial),c.watch((()=>this._measurementArrowStripeLength),(e=>this._updateSegmentStripeLength(e)),c.syncAndInitial),O.onLocaleChange((async()=>this._updateMessageBundle())),c.watch((()=>this._parameters),(({textBackgroundColor:e,textCalloutColor:t,textColor:i,translucentAccentColor:n,accentColor:s,contrastColor:a})=>{const{_segmentLabel:r,_verticalLabel:l,_horizontalLabel:o,_triangleVisualElement:c,_rightAngleQuad:d,_projectedGeodesicLine:u,_geodesicStartHint:h,_geodesicEndHint:m,_segmentVisualElement:g}=this;r.backgroundColor=e,r.calloutColor=t,r.textColor=i,l.backgroundColor=e,l.calloutColor=t,l.textColor=i,o.backgroundColor=e,o.calloutColor=t,o.textColor=i,c.color=n,d.color=n,u.color=n,h.color=n,m.color=n,g.color=s,g.contrastColor=a}),c.initial)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=r.destroyMaybe(this._segmentVisualElement),this._triangleVisualElement=r.destroyMaybe(this._triangleVisualElement),this._rightAngleQuad=r.destroyMaybe(this._rightAngleQuad),this._projectedGeodesicLine=r.destroyMaybe(this._projectedGeodesicLine),this._geodesicStartHint=r.destroyMaybe(this._geodesicStartHint),this._geodesicEndHint=r.destroyMaybe(this._geodesicEndHint),this._segmentLabel=r.destroyMaybe(this._segmentLabel),this._verticalLabel=r.destroyMaybe(this._verticalLabel),this._horizontalLabel=r.destroyMaybe(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case V.ViewMode.None:break;case V.ViewMode.Direct:this._segmentVisualElement.visible=!0;break;case V.ViewMode.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case V.ViewMode.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:n,elevationAlignedEndPoint:s,orientation:a,visualizedMeasurement:r,stripeLength:l}){const o=e.renderCoordsHelper;if(null==o||null==n||null==s||n.equals(s))return;let c=this._startPosition,d=this._endPosition;o.toRenderCoords(n,c),o.toRenderCoords(s,d);const u=a===V.VisualElementOrientation.AboveSegment?1:-1,h=u*(o.getAltitude(d)-o.getAltitude(c));h<0&&(c=this._endPosition,d=this._startPosition);const m="geodesic"===r?new z.GeodesicSegment(this._startPosition,this._endPosition,o.spatialReference):new z.EuclideanSegment(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=m,this._updateSegmentStripeLength(l),i){case V.ViewMode.Direct:this._updateSegment(m,a);break;case V.ViewMode.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:m,orientation:a,startPosition:c,endPosition:d,deltaSign:u,altitudeDelta:h});break;case V.ViewMode.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:a,startPosition:c,endPosition:d})}}_updateSegment(e,t){this._segmentLabel.anchor=t===V.VisualElementOrientation.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:n,startPosition:s,endPosition:a,deltaSign:r,altitudeDelta:l}){const o=this._cornerPosition;e.worldUpAtPosition(s,o),b.scale(o,o,r*Math.abs(l)),b.add(o,o,s),this._triangleVisualElement.geometry=[[[s[0],s[1],s[2]],[o[0],o[1],o[2]],[a[0],a[1],a[2]]]],this._rightAngleQuad.geometry={previous:s,center:o,next:a};const c=new z.EuclideanSegment(s,o),d=new z.EuclideanSegment(o,a),u=C(s,a,o,n,t);this._segmentLabel.anchor=u.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=u.vertical,this._horizontalLabel.geometry={type:"segment",segment:d,sampleLocation:"center"},this._horizontalLabel.anchor=u.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:n}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,n);const s=new z.GeodesicSegment(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(s),this._geodesicStartHint.setGeometryFromSegment(new z.EuclideanSegment(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new z.EuclideanSegment(this._endPositionAtSeaLevel,n)),this._segmentLabel.geometry={type:"segment",segment:s,sampleLocation:"center"},this._segmentLabel.anchor=t===V.VisualElementOrientation.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){null!=e?(this._segmentLabel.text="euclidean"===t?e.euclideanDistance:e.geodesicDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,n=this._horizontalLabel,s=this._verticalLabel;if(i.visible=!1,n.visible=!1,s.visible=!1,e)switch(t){case V.ViewMode.Direct:i.visible=!0;break;case V.ViewMode.Triangle:i.visible=!0,n.visible=!0,s.visible=!0;break;case V.ViewMode.ProjectedGeodesic:i.visible=!0;case V.ViewMode.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(null==t||null==e)return null;const{directDistance:i,horizontalDistance:n,verticalDistance:s,geodesicDistance:a}=t,r=this.analysisView.unit,o=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(r){case"metric":return o({euclideanDistance:i&&l.formatMetricLength(e,i),geodesicDistance:a&&l.formatMetricLength(e,a),horizontalDistance:n&&l.formatMetricLength(e,n),verticalDistance:s&&l.formatMetricVerticalLength(e,s)});case"imperial":return o({euclideanDistance:i&&l.formatImperialLength(e,i),geodesicDistance:a&&l.formatImperialLength(e,a),horizontalDistance:n&&l.formatImperialLength(e,n),verticalDistance:s&&l.formatImperialVerticalLength(e,s)});default:return o({euclideanDistance:i&&l.formatDecimal(e,i,r),geodesicDistance:a&&l.formatDecimal(e,a,r),horizontalDistance:n&&l.formatDecimal(e,n,r),verticalDistance:s&&l.formatDecimal(e,s,r)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;null!=e?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(null!=this._triangleOrientationOverride)return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===V.VisualElementOrientation.Auto?this.view.state.camera.aboveGround?V.VisualElementOrientation.AboveSegment:V.VisualElementOrientation.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!t?.state)return!1;const i=t.state.camera,n=t.renderCoordsHelper;if(!n)return!1;const s=i.computeScreenPixelSizeAt(e);return n.getAltitude(e)/s>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(null==e)return null;let i=null;const n=e.directDistance;switch(t){case"metric":i=n&&o.toUnit(n,"meters");break;case"imperial":i=n&&o.toUnit(n,u.adaptiveImperialLengthUnit(n.value,n.unit));break;default:i=n&&o.toUnit(n,t)}if(null==i)return null;return a.nextHighestPowerOfTen(i.value/30)*u.convertUnit(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,f.fetchMessageBundle("esri/core/t9n/Units").then((e=>{this.messages=e})).finally((()=>{this.loadingMessages=!1}))}get testData(){return{labels:this.labels,stripeLength:this._segmentVisualElement?.stripeLength}}},t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"_parameters",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"_triangleOrientationOverride",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"messages",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"view",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"analysis",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"analysisView",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"loadingMessages",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"visible",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"viewMode",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"actualVisualizedMeasurement",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"visualElementOrientation",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"triangleCollapseRatioThreshold",void 0),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"allowVisualElementsOrientationChange",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"labels",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"_labelsText",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"_actualVisualElementsOrientation",null),t.__decorate([h.property()],e.DirectLineMeasurementVisualization.prototype,"_measurementArrowStripeLength",null),e.DirectLineMeasurementVisualization=t.__decorate([_.subclass("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],e.DirectLineMeasurementVisualization);const x=Math.cos(a.deg2rad(12)),G=d.createRenderScreenPointArray3(),T=d.createRenderScreenPointArray3(),R=d.createRenderScreenPointArray(),H=d.createRenderScreenPointArray(),j=d.createRenderScreenPointArray();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
