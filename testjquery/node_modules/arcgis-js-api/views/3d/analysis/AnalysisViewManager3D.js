/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/asyncUtils","../../../core/Collection","../../../core/Error","../../../core/handleUtils","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/scheduling","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/decorators/subclass"],(function(e,s,t,i,a,n,r,o,l,c,d,h,u){"use strict";const w=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),y="analyses-owner-handles";var _,m;!function(e){e[e.PENDING=0]="PENDING",e[e.CREATED=1]="CREATED"}(_||(_={})),function(e){e[e.ADDED=0]="ADDED",e[e.REMOVED=1]="REMOVED"}(m||(m={}));let A=class extends t{constructor(e){super(e),this._allAnalysisViews=new a,this._creatingViewCount=0,this._items=new Map,this._scheduledUpdateHandle=null,this._attachedToViewResolver=V(),this._analysisModules={"area-measurement":{module:null},dimension:{module:null},"direct-line-measurement":{module:null},"line-of-sight":{module:null},slice:{module:null}}}destroy(){this._disconnectOwners(),this._attachedToViewResolver.reject(c.createAbortError("AnalysisViewManager was destroyed"))}attach(){this._connectOwners(),this._attachedToViewResolver.resolve()}detach(){this._disconnectOwners(),this._attachedToViewResolver.reject(c.createAbortError()),this._attachedToViewResolver=V()}get updating(){return!this.view.ready||0!==this._creatingViewCount||this._allAnalysisViews.some((e=>e.updating))}get testInfo(){return{allAnalysisViews:this._allAnalysisViews}}async whenAnalysisView(e){await this._attachedToViewResolver.promise;const s=this._items.get(e);if(null==s||s.state.list===m.REMOVED){throw new n("AnalysisViewManager:no-analysisview-for-analysis","The analysis has not been added to view.analyses",{analysis:e})}return s.createAnalysisViewTask.promise}_connectOwners(){this.addHandles(this._connectAnalysesCollection(this.view.analyses),y)}_disconnectOwners(){this.removeHandles(y),this._update(),this._creatingViewCount=0}_connectAnalysesCollection(e){for(const i of e)this._addAnalysis(i);const s=e.on("after-add",(e=>this._addAnalysis(e.item))),t=e.on("after-remove",(e=>this._removeAnalysis(e.item)));return r.makeHandle((()=>{s.remove(),t.remove();for(const s of e)this._removeAnalysis(s)}))}_addAnalysis(e){const s=this._items.get(e);if(null==s){const s={state:{view:_.PENDING,list:m.ADDED},analysis:e,view:null,createAnalysisViewTask:null};this._items.set(e,s),s.createAnalysisViewTask=i.createTask((e=>this._createAnalysisViewPromise(s,e)))}else s.state.list=m.ADDED}_removeAnalysis(e){const s=this._items.get(e);null!=s?(s.state.list=m.REMOVED,this._scheduleUpdate()):o.getLogger(this).error("Trying to remove analysis which was not added")}_scheduleUpdate(){null==this._scheduledUpdateHandle&&(this._scheduledUpdateHandle=d.schedule((()=>this._update())))}_update(){this._scheduledUpdateHandle=l.removeMaybe(this._scheduledUpdateHandle),this._items.forEach((e=>{if(e.state.list===m.REMOVED)switch(this._items.delete(e.analysis),e.state.view){case _.PENDING:e.createAnalysisViewTask=l.abortMaybe(e.createAnalysisViewTask);break;case _.CREATED:null!=e.view&&(this._allAnalysisViews.remove(e.view),e.view=l.destroyMaybe(e.view),e.createAnalysisViewTask=null)}}))}async _createAnalysisViewPromise(e,s){const t=e.analysis,i=t.type,a=this._analysisModules[i];if(this._creatingViewCount+=1,null==a.module)try{a.module=await this._loadAnalysisModule(i)}catch(r){throw this._creatingViewCount-=1,r}if(c.isAborted(s))throw this._creatingViewCount-=1,c.createAbortError("AnalysisView creation aborted");const n=new a.module.default({analysis:t,view:this.view});try{await n.when()}catch(r){throw this._creatingViewCount-=1,r}if(c.isAborted(s))throw this._creatingViewCount-=1,n.destroy(),c.createAbortError("AnalysisView creation aborted");return e.view=n,e.state.view=_.CREATED,this._allAnalysisViews.add(n),this._creatingViewCount-=1,n}_loadAnalysisModule(s){switch(s){case"area-measurement":return new Promise(((s,t)=>e(["./AreaMeasurementAnalysisView3D"],(e=>s(w(e))),t)));case"dimension":return new Promise(((s,t)=>e(["./DimensionAnalysisView3D"],(e=>s(w(e))),t)));case"direct-line-measurement":return new Promise(((s,t)=>e(["./DirectLineMeasurementAnalysisView3D"],(e=>s(w(e))),t)));case"line-of-sight":return new Promise(((s,t)=>e(["./LineOfSightAnalysisView3D"],(e=>s(w(e))),t)));case"slice":return new Promise(((s,t)=>e(["./SliceAnalysisView3D"],(e=>s(w(e))),t)))}}};function V(){const e=c.createResolver();return e.promise.catch((()=>{})),e}s.__decorate([h.property()],A.prototype,"updating",null),s.__decorate([h.property({constructOnly:!0})],A.prototype,"view",void 0),s.__decorate([h.property()],A.prototype,"_allAnalysisViews",void 0),s.__decorate([h.property()],A.prototype,"_creatingViewCount",void 0),A=s.__decorate([u.subclass("esri.views.3d.analysis.AnalysisViewManager3D")],A);return A}));
