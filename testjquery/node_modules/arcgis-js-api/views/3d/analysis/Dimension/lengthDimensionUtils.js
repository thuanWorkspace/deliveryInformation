/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../analysis/dimensionUtils","../../../../core/mathUtils","../../../../core/quantityUtils","../../../../core/unitUtils","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/Axis","../../../../geometry/support/vectorStacks","../../../../layers/graphics/dehydratedPoint","../../../../layers/graphics/hydratedFeatures","../../interactive/visualElements/support/Segment","../../../support/euclideanLengthMeasurementUtils"],(function(e,n,t,r,i,o,a,s,d,c,l,u,p,g,m){"use strict";function S(e,t,o){if(null==e)return null;const a=e.dimensionSegment.startRenderSpace,s=e.dimensionSegment.endRenderSpace,d=m.euclideanDirectDistance(a,s,e.spatialReference);if(null==d)return null;const c=t===n.LengthDimensionMeasureType.Vertical?i.adaptiveVerticalLengthUnit(d.value,d.unit,o):i.adaptiveLengthUnit(d.value,d.unit,o);return r.toUnit(d,c)}function f(e){const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:t,dimension:{offset:r,measureType:i,orientation:o}}=e;return{elevationAlignedStartPoint:n,elevationAlignedEndPoint:t,offset:r,measureType:i,orientation:o}}function v({elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,offset:r,measureType:i,orientation:o},a,c=null){if(null==e||null==t)return null;const l=h(null!=c?c.directSegment:new g.EuclideanSegment,{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t},a),u=null!=c?c.primaryOffsetAxis:d.create();x(u,{measureType:i,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,directSegment:l,orientation:o,renderCoordsHelper:a});const p=null!=c?c.dimensionSegment:new g.EuclideanSegment;return U({elevationAlignedStartPoint:e,elevationAlignedEndPoint:t})&&i===n.LengthDimensionMeasureType.Vertical?(s.copy(p.startRenderSpace,l.startRenderSpace),s.copy(p.endRenderSpace,l.endRenderSpace)):O(p,{offsetAxis:u,offset:r,relativeToSegment:l,renderCoordsHelper:a}),{directSegment:l,dimensionSegment:p,primaryOffsetAxis:u,spatialReference:a.spatialReference}}function y(n,t,r,i){return t===e.OffsetSegmentLocation.Start?(s.copy(n.startRenderSpace,r.startRenderSpace),s.copy(n.endRenderSpace,i.startRenderSpace)):(s.copy(n.startRenderSpace,r.endRenderSpace),s.copy(n.endRenderSpace,i.endRenderSpace)),n}var R;function A(e,n,t,r){s.scaleAndAdd(e.startRenderSpace,n.startRenderSpace,t,r),s.scaleAndAdd(e.endRenderSpace,n.endRenderSpace,t,r)}function P(e,t,r,i){switch(t){case n.LengthDimensionMeasureType.Direct:return h(e,r,i);case n.LengthDimensionMeasureType.Horizontal:case n.LengthDimensionMeasureType.Vertical:{const{elevationAlignedStartPoint:o,elevationAlignedEndPoint:a,dimension:s,geometry:d}=r;let c;if(s.measureType===n.LengthDimensionMeasureType.Direct){c=T(d,i)===o.z>a.z,t===n.LengthDimensionMeasureType.Horizontal&&(c=!c)}else c=!D(d);const[l,u]=c?[o,a]:[a,o],g=p.clonePoint(u,E);return t===n.LengthDimensionMeasureType.Horizontal?g.z=l.z:(g.x=l.x,g.y=l.y),i.toRenderCoords(l,e.startRenderSpace),i.toRenderCoords(g,e.endRenderSpace),e}}}function h(e,n,t){return t.toRenderCoords(n.elevationAlignedStartPoint,e.startRenderSpace),t.toRenderCoords(n.elevationAlignedEndPoint,e.endRenderSpace),e}function T(e,n){const t=e.directSegment.eval(.5,l.sv3d.get()),r=n.worldUpAtPosition(t,l.sv3d.get()),i=e.dimensionSegment.eval(.5,l.sv3d.get()),o=s.sub(l.sv3d.get(),i,t);return!s.equals(o,d.ZEROS)&&s.dot(o,r)>0}function D(e){const{startRenderSpace:n,endRenderSpace:t}=e.dimensionSegment,{startRenderSpace:r,endRenderSpace:i}=e.directSegment;return s.sqrDist(r,n)<s.sqrDist(i,t)}e.OffsetSegmentLocation=void 0,(R=e.OffsetSegmentLocation||(e.OffsetSegmentLocation={}))[R.Start=0]="Start",R[R.End=1]="End";const E=u.makeDehydratedPoint(0,0,0,null);function L(e,n,t,r){const{directSegment:i}=t,o=x(l.sv3d.get(),{measureType:n,directSegment:i,renderCoordsHelper:r}),a=O(M,{offsetAxis:o,offset:0,relativeToSegment:i,renderCoordsHelper:r}).eval(.5,l.sv3d.get()),d=s.sub(l.sv3d.get(),e,a);return s.dot(d,o)*r.unitInMeters}const M=new g.EuclideanSegment;function x(e,r){const{measureType:i,elevationAlignedStartPoint:a,elevationAlignedEndPoint:u,directSegment:{startRenderSpace:p,endRenderSpace:g},directSegment:m,renderCoordsHelper:S}=r,f=m.eval(.5,l.sv3d.get()),v=S.worldUpAtPosition(f,l.sv3d.get()),y=S.worldBasisAtPosition(f,c.Axis.Y,l.sv3d.get());switch(i){case n.LengthDimensionMeasureType.Horizontal:s.copy(e,v);break;case n.LengthDimensionMeasureType.Vertical:s.dot(p,v)<s.dot(g,v)?s.sub(e,g,p):s.sub(e,p,g),s.cross(e,e,v),s.cross(e,e,v);break;case n.LengthDimensionMeasureType.Direct:{const n=r.orientation??0;if(U({elevationAlignedStartPoint:a,elevationAlignedEndPoint:u}))o.fromRotation(b,-t.deg2rad(n),v),s.transformMat4(e,y,b);else{const r=s.sub(l.sv3d.get(),g,p),i=s.cross(l.sv3d.get(),r,v);s.cross(i,i,r),o.fromRotation(b,t.deg2rad(n),r),s.transformMat4(e,i,b)}break}}return s.equals(e,d.ZEROS)?s.copy(e,y):s.normalize(e,e)}const b=a.create();function U({elevationAlignedStartPoint:e,elevationAlignedEndPoint:n}){return null!=e&&null!=n&&e.x===n.x&&e.y===n.y}function O(e,n){const{offsetAxis:t,offset:r,relativeToSegment:{startRenderSpace:i,endRenderSpace:o},relativeToSegment:a,renderCoordsHelper:d}=n,c=r/d.unitInMeters,[l,u]=C(i,o,t,c);return s.scaleAndAdd(e.startRenderSpace,a.startRenderSpace,t,l),s.scaleAndAdd(e.endRenderSpace,a.endRenderSpace,t,u),e}function C(e,n,t,r=0){const i=s.dot(n,t),o=s.dot(e,t),a=Math.abs(i-o)+r;return i>o?[a,r]:[r,a]}function w(e,n,t){const r=n.directSegment.eval(.5,l.sv3d.get());return t.worldUpAtPosition(r,e)}function H(e,n){const{startRenderSpace:t,endRenderSpace:r}=n.directSegment;return s.sub(e,r,t)}function k(e,n,t={invert:!1}){const{startRenderSpace:r,endRenderSpace:i}=n.dimensionSegment;return t.invert?s.sub(e,r,i):s.sub(e,i,r)}function z(e,n){const t=e.directSegment.eval(.5,l.sv3d.get());return n.headingAtPosition(t,e.primaryOffsetAxis)}function q(e,n){return s.squaredLength(k(V,e))/n**2}const V=d.create();function F(e){const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:t}=e;if(null==n||null==t)return!1;const i=m.euclideanDirectDistanceBetweenPoints(n,t);return null!=i&&r.toUnit(i,"meters").value>G}const G=1e5;function B(e){return null!=e.geometry}e.arePointsVerticallyAligned=U,e.computationToGeometryDependencies=f,e.computeGeometryFromDimension=v,e.computeLength=S,e.computeOffsetAxis=x,e.computeOffsetForPoint=L,e.computeSegmentForMeasureType=P,e.computeSpanningSegment=y,e.dimensionStartToEnd=k,e.directStartToEnd=H,e.directUp=w,e.geodesicDistanceThreshold=G,e.headingFromGeometry=z,e.isGeodesicDimension=F,e.isValidComputation=B,e.maxScreenLengthSquaredFromGeometry=q,e.offsetSegment=A,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
