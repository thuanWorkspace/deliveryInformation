/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../Color","../../../../core/colorUtils","../../../../core/reactiveUtils","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/quat","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/vectorStacks","./sliceToolConfig","./sliceToolUtils","../../interactive/Manipulator3D","../../interactive/RenderObject","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/materials/ColorMaterial","../../webgl-engine/materials/RibbonLineMaterial","../../../interactive/interfaces"],(function(e,t,a,r,n,i,o,s,l,c,d,u,f,g,p,h,R,m,O,M){"use strict";var b;e.OffsetMode=void 0,(b=e.OffsetMode||(e.OffsetMode={}))[b.CENTER_ON_CALLOUT=0]="CENTER_ON_CALLOUT",b[b.CENTER_ON_ARROW=1]="CENTER_ON_ARROW";class F extends f.Manipulator3D{constructor(e,n){const i=new O.RibbonLineMaterial({width:1,renderOccluded:R.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),o=new m.ColorMaterial({cullFace:p.CullFaceOptions.Back,renderOccluded:R.RenderOccludedFlag.Opaque,isDecoration:!0}),s=new m.ColorMaterial({cullFace:p.CullFaceOptions.Back,renderOccluded:R.RenderOccludedFlag.Opaque,isDecoration:!0}),l=new m.ColorMaterial({cullFace:p.CullFaceOptions.Back,renderOccluded:R.RenderOccludedFlag.Opaque,isDecoration:!0}),c=new m.ColorMaterial({writeDepth:!1,cullFace:p.CullFaceOptions.Front,renderOccluded:R.RenderOccludedFlag.Transparent,isDecoration:!0});super({view:e,...v({offsetMode:n,tubeMaterial:o,tipMaterial:s,capMaterial:l,outlineMaterial:c,calloutMaterial:i})}),this._themeHandle=r.watch((()=>e.effectiveTheme.accentColor),(e=>{const r=a.getContrast(e),n=t.toUnitRGBA(e),d=t.toUnitRGBA(r),u=t.toUnitRGBA(t.blendColors(r,e,.4)),f=t.toUnitRGBA(t.blendColors(r,e,.14));i.setParameters({color:n}),o.setParameters({color:f}),s.setParameters({color:d}),l.setParameters({color:u}),c.setParameters({color:n})}),r.initial)}destroy(){this._themeHandle.remove(),super.destroy()}}function v({offsetMode:t,tubeMaterial:a,tipMaterial:r,capMaterial:n,outlineMaterial:i,calloutMaterial:o}){const s=t===e.OffsetMode.CENTER_ON_CALLOUT?d.shiftRestartOffsetDistance:0,c=[l.fromValues(s,0,-d.shiftRestartArrowLength/2),l.fromValues(s,0,d.shiftRestartArrowLength/2)],f=T(c,!0),p=y({vertices:c,padding:0,materials:{tube:a,tip:r,cap:n}}),R=y({vertices:c,padding:d.shiftRestartArrowOutlineWidth,materials:{tube:i,tip:i,cap:i}}),m=h.createPolylineGeometry(o,[[s,0,0],[s-d.shiftRestartOffsetDistance,0,0]]),O=h.createPolylineGeometry(o,[[s,0,0],[s-d.shiftRestartOffsetDistance,0,0]]);return{renderObjects:[...p.normal.map((e=>new g.RenderObject(e,M.ManipulatorStateFlags.Unfocused|u.DidPointerMoveRecentlyFlag))),...R.normal.map((e=>new g.RenderObject(e,M.ManipulatorStateFlags.Unfocused|u.DidPointerMoveRecentlyFlag))),new g.RenderObject(m,M.ManipulatorStateFlags.Unfocused|u.DidPointerMoveRecentlyFlag|u.IsShiftEdgeOnScreenFlag),...p.focused.map((e=>new g.RenderObject(e,M.ManipulatorStateFlags.Focused|u.DidPointerMoveRecentlyFlag))),...R.focused.map((e=>new g.RenderObject(e,M.ManipulatorStateFlags.Focused|u.DidPointerMoveRecentlyFlag))),new g.RenderObject(O,M.ManipulatorStateFlags.Focused|u.DidPointerMoveRecentlyFlag|u.IsShiftEdgeOnScreenFlag)],autoScaleRenderObjects:!1,collisionType:{type:"line",paths:[f]},collisionPriority:1,radius:d.shiftRestartTipRadius,state:u.DidPointerMoveRecentlyFlag}}function y({vertices:e,padding:t,materials:a}){const r=r=>{const u=e.slice(0),f=s.subtract(c.sv3d.get(),u[0],u[1]);s.normalize(f,f);const g=s.subtract(c.sv3d.get(),u[u.length-1],u[u.length-2]);if(s.normalize(g,g),t>0){const e=s.scale(l.create(),g,-t);u[u.length-1]=s.add(e,e,u[u.length-1]);const a=s.scale(l.create(),f,-t);u[0]=s.add(a,a,u[0])}const p=r?d.shiftRestartTipFocusMultiplier:1,R=d.shiftRestartTipLength*p,m=d.shiftRestartTipRadius*p,O=n.identity(c.sm4d.get());if(t>0){const e=R/4,a=s.set(c.sv3d.get(),0,e,0),r=1+t/e;n.translate(O,O,a),n.scale(O,O,s.set(c.sv3d.get(),r,r,r)),n.translate(O,O,s.scale(a,a,-1/r))}const M=n.identity(i.create()),b=l.fromValues(0,1,0),F=n.fromQuat(i.create(),o.rotationTo(c.sq4d.get(),b,g));F[12]=u[u.length-1][0],F[13]=u[u.length-1][1],F[14]=u[u.length-1][2],n.multiply(F,F,O);const v=a.tube,y=C(d.shiftRestartTubeRadius*(r?d.shiftRestartTubeFocusMultiplier:1)+t,u,v);y.transformation=M;const T=[y],w=a.tip,D=h.createConeGeometry(w,R,m,24,!1,!1,!0);D.transformation=F,T.push(D);const P=a.cap,S=h.createConeGeometry(P,R,m,24,!1,!0,!1);S.transformation=F,T.push(S);const U=n.fromQuat(i.create(),o.rotationTo(c.sq4d.get(),b,f));return U[12]=u[0][0],U[13]=u[0][1],U[14]=u[0][2],n.multiply(U,U,O),T.push(D.instantiate({transformation:U})),T.push(S.instantiate({transformation:U})),T};return{normal:r(!1),focused:r(!0)}}function C(e,t,a){const r=[],n=12;for(let i=0;i<n;i++){const t=i/n*2*Math.PI;r.push([Math.cos(t)*e,Math.sin(t)*e])}return h.createPathExtrusionGeometry(a,r,t,[],[],!1)}function T(e,t){const a=s.subtract(l.create(),e[e.length-1],e[e.length-2]);if(s.normalize(a,a),s.scale(a,a,d.shiftRestartTipLength),s.add(a,a,e[e.length-1]),t){const t=s.subtract(l.create(),e[0],e[1]);return s.normalize(t,t),s.scale(t,t,d.shiftRestartTipLength),s.add(t,t,e[0]),[t,...e,a]}return[...e,a]}e.ShiftManipulator=F,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
