/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../chunks/tslib.es6","../../../../analysis/SlicePlane","../../../../core/clock","../../../../core/maybe","../../../../core/reactiveUtils","../../../../core/scheduling","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/mat4","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../../../../chunks/boundedPlane","../../../../geometry/support/plane","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../images/Factory","./ResizeManipulator","./RotateManipulator","./settings","./ShiftManipulator","./sliceToolConfig","./sliceToolUtils","../../interactive/manipulatorUtils","../../interactive/editingTools/dragEventPipeline3D","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../../interactive/AnalysisToolBase","../../../interactive/dragEventPipeline","../../../support/screenUtils"],(function(e,t,i,a,n,s,r,l,o,h,p,c,u,d,v,_,y,P,w,g,m,M,f,D,T,V,b,S,E,R,k,H,O,x,z){"use strict";var C;let I=C=class extends O.AnalysisToolBase{constructor(e){super(e),this._clock=i.clock,this._previewPlaneOpacity=1,this.removeIncompleteOnCancel=!1,this.layersMode="none",this.shiftManipulator=null,this.rotateHeadingManipulator=null,this.rotateTiltManipulator=null,this.resizeManipulators=null,this._frameTask=null,this._pointerMoveTimerMs=V.pointerMoveTimerMs,this._prevPointerMoveTimeout=null,this._previewPlaneGridVisualElement=null,this._previewPlaneOutlineVisualElement=null,this._startPlane=y.create(),this._previewPlane=null,this._activeKeyModifiers={},this._lastCursorPosition=r.createScreenPoint(),this._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}],this._intersector=k.newIntersector(e.view.state.viewingMode),this._intersector.options.store=H.StoreResults.MIN}initialize(){if(null==this.analysis)throw new Error("SliceTool requires valid analysis, but null was provided.");const e=e=>{this._updateManipulatorsInteractive(e),e.grabbing||(null!=this.analysisViewData.plane&&y.copy(this.analysisViewData.plane,this._startPlane),this.inputState=null)},t=new T.ShiftManipulator(this.view,T.OffsetMode.CENTER_ON_ARROW);this.shiftManipulator=t,this.manipulators.add(t),this.addHandles([this._createShiftDragPipeline(t),t.events.on("grab-changed",(i=>{this._onShiftGrab(i),e(t)}))]);const i=!this.view._stage?.renderView.renderingContext.driverTest.svgPremultipliesAlpha.result,a=new f.RotateManipulator(this.view,((e,t)=>m.getRotateHeadingTexture(this.view.textures,{accentColor:e,contrastColor:t,preMultiplyAlpha:i})));this.rotateHeadingManipulator=a,this.manipulators.add(a),this.addHandles([this._createRotateHeadingDragPipeline(a),a.events.on("grab-changed",(t=>{this._onRotateHeadingGrab(t),e(a)}))]);const s=new f.RotateManipulator(this.view,((e,t)=>m.getTiltRotateTexture(this.view.textures,{accentColor:e,contrastColor:t,preMultiplyAlpha:i})));this.rotateTiltManipulator=s,this.manipulators.add(s),this.addHandles([this._createRotateTiltDragPipeline(s),s.events.on("grab-changed",(t=>{this._onRotateTiltGrab(t),e(s)}))]),this.resizeManipulators=this._resizeHandles.map(((t,i)=>{const a=new M.ResizeManipulator(this.view,t);return this.addHandles([this._createResizeDragPipeline(a),a.events.on("grab-changed",(t=>{this._onResizeGrab(t,i),e(a)}))]),a})),this.manipulators.addMany(this.resizeManipulators),this._previewPlaneGridVisualElement=b.createGridVisualElement(this.view),this._previewPlaneOutlineVisualElement=b.createOutlineVisualElement(this.view),this._previewPlaneOutlineVisualElement.width=V.planePreviewOutlineWidth,this.addHandles(n.watch((()=>[this.analysisViewData.plane,this.analysis.tiltEnabled]),(()=>this._updateManipulators()),n.sync));const r=n.watch((()=>this.state),(e=>{"sliced"===e&&this.finishToolCreation()}),n.syncAndInitial);this.addHandles([r,n.watch((()=>this.view.state.camera),(()=>this._onCameraChange()))])}destroy(){this._removeFrameTask(),this._clearPointerMoveTimeout(),this._previewPlaneOutlineVisualElement=a.destroyMaybe(this._previewPlaneOutlineVisualElement),this._previewPlaneGridVisualElement=a.destroyMaybe(this._previewPlaneGridVisualElement)}get state(){const e=!!this.analysisViewData.plane,t=!!this.inputState;return e?e&&t?"slicing":e&&!t?"sliced":"ready":"ready"}get cursor(){return this._isPlacingSlicePlane||"exclude"===this.layersMode?"crosshair":null!=this._creatingPointerId?"grabbing":null}set analysis(e){if(null==e)throw new Error("SliceTool requires valid analysis, but null was provided.");this.removeHandles("analysis"),this._set("analysis",e)}get inputState(){return this._get("inputState")}set inputState(e){this._set("inputState",e),this.analysisViewData.showGrid=null!=e&&"resize"===e.type,this._updateMaterials()}get _isPlacingSlicePlane(){return!this.inputState&&!this.analysisViewData.plane&&this.active}get _creatingPointerId(){return null!=this.inputState&&"shift"===this.inputState.type?this.inputState.creatingPointerId:null}enterExcludeLayerMode(){null!=this.analysisViewData.plane&&(this._set("layersMode","exclude"),this.active||(this.view.activeTool=this))}exitExcludeLayerMode(){null!=this.analysisViewData.plane&&(this._set("layersMode","none"),this.active&&(this.view.activeTool=null))}onDeactivate(){this._set("layersMode","none"),this._updatePreviewPlane(null)}onShow(){this._updateVisibility(!0)}onHide(){this._updateVisibility(!1)}_updateVisibility(e){this._updateManipulators(),e||this._clearPointerMoveTimeout()}onInputEvent(e){switch(e.type){case"pointer-drag":if(!G(e))return;this._isPlacingSlicePlane?this._onClickPlacePlane(e)&&e.stopPropagation():this._onPointerDrag(e)&&e.stopPropagation();break;case"pointer-move":this._onPointerMove(e);break;case"pointer-up":this._onPointerUp(e)&&e.stopPropagation();break;case"immediate-click":if(!G(e))return;this._onClickPlacePlane(e)&&e.stopPropagation();break;case"click":if(!G(e))return;this._onClickExcludeLayer(e)&&e.stopPropagation();break;case"drag":this.inputState&&e.stopPropagation();break;case"key-down":this._onKeyDown(e)&&e.stopPropagation();break;case"key-up":this._onKeyUp(e)&&e.stopPropagation()}}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}_onPointerDrag(e){const t=this.inputState;if(e.pointerId===this._creatingPointerId&&null!=t&&"shift"===t.type){const i=z.createScreenPointFromEvent(e);return this.shiftManipulator.events.emit("drag",{action:t.hasBeenDragged?"update":"start",pointerType:e.pointerType,start:i,screenPoint:i}),t.hasBeenDragged=!0,!0}return!1}_onPointerMove(e){this._lastCursorPosition.x=e.x,this._lastCursorPosition.y=e.y,this._resetPointerMoveTimeout(),"touch"!==e.pointerType&&this._updatePreviewPlane(z.createScreenPointFromEvent(e),this._activeKeyModifiers)}_onCameraChange(){this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),this._updateManipulators()}_onPointerUp(e){if(e.pointerId===this._creatingPointerId&&null!=this.analysisViewData.plane){const t=z.createScreenPointFromEvent(e);return this.shiftManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),y.copy(this.analysisViewData.plane,this._startPlane),this.inputState=null,!0}return!1}_onClickPlacePlane(e){if("exclude"===this.layersMode)return!1;if(this._isPlacingSlicePlane){const i=z.createScreenPointFromEvent(e),a=y.create();if(this._pickPlane(i,!1,this._activeKeyModifiers,a)){if("pointer-drag"===e.type){const t=R.fromScreenNormalized(this.view.state.camera,i,U);this.inputState=F(t,e.pointerId,a.origin,a)}return y.copy(a,this._startPlane),this.analysis.shape=b.planeToShape(a,this.view,this.view.spatialReference,new t),!0}}return!1}_onClickExcludeLayer(e){return!("exclude"!==this.layersMode||!this.created)&&(this.view.hitTest(z.createScreenPointFromEvent(e)).then((e=>{if(e.results.length){const t=e.results[0],i="graphic"===t?.type&&t.graphic;if(i){const e=i.sourceLayer||i.layer;e&&this.analysis.excludedLayers.push(e)}}else e.ground.layer?this.analysis.excludedLayers.push(e.ground.layer):this.analysis.excludeGroundSurface=!0})),this._set("layersMode","none"),this.active&&(this.view.activeTool=null),!0)}_onKeyDown(e){return(e.key===V.forceVerticalModifier||e.key===V.forceHorizontalModifier)&&(this._activeKeyModifiers[e.key]=!0,null!=this._previewPlane&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0)}_onKeyUp(e){return!(e.key!==V.forceVerticalModifier&&e.key!==V.forceHorizontalModifier||!this._activeKeyModifiers[e.key])&&(delete this._activeKeyModifiers[e.key],null!=this._previewPlane&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0)}_onShiftGrab(e){if("start"!==e.action||null==this.analysisViewData.plane||!e.screenPoint)return;const t=R.fromScreenNormalized(this.view.state.camera,e.screenPoint,U);y.copy(this.analysisViewData.plane,this._startPlane),this.inputState=F(t,null,this.shiftManipulator.renderLocation,this.analysisViewData.plane)}_createShiftDragPipeline(e){return x.createManipulatorDragEventPipeline(e,((e,t,i)=>{const a=this.inputState;if(null==a||"shift"!==a.type)return;const n=null!=this.analysisViewData.plane?y.copy(this.analysisViewData.plane,y.create()):null;t.next(E.screenToRenderPlane(this.view,a.shiftPlane)).next(this._shiftDragAdjustSensitivity(a)).next(this._shiftDragUpdatePlane(a)),i.next((()=>{null!=n&&this._updateBoundedPlane(n)}))}))}_shiftDragAdjustSensitivity(e){return t=>{if(null==this.analysisViewData.plane)return null;const i=.001,a=Math.min((1-Math.abs(d.dot(y.normal(this.analysisViewData.plane),t.ray.direction)/d.length(t.ray.direction)))/i,1),n=-P.signedDistance(this._startPlane.plane,t.renderEnd),s=-P.signedDistance(this._startPlane.plane,e.startPoint);return e.depth=e.depth*(1-a)+n*a-s,t}}_shiftDragUpdatePlane(e){return()=>{if(null==this.analysisViewData.plane)return;const t=d.copy(g.sv3d.get(),this._startPlane.origin),i=d.copy(g.sv3d.get(),y.normal(this._startPlane));d.scale(i,i,-e.depth),d.add(i,i,t);const a=y.fromValues(i,this.analysisViewData.plane.basis1,this.analysisViewData.plane.basis2,y.create());this._updateBoundedPlane(a)}}_onRotateHeadingGrab(e){if("start"!==e.action||null==this.analysisViewData.plane||!e.screenPoint)return;const t=b.createRotatePlane(this.analysisViewData.plane,this.view.renderCoordsHelper,b.RotationAxis.HEADING,P.create()),i=R.fromScreenNormalized(this.view.state.camera,e.screenPoint,U),a=v.create();P.intersectRay(t,i,a)&&(y.copy(this.analysisViewData.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:t,startPoint:a})}_createRotateHeadingDragPipeline(e){return x.createManipulatorDragEventPipeline(e,((e,t,i)=>{const a=this.inputState;if(null==a||"rotate"!==a.type)return;const n=null!=this.analysisViewData.plane?y.copy(this.analysisViewData.plane,y.create()):null;t.next(E.screenToRenderPlane(this.view,a.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(a)).next(this._rotateDragUpdatePlaneFromRotate()),i.next((()=>{null!=n&&this._updateBoundedPlane(n)}))}))}_onRotateTiltGrab(e){if("start"!==e.action||null==this.analysisViewData.plane||!e.screenPoint)return;const t=b.createRotatePlane(this.analysisViewData.plane,this.view.renderCoordsHelper,b.RotationAxis.TILT,P.create()),i=R.fromScreenNormalized(this.view.state.camera,e.screenPoint,U),a=v.create();P.intersectRay(t,i,a)&&(y.copy(this.analysisViewData.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:t,startPoint:a})}_createRotateTiltDragPipeline(e){return x.createManipulatorDragEventPipeline(e,((e,t,i)=>{const a=this.inputState;if(null==a||"rotate"!==a.type)return;const n=null!=this.analysisViewData.plane?y.copy(this.analysisViewData.plane,y.create()):null;t.next(E.screenToRenderPlane(this.view,a.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(a)).next(this._rotateDragUpdatePlaneFromRotate()),i.next((()=>{null!=n&&this._updateBoundedPlane(n)}))}))}_rotateDragRenderPlaneToRotate(e){return t=>{if(null==this.analysisViewData.plane)return null;const i=P.normal(e.rotatePlane),a=S.calculateInputRotationTransform(e.startPoint,t.renderEnd,this.analysisViewData.plane.origin,i);return{...t,rotateAxis:i,rotateAngle:a}}}_rotateDragUpdatePlaneFromRotate(){return e=>{if(null==this.analysisViewData.plane)return;const t=u.fromRotation(g.sm4d.get(),e.rotateAngle,e.rotateAxis);if(null==t)return;const i=d.transformMat4(g.sv3d.get(),this._startPlane.basis1,t),a=d.transformMat4(g.sv3d.get(),this._startPlane.basis2,t),n=y.fromValues(this.analysisViewData.plane.origin,i,a,y.create());this._updateBoundedPlane(n)}}_onResizeGrab(e,t){if("start"!==e.action||null==this.analysisViewData.plane||!e.screenPoint)return;const i=R.fromScreenNormalized(this.view.state.camera,e.screenPoint,U),a=g.sv3d.get();P.intersectRay(this.analysisViewData.plane.plane,i,a)&&(y.copy(this.analysisViewData.plane,this._startPlane),this.inputState={type:"resize",activeHandleIdx:t,startPoint:v.clone(a)})}_createResizeDragPipeline(e){return x.createManipulatorDragEventPipeline(e,((e,t,i)=>{const a=this.inputState;if(null==a||"resize"!==a.type||null==this.analysisViewData.plane)return;const n=y.copy(this.analysisViewData.plane,y.create());t.next(E.screenToRenderPlane(this.view,this.analysisViewData.plane.plane)).next(this._resizeDragUpdatePlane(a)),i.next((()=>{this._updateBoundedPlane(n)}))}))}_resizeDragUpdatePlane(e){return t=>{if(null==this.analysisViewData.plane)return;const i=this._resizeHandles[e.activeHandleIdx],a=b.resizePlane(i,e.startPoint,t.renderEnd,this.view.state.camera,this._startPlane,y.copy(this.analysisViewData.plane));this._updateBoundedPlane(a)}}_updateBoundedPlane(e){const t=this.analysisViewData;if(null==t)throw new Error("valid internal object expected");t.plane=e}_updatePreviewPlane(e,t={}){let i=this._previewPlane;if(this._previewPlane=null,null==e)return this._removeFrameTask(),void this._updateManipulators();if(!this.analysisViewData.plane&&this.active){const a=null!=i?i:y.create();if(i=null!=i?y.copy(i,A):null,this._pickPlane(e,!0,t,a)){const e=V.previewFadeDotThreshold;let t=!1;null!=i&&(t=d.dot(i.plane,a.plane)<e||d.dot(d.normalize(g.sv3d.get(),i.basis1),d.normalize(g.sv3d.get(),a.basis1))<e),t&&(this._previewPlaneOpacity=0),this._previewPlane=a}}null!=this._previewPlane&&null==this._frameTask&&0===this._previewPlaneOpacity?this._frameTask=s.addFrameTask({update:({deltaTime:e})=>{this._previewPlaneOpacity=Math.min(this._previewPlaneOpacity+e/(1e3*V.previewFadeDurationSeconds),1),this._updateManipulators(),1===this._previewPlaneOpacity&&this._removeFrameTask()}}):null==this._previewPlane&&null!=this._frameTask?this._removeFrameTask():null!=this._previewPlane&&this._updateManipulators()}_removeFrameTask(){this._frameTask=a.removeMaybe(this._frameTask)}_pickMinResult(e){const t=r.screenPointObjectToArray(e,g.sv2d.get());return this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(t,this._intersector),this._intersector.results.min}_pickPlane(e,t,i,a){const n=this._pickMinResult(e),s=g.sv3d.get();if(!n.getIntersectionPoint(s))return!1;const r=n.getTransformedNormal(g.sv3d.get()),l=this.view.state.camera;d.dot(r,l.viewForward)>0&&d.scale(r,r,-1);const o=b.calculatePlaneHalfSize(s,l),h=(t?1:-1)*o*V.initialDepthOffsetFrac,p=d.scale(g.sv3d.get(),r,h);d.add(p,p,s);const c=this.analysis.tiltEnabled?b.SliceOrientation.TILTED:b.SliceOrientation.HORIZONTAL_OR_VERTICAL,u=i[V.forceVerticalModifier]?b.SliceOrientation.VERTICAL:i[V.forceHorizontalModifier]?b.SliceOrientation.HORIZONTAL:c;return b.createPlane(p,r,o,o,l,u,this.view.renderCoordsHelper,a),!0}_clearPointerMoveTimeout(){this._prevPointerMoveTimeout=a.removeMaybe(this._prevPointerMoveTimeout)}_resetPointerMoveTimeout(){this._clearPointerMoveTimeout(),this.shiftManipulator.state|=b.DidPointerMoveRecentlyFlag,this.rotateHeadingManipulator.state|=b.DidPointerMoveRecentlyFlag,this.rotateTiltManipulator.state|=b.DidPointerMoveRecentlyFlag,this._prevPointerMoveTimeout=this._clock.setTimeout((()=>{this.shiftManipulator.state&=~b.DidPointerMoveRecentlyFlag,this.rotateHeadingManipulator.state&=~b.DidPointerMoveRecentlyFlag,this.rotateTiltManipulator.state&=~b.DidPointerMoveRecentlyFlag}),this._pointerMoveTimerMs)}_updateManipulators(){if(C.disableEngineLayers)return;let e,t=!1;if(null!=this.analysisViewData.plane)e=this.analysisViewData.plane,t=!1;else{if(null==this._previewPlane)return this.shiftManipulator.available=!1,this.rotateHeadingManipulator.available=!1,this.rotateTiltManipulator.available=!1,this.resizeManipulators.forEach((e=>e.available=!1)),this._previewPlaneOutlineVisualElement.visible=!1,void(this._previewPlaneGridVisualElement.visible=!1);e=this._previewPlane,t=!0}const i=b.calculateBoundedPlaneTranslateRotate(e,g.sm4d.get());t?(this.shiftManipulator.available=!1,this.rotateHeadingManipulator.available=!1,this.rotateTiltManipulator.available=!1,this.resizeManipulators.forEach((e=>e.available=!1)),this._previewPlaneOutlineVisualElement.attached=!0,this._previewPlaneGridVisualElement.attached=!0,this._previewPlaneOutlineVisualElement.visible=!0,this._previewPlaneGridVisualElement.visible=!0):(this.shiftManipulator.available=!0,this.rotateHeadingManipulator.available=!0,this.rotateTiltManipulator.available=this.analysis.tiltEnabled,this.resizeManipulators.forEach((e=>e.available=!0)),b.updateShiftRestartHandle(this.shiftManipulator,i,e,this.view.state.camera),b.updateRotateHeadingHandle(this.rotateHeadingManipulator,i,e,this.view.renderCoordsHelper),b.updateRotateTiltHandle(this.rotateTiltManipulator,i,e),this.resizeManipulators.forEach(((t,a)=>b.updateResizeHandle(t,this._resizeHandles[a],i,e))),this._previewPlaneOutlineVisualElement.visible=!1,this._previewPlaneGridVisualElement.visible=!1);const a=d.set(g.sv3d.get(),d.length(e.basis1),d.length(e.basis2),1),n=u.fromScaling(g.sm4d.get(),a),s=u.multiply(n,i,n);this._previewPlaneOutlineVisualElement.transform=s,this._previewPlaneGridVisualElement.transform=s,this._updateMaterials()}_updateMaterials(){const e=D.getOutlineColor(this.view.effectiveTheme);e[3]*=this._previewPlaneOpacity;const t=_.clone(D.planeColor);t[3]*=this._previewPlaneOpacity,this._previewPlaneOutlineVisualElement.color=e,this._previewPlaneGridVisualElement.backgroundColor=t,this._previewPlaneGridVisualElement.gridColor=_.ZEROS}_updateManipulatorsInteractive(e){if(!e.grabbing)return this.shiftManipulator.interactive=!0,this.rotateHeadingManipulator.interactive=!0,this.rotateTiltManipulator.interactive=!0,void this.resizeManipulators.forEach((e=>{e.interactive=!0}));this.shiftManipulator.interactive=this.shiftManipulator===e,this.rotateHeadingManipulator.interactive=this.rotateHeadingManipulator===e,this.rotateTiltManipulator.interactive=this.rotateTiltManipulator===e,this.resizeManipulators.forEach((t=>{t.interactive=t===e}))}testData(){return{plane:this.analysisViewData.plane,setPointerMoveTimerMs:e=>{this._pointerMoveTimerMs=e}}}};function F(e,t,i,a){const n=b.createShiftPlane(i,y.normal(a),e.direction,P.create()),s=v.create();return P.intersectRay(n,e,s)?{type:"shift",creatingPointerId:t,hasBeenDragged:!1,shiftPlane:n,depth:0,startPoint:s}:null}function G(e){return"mouse"!==e.pointerType||0===e.button}I.disableEngineLayers=!1,e.__decorate([l.property()],I.prototype,"_clock",void 0),e.__decorate([l.property({constructOnly:!0})],I.prototype,"view",void 0),e.__decorate([l.property()],I.prototype,"analysisViewData",void 0),e.__decorate([l.property({readOnly:!0})],I.prototype,"state",null),e.__decorate([l.property({readOnly:!0})],I.prototype,"cursor",null),e.__decorate([l.property()],I.prototype,"analysis",null),e.__decorate([l.property()],I.prototype,"removeIncompleteOnCancel",void 0),e.__decorate([l.property({readOnly:!0})],I.prototype,"layersMode",void 0),e.__decorate([l.property({value:null})],I.prototype,"inputState",null),e.__decorate([l.property()],I.prototype,"_isPlacingSlicePlane",null),e.__decorate([l.property()],I.prototype,"_creatingPointerId",null),I=C=e.__decorate([c.subclass("esri.views.3d.analysis.Slice.SliceTool")],I);const A=y.create(),U=w.create();return I}));
