/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../analysis/SlicePlane","../../../../core/Accessor","../../../../core/Logger","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/boundedPlane","../../../../layers/Layer","../../../../layers/buildingSublayers/BuildingComponentSublayer","./sliceToolUtils","../support/projectionUtils","../../terrain/isTerrainSurfaceLayer"],(function(e,i,a,l,t,s,n,r,o,c,u,h,d,y,p,w,v){"use strict";const _="esri.views.3d.analysis.Slice.SliceController",S=t.getLogger(_);e.SliceController=class extends l{constructor(e){super(e),this._internalChange=!1,this._currentSlicePlane=null}initialize(){this.addHandles(this.analysis.excludedLayers.on("before-add",(e=>{const i=e.item;null!=i&&(i instanceof d||i instanceof y)?i instanceof d&&v.isTerrainSurfaceLayer(i)?(S.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(S.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())}))),C(this.view,this),this.addHandles([s.watch((()=>this.analysisViewData.plane),(()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()}),{sync:!0}),s.watch((()=>this.analysis.excludeGroundSurface),(()=>this._updateLayerViews()),{sync:!0}),this.analysis.excludedLayers.on("change",(()=>this._updateLayerViews())),s.watch((()=>[this.analysisViewData.active,this.analysisViewData.visible]),(()=>{this._updateActiveController(),this._updateViewSlicePlane()}),{sync:!0}),s.watch((()=>this._allLayerAndSubLayerViews),(()=>this._updateLayerViews()))]),this.addHandles([s.watch((()=>this.analysis.shape),(()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())}),{sync:!0})],"analysis"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane()}destroy(){this.analysisViewData.active&&(this.analysisViewData.active=!1,this.view.slicePlane=null,this._updateActiveController(),this._updateViewSlicePlane()),P(this.view,this),this.set("view",null)}get _allLayerAndSubLayerViews(){const e=this.view.allLayerViews.items;return e.concat(e.filter(p.isIBuildingSceneLayerView3D).flatMap((({sublayerViews:e})=>e.items)))}_updateBoundedPlaneFromSlicePlane(){const e=this.analysis.shape,i=this._currentSlicePlane;if(null==i&&null==e||null!=i&&null!=e&&e.equals(i))return;let a=null,l=null;if(null!=e?.position){const i=e.position.spatialReference,t=p.projectAndElevationAlignShape(e,this.view);null==t&&w.logFailedGeometryProjectionError(this.analysis,i,S),a=p.projectedShapeToPlane(t,this.view,{tiltEnabled:this.analysis.tiltEnabled},h.create()),null!=a&&(l={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height})}this._currentSlicePlane=l,this._internalChange=!0,this.analysisViewData.plane=a,this._internalChange=!1}_updateSlicePlaneFromBoundedPlane(){const e=this.analysisViewData.plane,i=p.planeToShape(e,this.view,this.view.spatialReference,new a);let l=null;null!=i&&(l={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=l,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane()}_updateActiveController(){if(g)return;const e=b(this.view);if(!e)return;if(this.analysisViewData.active)null!=e.activeController&&e.activeController!==this?(g=!0,e.activeController.analysisViewData.active=!1,g=!1):null!=e.activeController&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(null!=e.activeController&&e.activeController!==this)return;null!=e.activeController&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}}_updateViewSlicePlane(){V(this.view)}_updateLayerViews(){const e=null!=this.analysisViewData.plane&&this.analysisViewData.visible&&this.analysisViewData.active,i=[],a=e=>{"layers"in e?e.layers.forEach(a):i.push(e)};this.analysis.excludedLayers.forEach(a),this.view.allLayerViews.forEach((a=>{a.destroyed||("slicePlaneEnabled"in a&&(a.slicePlaneEnabled=e&&!i.includes(a.layer)),"sublayerViews"in a&&a.sublayerViews.forEach((a=>{a.slicePlaneEnabled=e&&!i.includes(a.sublayer)})))})),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface)}},i.__decorate([n.property()],e.SliceController.prototype,"view",void 0),i.__decorate([n.property()],e.SliceController.prototype,"analysis",void 0),i.__decorate([n.property()],e.SliceController.prototype,"analysisViewData",void 0),i.__decorate([n.property()],e.SliceController.prototype,"_allLayerAndSubLayerViews",null),e.SliceController=i.__decorate([u.subclass(_)],e.SliceController);const f=new Map;let g=!1;function V(e){const i=b(e),a=i?.activeController;null!=a?.analysisViewData.plane&&a.analysisViewData.visible?e.slicePlane=a.analysisViewData.plane:e.slicePlane=null}function C(e,i){f.has(e)||f.set(e,{all:[],activeController:null}),f.get(e)?.all.push(i)}function b(e){return f.get(e)}function P(e,i){if(!f.has(e))throw new Error("view expected in global slice register");const a=f.get(e),l=a?.all.lastIndexOf(i)??-1;if(!a||-1===l)throw new Error("controller expected in global slice register");a.all.splice(l,1),0===a.all.length&&f.delete(e)}Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
