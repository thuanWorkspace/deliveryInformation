/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../intl","../../../../../core/Accessor","../../../../../core/colorUtils","../../../../../core/has","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/quantityFormatUtils","../../../../../core/quantityUtils","../../../../../core/reactiveUtils","../../../../../core/unitUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/accessorSupport/decorators/subclass","../../../../../chunks/mat4","../../../../../chunks/mat4f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../support/viewUtils","../../../interactive/visualElements/LabelVisualElement","../../../interactive/visualElements/LineVisualElement","../../../interactive/visualElements/MeasurementAreaVisualElement","../../../interactive/visualElements/support/Segment","../../../webgl-engine/lib/Material","../../../webgl-engine/materials/lineStippleUtils","../../../../../intl/locale","../../../../../intl/messages"],(function(e,t,i,r,s,a,n,o,l,c,d,h,u,m,p,g,_,L,v,b,y,w,f,A,S,M,C,V,D){"use strict";var P;e.AreaMeasurementVisualization=class extends r{get _parameters(){const{accentColor:e,textColor:t}=this.view.effectiveTheme,i=s.unitRGBAFromColor(e),r=s.multiplyOpacityToUnitRGBA(e,.5),a=s.multiplyOpacityToUnitRGBA(s.getContrast(e),.5),n=s.getContrast(t,s.BrightnessThreshold.Low);return{accentColor:i,transparentAccentColor:r,transparentContrastColor:a,intersectingLineColor:[1,.2,0,1],textColor:t,textBackgroundColor:s.multiplyOpacity(n,.6),textCalloutColor:s.multiplyOpacity(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(e){super(e),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=b.create(),this._originTransform=L.create(),this.messages=null,this.viewData=O,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:e,_parameters:t,view:i}=this;this._path=new f.LineVisualElement({view:i,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:M.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new f.LineVisualElement({view:i,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:M.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new f.LineVisualElement({view:i,attached:!0,width:t.perimeterLineWidth,polygonOffset:!0,renderOccluded:M.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new f.LineVisualElement({view:i,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:M.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new f.LineVisualElement({view:i,attached:!0,width:t.projectionLineWidth,stipplePattern:C.createStipplePatternSimple(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:M.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new A.MeasurementAreaVisualElement({view:i,attached:!0,isDecoration:!0});const r={attached:!0,view:i,isDecoration:!0};this._areaLabel=new w.LabelVisualElement({...r,fontSize:P.Large}),this._perimeterLengthLabel=new w.LabelVisualElement({...r,fontSize:P.Small}),this.addHandles([d.watch((()=>[e.mode,this.visible,e.unit,e.measurementData,e.stagedPoint]),(()=>this._update()),d.syncAndInitial),d.watch((()=>i.state?.camera),(()=>this._updateLabels()),d.syncAndInitial),V.onLocaleChange((()=>this._updateMessageBundle())),d.watch((()=>this._parameters),(({accentColor:e,transparentAccentColor:t,transparentContrastColor:i,textColor:r,textBackgroundColor:s,textCalloutColor:a})=>{const{_path:n,_intersectedPath:o,_perimeter:l,_projectionLines:c,_measurementArea:d,_areaLabel:h,_perimeterLengthLabel:u}=this;n.color=e,o.color=e,l.color=e,c.color=e,d.color1=t,d.color2=i,h.textColor=r,h.backgroundColor=s,h.calloutColor=a,u.textColor=r,u.backgroundColor=s,u.calloutColor=a}),d.initial)]),this._updateMessageBundle()}destroy(){this._measurementArea=o.destroyMaybe(this._measurementArea),this._path=o.destroyMaybe(this._path),this._intersectedPath=o.destroyMaybe(this._intersectedPath),this._perimeter=o.destroyMaybe(this._perimeter),this._intersectedPerimeter=o.destroyMaybe(this._intersectedPerimeter),this._areaLabel=o.destroyMaybe(this._areaLabel),this._perimeterLengthLabel=o.destroyMaybe(this._perimeterLengthLabel),this._projectionLines=o.destroyMaybe(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;null!=e&&(this._updateViewData(e,t.path,t.stagedPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,i){const r=e.validMeasurement,s="geodesic"===e.actualMeasurementMode,a=s?e.geodesicArea:e.area;let o=1;if(a){const t=this._toPreferredAreaUnit(a,this.analysisViewData.unit);o=n.nextHighestPowerOfTen(Math.sqrt(t.value)/Math.sqrt(300)),o*=Math.sqrt(h.convertUnit(1,t.unit,"square-meters")),o/=e.unitNormalizer.normalizeDistance(1)}const l={validMeasurement:r,numVertices:e.numVertices,hasStagedVertex:e.hasStagedVertex,path:t,pathVersion:t.version,stagedPoint:i,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:s?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:s?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:s?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:r?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",l)}_updateOrigin(){const e=this.viewData;y.midpoint(e.positionsRenderCoords,this._origin),_.fromTranslation(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,i=this.view.renderCoordsHelper.spatialReference,r=t.mode,s=[],a=[],n=[],o=t.numVertices,l=t.validMeasurement?o:o-1;for(let d=0;d<l;++d){const l=t[e][d],c=t[e][(d+1)%o];let h=null;switch(r){case"euclidean":h=new S.EuclideanSegment(l,c);break;case"geodesic":h=new S.GeodesicSegment(l,c,i)}t.intersectingSegments.has(d)?n.push(h):a.push(h),s.push(h)}let c=null;return t.validMeasurement&&t.hasStagedVertex&&l>=2?c=s[s.length-2]:t.hasStagedVertex&&l>=1&&(c=s[s.length-1]),{all:s,nonIntersecting:a,intersecting:n,stagedSegment:c}}_updatePathSegments(){const{visible:e}=this,t=this._createSegments("positionsRenderCoords");this._path.setGeometryFromSegments(t.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=t.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.mode,r=e.numVertices;if(r>0&&e.validMeasurement&&"euclidean"===i){const i=[];for(let t=0;t<r;++t){const r=b.create();v.subtract(r,e.positionsRenderCoords[t],this._origin);const s=b.create();v.subtract(s,e.positionsFittedRenderCoords[t],this._origin),i.push([r,s])}this._projectionLines.geometry=i,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{measurementData:t,mode:i,path:r}=e;if(!r)return;const s=this.visible,a=this._formatAreaLabel(this.messages,"geodesic"===i?t.geodesicArea:t.area,this.analysisViewData.unit);if(null!=a?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&s):this._areaLabel.visible=!1,this._set("areaLabel",a),e.validMeasurement&&0===e.intersectingSegments.size){const i="geodesic"===e.mode,r=i?t.geodesicPathLength:t.validMeasurement?t.perimeterLength:t.pathLength,a=this._formatLengthLabel(this.messages,r,this.analysisViewData.unit);this._set("perimeterLengthLabel",a),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=a,this._perimeterLengthLabel.visible=!0;let n=!0;for(let s=0;s<e.numVertices;++s){const r=(e.perimeterLengthLabelSegmentIndex+s)%e.numVertices,a=i||!t.validMeasurement?this._pathSegments[r]:this._perimeterSegments[r];if(n=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:a,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;n=!1}this._perimeterLengthLabel.visible=n&&s}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return c.toUnit(e,this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case"metric":return h.adaptiveMetricAreaUnit(e.value,e.unit);case"imperial":return h.adaptiveImperialAreaUnit(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case"metric":return h.adaptiveMetricLengthUnit(e.value,e.unit);case"imperial":return h.adaptiveImperialLengthUnit(e.value,e.unit);default:return i}}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(e,t,i){return e&&t&&l.formatDecimal(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&l.formatDecimal(e,t,this._preferredLengthUnit(t,i))}_updateMessageBundle(){this.loadingMessages=!0,D.fetchMessageBundle("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}},t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"_parameters",null),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"view",void 0),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"messages",void 0),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"analysis",void 0),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"viewData",void 0),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"analysisViewData",void 0),t.__decorate([u.property({readOnly:!0})],e.AreaMeasurementVisualization.prototype,"areaLabel",void 0),t.__decorate([u.property({readOnly:!0})],e.AreaMeasurementVisualization.prototype,"perimeterLengthLabel",void 0),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"loadingMessages",void 0),t.__decorate([u.property()],e.AreaMeasurementVisualization.prototype,"visible",null),e.AreaMeasurementVisualization=t.__decorate([g.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],e.AreaMeasurementVisualization),function(e){e[e.Small=12]="Small",e[e.Large=16]="Large"}(P||(P={}));const O={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,pathVersion:-1,stagedPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null};Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
