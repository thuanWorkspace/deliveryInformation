/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../core/has","../3d/webgl-engine/core/shaderModules/interfaces","./AppleAmdDriverHelper","./BufferObject","./contextUtils","./enums","./FramebufferObject","./TextureDescriptor","./WebGLDriverTestModule"],(function(e,r,t,i,n,o,s,a,p,l){"use strict";class c extends l.WebGLDriverTestModule{constructor(e){super(),this._rctx=e,this._helperProgram=null,this._rctx.type===o.ContextType.WEBGL2&&r("mac")&&r("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(e){const r=this._rctx,t=r.getBoundFramebufferObject(),{x:i,y:o,width:l,height:c}=r.getViewport();r.resetState();const g=new p.TextureDescriptor(1);g.wrapMode=s.TextureWrapMode.CLAMP_TO_EDGE,g.samplingMode=s.TextureSamplingMode.NEAREST;const d=new a.FramebufferObject(r,g),u=n.BufferObject.createIndex(this._rctx,s.Usage.STATIC_DRAW,new Uint8Array([0]));r.bindFramebuffer(d),r.setViewport(0,0,1,1),r.useProgram(this._helperProgram),r.bindBuffer(u,s.BufferType.ELEMENT_ARRAY_BUFFER),r.drawElements(s.PrimitiveType.POINTS,1,s.DataType.UNSIGNED_BYTE,0),r.useProgram(e),r.bindVAO(null),r.drawArrays(s.PrimitiveType.TRIANGLES,0,258);const f=new Uint8Array(4);return d.readPixels(0,0,1,1,s.PixelFormat.RGBA,s.PixelType.UNSIGNED_BYTE,f),r.setViewport(i,o,l,c),r.bindFramebuffer(t),d.dispose(),u.dispose(),255===f[0]}_prepareProgram(){const e=85,r=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${t.glsl.float(e)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,i=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${t.glsl.float(e)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(r,i,new Map([]))}_prepareHelperProgram(){const e=i.AppleAmdDriverHelper.getShaderSources();return this._rctx.programCache.acquire(e.vertex,e.fragment,new Map([]))}}e.DrawArraysRequiresIndicesTypeReset=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
