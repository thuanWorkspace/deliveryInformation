/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../chunks/tslib.es6","../core/ArrayPool","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass"],(function(e,i,s,a,t,r,l,h,n){"use strict";const o={widthBreakpoint:{getValue(e){const i=e.viewSize[0],s=e.breakpoints,a=this.values;return i<=s.xsmall?a.xsmall:i<=s.small?a.small:i<=s.medium?a.medium:i<=s.large?a.large:a.xlarge},values:{xsmall:"xsmall",small:"small",medium:"medium",large:"large",xlarge:"xlarge"},valueToClassName:{xsmall:"esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge",small:"esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge",medium:"esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge",large:"esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge",xlarge:"esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large"}},heightBreakpoint:{getValue(e){const i=e.viewSize[1],s=e.breakpoints,a=this.values;return i<=s.xsmall?a.xsmall:i<=s.small?a.small:i<=s.medium?a.medium:i<=s.large?a.large:a.xlarge},values:{xsmall:"xsmall",small:"small",medium:"medium",large:"large",xlarge:"xlarge"},valueToClassName:{xsmall:"esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge",small:"esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge",medium:"esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge",large:"esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge",xlarge:"esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large"}},orientation:{getValue(e){const i=e.viewSize,s=i[0],a=i[1],t=this.values;return a>=s?t.portrait:t.landscape},values:{portrait:"portrait",landscape:"landscape"},valueToClassName:{portrait:"esri-view-orientation-portrait",landscape:"esri-view-orientation-landscape"}}},m={xsmall:544,small:768,medium:992,large:1200};function g(e){const i=e;return i&&i.xsmall<i.small&&i.small<i.medium&&i.medium<i.large}function w(e,i){return i?o[e].valueToClassName[i].split(" "):[]}const d=e=>{let r=class extends e{constructor(...e){super(...e),this.orientation=null,this.widthBreakpoint=null,this.heightBreakpoint=null,this.breakpoints=m}initialize(){this.addHandles(a.watch((()=>[this.breakpoints,this.size]),(()=>this._updateClassNames()),a.initial))}destroy(){this.destroyed||this._removeActiveClassNames()}set breakpoints(e){if(e===this._get("breakpoints"))return;const i=g(e);if(!i){const e=JSON.stringify(m,null,2);console.warn("provided breakpoints are not valid, using defaults:"+e)}e=i?e:m,this._set("breakpoints",{...e})}_updateClassNames(){if(!this.container)return;const e=s.acquire(),i=s.acquire();let a,t=!1;for(a in o){const s=this[a],r=o[a].getValue({viewSize:this.size,breakpoints:this.breakpoints});s!==r&&(t=!0,this[a]=r,w(a,s).forEach((e=>i.push(e))),w(a,r).forEach((i=>e.push(i))))}t&&(this._applyClassNameChanges(e,i),s.release(e),s.release(i))}_applyClassNameChanges(e,i){const s=this.container;s&&(i.forEach((e=>s.classList.remove(e))),e.forEach((e=>s.classList.add(e))))}_removeActiveClassNames(){const e=this.container;if(!e)return;let i;for(i in o)w(i,this[i]).forEach((i=>e.classList.remove(i)))}};return i.__decorate([t.property()],r.prototype,"breakpoints",null),i.__decorate([t.property()],r.prototype,"orientation",void 0),i.__decorate([t.property()],r.prototype,"widthBreakpoint",void 0),i.__decorate([t.property()],r.prototype,"heightBreakpoint",void 0),r=i.__decorate([n.subclass("esri.views.BreakpointsOwner")],r),r};e.BreakpointsOwner=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
