/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../chunks/vec2","../../support/QueueProcessor"],(function(e,t,s,r,o,i,c,n,u,a){"use strict";function h(e,t){return e.length=0,t.forEach((t=>e.push(t))),e}const l=new Set,p=[],y=new Map,_=[0,0];let d=class extends t{constructor(e){super(e),this._keyToItem=new Map,this.concurrency=6,this.strategy="scale-first",this.tileInfoView=null}initialize(){const{concurrency:e,process:t,strategy:s}=this;this._queue=new a.QueueProcessor({concurrency:e,process:(e,s)=>{const r=this._keyToItem.get(e);return t(r,{signal:s})},peeker:"scale-first"===s?e=>this._peekByScaleFirst(e):e=>this._peekByCenterFirst(e)})}destroy(){this.clear(),this._queue=s.destroyMaybe(this._queue)}get length(){return this._queue?this._queue.length:0}get onGoingCount(){return this._keyToItem.size}abort(e){const t="string"==typeof e?e:e.id;this._queue.abort(t)}clear(){this._queue.clear(),this._keyToItem.clear()}has(e){return"string"==typeof e?this._keyToItem.has(e):this._keyToItem.has(e.id)}isOngoing(e){const t="string"==typeof e?e:e.id;return this.has(t)&&this._queue.isOngoing(t)}pause(){this._queue.pause()}push(e){const t=e.key.id;if(this._queue.has(t))return this._queue.get(t);const s=this._queue.push(t),r=()=>{this._keyToItem.delete(t)};return this._keyToItem.set(t,e),s.then(r,r),s}reset(){this._queue.reset()}resume(){this._queue.resume()}_peekByScaleFirst(e){if(!this.state)return e.values().next().value;const t=this.tileInfoView;let s=Number.NEGATIVE_INFINITY,r=Number.POSITIVE_INFINITY;e.forEach((e=>{const t=this._keyToItem.get(e),o=this.tileInfoView.getTileScale(t.key);y.has(o)||(y.set(o,[]),s=Math.max(o,s),r=Math.min(o,r)),y.get(o).push(t.key),l.add(o)}));let o=this.state.scale;y.has(o)||(h(p,l),p.sort(((e,t)=>e-t)),o=p.reduce(((e,t)=>Math.abs(t-o)<Math.abs(e-o)?t:e),p[0])),o=Math.min(o,s),o=Math.max(o,r);const i=y.get(o),c=t.getClosestInfoForScale(o),n=c.getColumnForX(this.state.center[0]),u=c.getRowForY(this.state.center[1]);return i.sort(((e,t)=>{const s=c.denormalizeCol(e.col,e.world),r=c.denormalizeCol(t.col,t.world);return Math.sqrt((n-s)*(n-s)+(u-e.row)*(u-e.row))-Math.sqrt((n-r)*(n-r)+(u-t.row)*(u-t.row))})),l.clear(),y.clear(),i[0].id}_peekByCenterFirst(e){if(!this.state)return e.values().next().value;const t=this.tileInfoView,s=this.state.center;let r,o=Number.POSITIVE_INFINITY;return e.forEach((e=>{const i=this._keyToItem.get(e);t.getTileCoords(_,i.key);const c=u.distance(_,s);c<o&&(o=c,r=i.key)})),r.id}};e.__decorate([r.property({constructOnly:!0})],d.prototype,"concurrency",void 0),e.__decorate([r.property({constructOnly:!0})],d.prototype,"process",void 0),e.__decorate([r.property()],d.prototype,"state",void 0),e.__decorate([r.property({constructOnly:!0})],d.prototype,"strategy",void 0),e.__decorate([r.property({constructOnly:!0})],d.prototype,"tileInfoView",void 0),d=e.__decorate([n.subclass("esri.views.2d.tiling.TileQueue")],d);return d}));
