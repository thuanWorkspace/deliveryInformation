/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../chunks/earcut","../../../geometry/support/aaBoundingRect","../../../geometry/support/coordsUtils","../../../geometry/support/normalizeUtilsSync","../../../geometry/support/spatialReferenceUtils","../../../layers/graphics/data/projectionSupport","../tiling/TileInfoView","../tiling/TileKey","../tiling/TileQueue","../tiling/TileStrategy","../engine/webgl/definitions","../engine/webgl/TurboLine","./LayerView2D","./support/DisplayGL","./support/util","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,t,s,r,i,o,n,a,c,l,h,d,p,u,f,y,x,g,v,T,m,w,_){"use strict";const R=new Set,O=[],b=[];class M{constructor(e,t,s,r,i,o,n,c=[0,0],l=a.create()){this.id=e,this.level=t,this.row=s,this.col=r,this.world=i,this.resolution=o,this.scale=n,this.coords=c,this.bounds=l}}let z=class extends(_(v.LayerView2DMixin(w))){constructor(e){super(e),this._tileMap=new Map,this.container=new T(this),this.layer=null,this.tiles=[],this._renderTarget={framebuffer:null,viewport:[0,0,0,0]}}get _tileInfoView(){const e=this.layer?.tileInfo;return e?new p(e):null}get context(){return this.view.stage.context.gl}attach(){}detach(){}requestRender(){this.container.requestRender()}tilesChanged(e,t){}supportsSpatialReference(e){const t=this.layer?.tileInfo;return!t||h.equals(t.spatialReference,e)}async doRefresh(){}isUpdating(){return!1}update(e){const t=this._tileInfoView,s=this.tiles;if(t){const r=t.getTileCoverage(e.state,0),i=r?.spans,o=r?.lodInfo;if(i?.length&&o){const e=o.level;for(const{row:t,colFrom:r,colTo:n}of i)for(let i=r;i<=n;i++){const r=o.normalizeCol(i),n=o.getWorldForColumn(i),a=`${e}/${t}/${r}/${n}`;if(!this._tileMap.has(a)){const i=new M(a,e,t,r,n,o.resolution,o.scale);o.getTileCoords(i.coords,i,!1),o.getTileBounds(i.bounds,i,!0),this._tileMap.set(a,i),s.push(i),O.push(i)}R.add(a)}}}for(let r=s.length-1;r>=0;r--){const e=s[r];R.has(e.id)||(s.splice(r,1),b.push(e),this._tileMap.delete(e.id))}(O.length||b.length)&&(this.tilesChanged(O,b),O.length=b.length=0),R.clear(),this.requestRender()}moveStart(){}viewChange(){this.requestUpdate()}moveEnd(){}bindRenderTarget(){this.context.bindFramebuffer(this.context.FRAMEBUFFER,this._renderTarget.framebuffer),this.context.viewport(this._renderTarget.viewport[0],this._renderTarget.viewport[1],this._renderTarget.viewport[2],this._renderTarget.viewport[3])}getRenderTarget(){return this._renderTarget}async tessellateExtent(e){const t={vertices:[],indices:[]},s=await this._projectAndNormalizeGeometry(e),r=t.vertices.length;return t.vertices.push({x:s.xmin,y:s.ymin,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:0,distance:0}),t.vertices.push({x:s.xmax,y:s.ymin,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:0,distance:0}),t.vertices.push({x:s.xmin,y:s.ymax,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:1,distance:0}),t.vertices.push({x:s.xmax,y:s.ymax,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:1,distance:0}),t.indices.push(r,r+1,r+2,r+1,r+3,r+2),t}async tessellatePoint(e,t){const s=await this._projectAndNormalizeGeometry(e);return this._tessellatePoints([s],t)}async tessellateMultipoint(e,t){const s=await this._projectAndNormalizeGeometry(e),r=s.points.map((e=>({x:e[0],y:e[1],spatialReference:s.spatialReference})));return this._tessellatePoints(r,t)}async _tessellatePoints(e,t){const s={vertices:[],indices:[]};for(const r of e){const e=s.vertices.length;s.vertices.push({x:r.x,y:r.y,xOffset:t.x,yOffset:t.y+t.height,uTexcoord:0,vTexcoord:0,distance:0}),s.vertices.push({x:r.x,y:r.y,xOffset:t.x+t.width,yOffset:t.y+t.height,uTexcoord:1,vTexcoord:0,distance:0}),s.vertices.push({x:r.x,y:r.y,xOffset:t.x,yOffset:t.y,uTexcoord:0,vTexcoord:1,distance:0}),s.vertices.push({x:r.x,y:r.y,xOffset:t.x+t.width,yOffset:t.y,uTexcoord:1,vTexcoord:1,distance:0}),s.indices.push(e,e+1,e+2,e+1,e+3,e+2)}return s}async tessellatePolyline(e,t){const s={vertices:[],indices:[]},r=(await this._projectAndNormalizeGeometry(e)).paths;if(!r?.length)return s;let i;const o=new g.LineTessellation(((e,r,o,n,a,c,l,h,d,p,u)=>{const f=s.vertices.length;return s.vertices.push({x:e,y:-r,xOffset:l*t/2,yOffset:h*t/2,uTexcoord:u/i,vTexcoord:(p+1)/2,distance:u}),f}),((e,t,r)=>{s.indices.push(e,t,r)}),!0);for(const n of r){i=0;for(let t=1;t<n.length;++t){const e=n[t][0]-n[t-1][0],s=n[t][1]-n[t-1][1];i+=Math.sqrt(e*e+s*s)}const e=n.map((e=>({x:e[0],y:-e[1]})));o.tessellate(e,L)}return s}async tessellatePolygon(e){const t={vertices:[],indices:[]},s=await this._projectAndNormalizeGeometry(e),r=s.rings;if(!r?.length)return t;c.closeRings(s);for(const c of s.rings)for(const e of c)e[1]=-e[1];let i=1/0,o=1/0,n=-1/0,a=-1/0;return m.analyzeRings(s.rings,(()=>{}),((e,t,s)=>{for(let r=e;r<t;r+=2)i=Math.min(i,s[r]),o=Math.min(o,s[r+1]),n=Math.max(n,s[r]),a=Math.max(a,s[r+1])})),m.analyzeRings(s.rings,(()=>{}),((e,s,r,c)=>{this._invokeEarcut(t,e,s,r,c,[i,o,n,a])})),t}_invokeEarcut(e,t,s,r,i,o){const a=r.slice(t,s),c=n.earcut(a,i,2),l=e.vertices.length;for(let n=0;n<a.length;n+=2){const t=a[n],s=a[n+1];e.vertices.push({x:t,y:-s,xOffset:0,yOffset:0,uTexcoord:(t-o[0])/(o[2]-o[0]),vTexcoord:1-(s-o[1])/(o[3]-o[1]),distance:0})}for(let n=0;n<c.length;++n)e.indices.push(l+c[n])}async _projectAndNormalizeGeometry(e){await d.checkProjectionSupport(e.spatialReference,this.view.spatialReference);const t=l.normalizeCentralMeridianForDisplay(e);return d.project(t,e.spatialReference,this.view.spatialReference)}};e.__decorate([t.property()],z.prototype,"_tileInfoView",null),e.__decorate([t.property()],z.prototype,"layer",void 0),e.__decorate([t.property()],z.prototype,"context",null),z=e.__decorate([o.subclass("esri.views.2d.layers.BaseLayerViewGL2D")],z);const L={pixelCoordRatio:1,wrapDistance:1e11,halfWidth:x.thinLineHalfWidthThreshold+1,initialDistance:0,textured:!0,offset:0};return z}));
