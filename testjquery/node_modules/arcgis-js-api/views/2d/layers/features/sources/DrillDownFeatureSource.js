/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/has","../../../../../core/promiseUtils","./BaseFeatureSource"],(function(e,t,r,s){"use strict";const a=t("esri-mobile"),i={maxDrillLevel:a?1:4,maxRecordCountFactor:a?1:3};class o extends s.BaseFeatureSource{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),a=s.signal,o=e.getQuantizationParameters();let n=0;const c=async(d,u)=>{const l=this._queryInfo,p=this.createTileQuery(d,{maxRecordCountFactor:t?i.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:o});n++;try{const t=await this.enqueueQuery({tile:e,query:p,signal:a,depth:u});if(n--,r.throwIfAborted(a),!t)return;if(l!==this._queryInfo)return void c(d,u);if(t.exceededTransferLimit&&u<i.maxDrillLevel){for(const e of d.createChildTiles())c(e,u+1);return}const o={id:e.id,addOrUpdate:t,end:0===n,type:"append"};s.add({query:p,message:o}),this._onMessage(o)}catch(y){if(!r.isAbortError(y)){const t={id:e.id,addOrUpdate:null,end:!0,type:"append"};s.add({query:p,message:t}),this._onMessage(t)}}};c(e,0)}}e.DrillDownFeatureSource=o,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
