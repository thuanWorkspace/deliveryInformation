/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/Logger","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","./BaseFeatureSource","../support/FeatureSetReaderPBFIndirect","../support/UpdateToken"],(function(e,t,s,r,a,o,n,i,d,u,l){"use strict";function h(e,t,s){const r=e.getXHydrated(),a=e.getYHydrated(),o=t.getColumnForX(r),n=Math.floor(t.normalizeCol(o));return`${s}/${Math.floor(t.getRowForY(a))}/${n}`}function c(e,t){if(null==e)return null;const s=t.transform,r=e.getQuantizationTransform();if(null==r){const[t,r]=s.scale,[a,o]=s.translate,n=-a/t,i=1/t,d=o/r,u=1/-r;return e.transform(n,d,i,u)}const[a,o]=r.scale,[n,i]=r.translate,[d,u]=s.scale,[l,h]=s.translate,c=a/d,g=(n-l)/d,_=o/u,p=(-i+h)/u;return e.transform(g,p,c,_)}e.SnapshotFeatureSource=class extends d.BaseFeatureSource{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new n(1e3),this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),this._featureCount??(this._featureCount=t.initialFeatureCount),null!=t.changedFeatureCount&&(this._featureCount=t.changedFeatureCount),this._hasAggregates=!!e.targets?.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e){const e=this._featureCount;return a.assertIsSome(e,"Expected featureCount to be defined"),this._invalidated=!1,this._subscriptions.forEach((e=>e.clear())),this._downloadPromise=this._download(e),void await this._downloadPromise}const t=this._queries.map((({query:e,reader:t})=>this._sendPatchQuery(e,t)));await Promise.all(t),this._subscriptions.forEach((e=>{e.requests.done.forEach((e=>this._onMessage(e.message)))}))}async refresh(e,t){t&&(this._featureCount=t.featureCount),await this.resend(!0)}async _sendPatchQuery(e,t){const s=null!=e.outFields?e.outFields:[],r=this._queryInfo.outFields,a=r.filter((e=>!s.includes(e)));if(!a.length)return;const n=e.clone(),i=this._signal;n.returnGeometry=!1,n.returnCentroid=!1,n.outFields=a,e.outFields=r;const d=await this.enqueueQuery({query:n,depth:0,signal:i});o.throwIfAborted({signal:i}),t.joinAttributes(d)}async _fetchDataTile(e){this._downloadPromise??(this._downloadPromise=this._download(this._featureCount));const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let d=0;d<r;d++){const r=c(t[d],e),a={type:"append",id:e.id,addOrUpdate:r,end:!1,status:l.UpdateToken.empty()};s.add({query:null,message:a}),this._hasAggregates||await o.after(1),this._onMessage(a)}const a=c(r>=0?t[r]:null,e),n=this._didSendEnd,i={type:"append",id:e.id,addOrUpdate:a,end:n,status:l.UpdateToken.empty()};s.add({query:null,message:i}),this._onMessage(i)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),a=Array.from({length:r},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())).map((e=>this._downloadPage(e,t,s)));await Promise.all(a),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(t){r.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource").error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",t)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const r=this.pageSize,a={start:e*r,num:r,cacheHint:!0};null!=this.maxRecordCountFactor&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createQuery(a),i=this._signal,d=await this.enqueueQuery({query:n,depth:e,signal:i});o.throwIfAborted({signal:i}),this._queries.push({query:n,reader:d}),this._store.insert(d),s.add(d.instance);const u=d.getCursor();for(;u.next();)t.set(u.getDisplayId());this._send(d)}_send(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,r=new Set,a=new Map;this._subscriptions.forEach((e=>{const o=e.tile;s.set(o.key.id,null),t=o.tileInfoView,r.add(o.level);const{row:n,col:i}=o.key,d=`${o.level}/${n}/${i}`,u=a.get(d)??[];u.push(e),a.set(d,u)}));for(const o of r){const r=t.getLODInfoAt(o),n=e.getCursor();for(;n.next();){const e=h(n,r,o),t=n.getIndex();if(a.has(e))for(const r of a.get(e)){const e=r.tile.id;let a=s.get(e);null==a&&(a=[],s.set(e,a)),a.push(t)}}}s.forEach(((t,s)=>{if(null!=t){const r=this._subscriptions.get(s),a={type:"append",id:s,addOrUpdate:c(u.FeatureSetReaderIndirect.from(e,t),r.tile),end:!1,status:l.UpdateToken.empty()};r.add({query:null,message:a}),this._onMessage(a)}}))}_sendEnd(){this._subscriptions.forEach((e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:l.UpdateToken.empty()};e.add({query:null,message:t}),this._onMessage(t)})),this._didSendEnd=!0}},e.SnapshotFeatureSource=t.__decorate([i.subclass("esri.view.2d.layers.features.sources.SnapshotFeatureSource")],e.SnapshotFeatureSource),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
