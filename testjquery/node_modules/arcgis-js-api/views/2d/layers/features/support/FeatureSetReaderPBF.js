/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../core/Error","../../../../../core/Logger","../../../../../core/maybe","../../../../../core/pbf","../../../../../layers/graphics/featureConversionUtils","../../../../../layers/graphics/OptimizedFeature","../../../../../layers/graphics/OptimizedGeometry","./FeatureSetReader","./FeatureSetReaderPBFHeader"],(function(e,t,r,s,n,i,a,h,o,d){"use strict";const u=!0,c=268435455,g=128,l=128e3,_={small:{delta:new Int32Array(g),decoded:new Int32Array(g)},large:{delta:new Int32Array(l),decoded:new Int32Array(l)}};function f(e){return e<=_.small.delta.length?_.small:(e<=_.large.delta.length||(_.large.delta=new Int32Array(Math.round(1.25*e)),_.large.decoded=new Int32Array(Math.round(1.25*e))),_.large)}function y(e){try{const t=2,r=new n(new Uint8Array(e),new DataView(e));for(;r.next();){if(r.tag()===t)return I(r.getMessage());r.skip()}}catch(s){const e=new t("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:s});r.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(e)}return null}function I(e){const t=1;for(;e.next();){if(e.tag()===t)return e.getMessage();e.skip()}return null}function p(e){const t=1,r=2,s=3,n=4,i=5,a=6,h=7,o=8,d=9,u=e.getLength(),c=e.pos()+u;for(;e.pos()<c&&e.next();)switch(e.tag()){case t:return e.getString();case r:return e.getFloat();case s:return e.getDouble();case n:return e.getSInt32();case i:return e.getUInt32();case a:return e.getInt64();case h:return e.getUInt64();case o:return e.getSInt64();case d:return e.getBool();default:return e.skip(),null}return null}function m(e,t,r,s,n,i){return.5*Math.abs(e*s+r*i+n*t-e*i-r*t-n*s)}function x(e,t,r,s){return 0===e*s-r*t&&e*r+t*s>0}class S extends o.FeatureSetReader{static fromBuffer(e,t,r=!1){const s=t.geometryType,n=y(e),i=d.parseHeader(n,"esriGeometryPoint"===s,r),a=o.FeatureSetReader.createInstance();return new S(a,n,i,t)}constructor(e,t,r,s){super(e,s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=s.geometryType,this._reader=t,this._header=r,this._hasNext=r.hasFeatures,this._isPoints="esriGeometryPoint"===s.geometryType}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get _size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){const e=this.readCentroid(),t={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null};return this._cache.legacyFeature=t,t}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new a.OptimizedFeature(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return null==t?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return null==t?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readUnquantizedGeometry(e);return i.convertToGeometry(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,r]=e.coords;return{x:t,y:r}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(void 0===this._cache.unquantGeometry){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;const r=f(t.coords.length).decoded,s=t.clone(r),n=s.coords;let i=0;for(const e of s.lengths){for(let t=1;t<e;t++){const e=2*(i+t),r=2*(i+t-1);n[e]+=n[r],n[e+1]+=n[r+1]}i+=e}return this._cache.unquantGeometry=s,s}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===c)return null;const e=this.getXHydrated(),t=this.getYHydrated();return new h([],[e,t])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),r=this.getQuantizationTransform();return null!=r&&i.unquantizeOptimizedGeometry(t,t,this.hasZ,this.hasM,r),t}readGeometry(e=!1){if(void 0===this._cache.geometry){let r=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===c)return null;const e=this.getX(),t=this.getY();r=new h([],[e,t])}else{const s=this._header.offsets.geometry[this._featureIndex],n=this._reader;if(0===s){const e=this._readServerCentroid();if(!e)return null;const[t,r]=e.coords;return this.createQuantizedExtrudedGeometry(t,r)}n.move(s);try{if(r=e?this._parseGeometryForDisplay(n):this._parseGeometry(n),!r){const e=this._readServerCentroid();if(!e)return null;const[t,r]=e.coords;return this.createQuantizedExtrudedGeometry(t,r)}}catch(t){return console.error("Failed to parse geometry!",t),null}}return this._cache.geometry=r,r}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e;return e=this._computeCentroid(),e||(e=this._readServerCentroid()),this._cache.centroid=e??void 0,e??null}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new S(this.instance,e,this._header,this.fullSchema());return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readAttribute(e,t){const r=this._header.fields.get(e);if(null==r)return;let s=this._readAttributeAtIndex(r.index);"esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(s=this.parseTimestampOffset(s));const n=this._header.fields.isDateField(r.name);return t?null==s?s:n?new Date(s):s:s}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;return r.move(t),p(r)}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex]+this._tx,t=this._header.centroid[2*this._featureIndex+1]+this._ty;return e===c?null:new h([],[e,t])}_parseGeometry(e){const t=2,r=3,s=e.asUnsafe(),n=s.getLength(),i=s.pos()+n,a=[],o=[];for(;s.pos()<i&&s.next();)switch(s.tag()){case t:{const e=s.getUInt32(),t=s.pos()+e;for(;s.pos()<t;)o.push(s.getUInt32());break}case r:{const e=s.getUInt32(),t=s.pos()+e;for(a.push(s.getSInt32()+this._tx),a.push(s.getSInt32()+this._ty),this.hasZ&&s.getSInt32(),this.hasM&&s.getSInt32();s.pos()<t;)a.push(s.getSInt32()),a.push(s.getSInt32()),this.hasZ&&s.getSInt32(),this.hasM&&s.getSInt32();break}default:s.skip()}return a.length?new h(o,a):null}_parseGeometryForDisplay(e){const t=2,r=3,n=e.asUnsafe(),i=n.getLength(),a=n.pos()+i,o=[],d=[];let c=0,g=0,l=null,_=0;const y="esriGeometryPolygon"===this.geometryType;for(;n.pos()<a&&n.next();)switch(n.tag()){case t:{const e=n.getUInt32(),t=n.pos()+e;for(;n.pos()<t;){const e=n.getUInt32();o.push(e),c+=e}l=f(2*c).delta;break}case r:{n.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);s.assertIsSome(l);for(const t of o)if(g+e*t>l.length)for(let e=0;e<t;e++)n.getSInt32(),n.getSInt32(),this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();else if(y&&u){const e=this.getAreaSimplificationThreshold(t,this._header.vertexCount);let r=2,s=1;const i=!1;let a=n.getSInt32(),h=n.getSInt32();l[g++]=a,l[g++]=h,this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();let o=n.getSInt32(),u=n.getSInt32();for(this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();r<t;){let t=n.getSInt32(),i=n.getSInt32();this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32();const d=a+o,c=h+u;m(a,h,d,c,d+t,c+i)>=e?(_+=-.5*(d-a)*(c+h),s>1&&x(l[g-2],l[g-1],o,u)?(l[g-2]+=o,l[g-1]+=u):(l[g++]=o,l[g++]=u,s++),a=d,h=c):(t+=o,i+=u),o=t,u=i,r++}s<3||i?g-=2*s:(_+=-.5*(a+o-a)*(h+u+h),x(l[g-2],l[g-1],o,u)?(l[g-2]+=o,l[g-1]+=u,d.push(s)):(l[g++]=o,l[g++]=u,d.push(++s)))}else{let e=0,r=n.getSInt32(),s=n.getSInt32();this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32(),l[g++]=r,l[g++]=s,e+=1;for(let i=1;i<t;i++){const t=n.getSInt32(),a=n.getSInt32(),h=r+t,o=s+a;_+=-.5*(h-r)*(o+s),this.hasZ&&n.getSInt32(),this.hasM&&n.getSInt32(),i>2&&x(l[g-2],l[g-1],t,a)?(l[g-2]+=t,l[g-1]+=a):(l[g++]=t,l[g++]=a,e+=1),r=h,s=o}d.push(e)}break}default:n.skip()}if(this._cache.area=_,!d.length)return null;if(this._tx||this._ty){let e=0;s.assertIsSome(l);for(const t of d)l[2*e]+=this._tx,l[2*e+1]+=this._ty,e+=t}return new h(d,l)}}e.FeatureSetReaderPBF=S,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
