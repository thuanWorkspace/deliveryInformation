/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Logger","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/Error","../../../../../core/accessorSupport/decorators/subclass","../../../../../renderers/support/heatmapUtils","../../../engine/BitmapTileContainer","./BaseTileRenderer","./support/HeatmapSource"],(function(e,t,i,r,n,s,o,a,l,c,d,p){"use strict";e.HeatmapTileRenderer=class extends d{constructor(e){super(e),this._intensityInfo={minDensity:0,maxDensity:0},this.type="heatmap",this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new c.BitmapTileContainer(e.tileInfoView)}createTile(e){const t=this._container.createTile(e);return this.tileInfoView.getTileCoords(t.bitmap,e),t.bitmap.resolution=this.tileInfoView.getTileResolution(e),t}onConfigUpdate(){const e=this.layer.renderer;if("heatmap"===e.type){const{minDensity:t,maxDensity:i,colorStops:r}=e;this._intensityInfo.minDensity=t,this._intensityInfo.maxDensity=i,this._gradient=l.generateGradient(r),this.tiles.forEach((e=>{const r=e.bitmap.source;r&&(r.minDensity=t,r.maxDensity=i,r.gradient=this._gradient,e.bitmap.invalidateTexture(),e.bitmap.requestRender())}))}}hitTest(){return Promise.resolve([])}install(e){e.addChild(this._container)}uninstall(e){this._container.removeAllChildren(),e.removeChild(this._container)}disposeTile(e){this._container.removeChild(e),e.destroy()}supportsRenderer(e){return e&&"heatmap"===e.type}onTileData(e){const t=this.tiles.get(e.tileKey);if(!t)return;const i=e.intensityInfo,{minDensity:r,maxDensity:n}=this._intensityInfo,s=t.bitmap.source||new p.HeatmapSource;s.intensities=i?.matrix||null,s.minDensity=r,s.maxDensity=n,s.gradient=this._gradient,t.bitmap.source=s,this._container.addChild(t),this._container.requestRender(),this.requestUpdate()}onTileError(e){console.error(e)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(e,t){return console.error(e),Promise.reject()}},e.HeatmapTileRenderer=t.__decorate([a.subclass("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],e.HeatmapTileRenderer),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
