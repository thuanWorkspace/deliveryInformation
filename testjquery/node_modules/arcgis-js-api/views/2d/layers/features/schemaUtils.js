/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/arrayUtils","../../../../core/Error","../../../../core/has","../../../../core/Logger","../../../../core/screenUtils","../../../../core/sql","../../../../core/accessorSupport/diffUtils","../../../../layers/support/labelingInfo","../../engine/webgl/enums","../../engine/webgl/Utils","../../engine/webgl/techniques/utils","../../engine/webgl/util/vvFlagUtils","./createSymbolSchema","./support/pixelBuffering","./support/rendererUtils","../support/clusterUtils","../support/util"],(function(e,t,r,i,l,n,s,a,o,u,d,y,p,c,f,g,m,b){"use strict";const S=l.getLogger("esri.views.2d.layers.features.schemaUtils"),x="ValidationError";function h(e){return e}function v(e,t){let r=0,i=0,l=u.WGLSymbologyType.DEFAULT;if(null!=e){if(i=f.getPtMaxVVSize(e,t),"visualVariables"in e&&(r=p.getVVFlags(e.visualVariables||[]),"dot-density"===e.type&&(l=u.WGLSymbologyType.DOT_DENSITY)),"heatmap"===e.type&&(l=u.WGLSymbologyType.HEATMAP),"dictionary"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:u.WGLSymbologyType.DEFAULT};if("pie-chart"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:u.WGLSymbologyType.PIE_CHART};if(l!==u.WGLSymbologyType.DOT_DENSITY&&l!==u.WGLSymbologyType.HEATMAP){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);let r=!0,i=!0;for(const e of t)if("cim"!==e.type&&"web-style"!==e.type||(i=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline,l=t&&"none"!==t.style&&"solid"!==t.style,n="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style;l&&(r=!1),("picture-fill"===e.type||n||l)&&(i=!1)}r?l=i?u.WGLSymbologyType.OUTLINE_FILL_SIMPLE:u.WGLSymbologyType.OUTLINE_FILL:i&&(l=u.WGLSymbologyType.SIMPLE)}}return{vvFlags:r,maxVVSize:i,symbologyType:l}}let T=null;function F(e){if(i("esri-2d-update-debug")){const t=w(e,!0);console.debug("Created new schema",t),console.debug("Schema diff",a.diff(T,t)),T=t}return w(e)}function w(e,t=!1){try{const r=G(e,t),i=P(e),l={};r.map((t=>E(l,e,t)));const n=null!=e.subtypeCode?`${e.subtypeField} = ${e.subtypeCode}`:null,a=s.sqlAnd(e.definitionExpression,n);return{source:{definitionExpression:a,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:e.historicMoment?.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:e.timeExtent?.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:r,tileRenderer:i,targets:l}}catch(r){if(r.fieldName===x)return S.error(r),null;throw r}}function E(e,t,i){switch(i.target){case"feature":return void L(e,V(t),i);case"aggregate":{if(!("featureReduction"in t))return;const l=t.featureReduction;switch(l?.type){case"selection":throw new r(x,"Mapview does not support `selection` reduction type",l);case"binning":return L(e,V(t),i),void z(e,l,t.fields.map((e=>e.toJSON())),i);case"cluster":return L(e,V(t),i),void N(e,l,t.fields.map((e=>e.toJSON())),i)}}}}function I(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const l=e.attributes[r];if(l?.context){const e=l.context;e.mesh=e.mesh||i.context?.mesh,e.storage=e.storage||i.context?.storage}else e.attributes[r]=i}return e}function V(e){return[e.filter?.toJSON()??null,e.featureEffect?.filter?.toJSON()??null]}function L(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),I(e.feature,r.attributes.fields),e}function O(e,t){const{onStatisticExpression:i,onStatisticField:l,statisticType:n}=e;switch(n){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:t}=i;return t?"string"===t?"esriFieldTypeString":"esriFieldTypeDouble":(S.error(new r(x,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}const n=t.find((e=>e.name===l));return n?n.type:(S.error(new r(x,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}}}function z(e,t,r,i){return e.aggregate||(e.aggregate={name:"aggregate",type:"bin",filters:null,input:"feature",params:{fixedBinLevel:t.fixedBinLevel,fields:(t.fields??[]).map((e=>({...e.toJSON(),type:O(e,r)})))},attributes:{}}),I(e.aggregate,i.attributes.fields),e}function N(e,t,r,i){const l=i.aggregateFields??[],s=new Set;for(const n of l)s.add(n.name);for(const n of t?.fields??[])s.has(n.name)||l.push(n);return e.aggregate||(e.aggregate={name:"aggregate",type:"cluster",input:"feature",filters:null,attributes:{},params:{clusterRadius:n.pt2px(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(n.pt2px(t.clusterMaxSize)/64),fields:l.map((e=>({...e.toJSON(),type:O(e,r)})))}}),I(e.aggregate,i.attributes.fields),e}function M(e,t){return t.field?R(e,{...t,type:"field",field:t.field}):t.valueExpression?R(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:void 0,fieldIndex:void 0}}function R(e,t){switch(t.type){case"expression":{const r=h(t.valueExpression);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=h(JSON.stringify(t.label));if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function G(e,t=!1){const r=new Array;let i=0;return r.push(D(e,i++,t)),r}function A(e,t,r,i,l,n=!1){const s=R(e,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:t.labelExpression,labelExpressionInfo:t.labelExpressionInfo?{expression:t.labelExpressionInfo.expression}:null,symbol:!!t.symbol,where:t.where}}),{fieldIndex:a}=s;return{...c.createSymbolSchema(t,l,n),fieldIndex:a,target:r,index:i}}function U(e,t,i){const l="featureReduction"in t&&t.featureReduction;if(!l)return{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};const n="aggregate",s=[];let a=null,u=b.toJSONGeometryType(t.geometryType),d=[],y=null;if(l)switch(l.type){case"selection":return S.error(new r(x,"Mapview does not support `selection` reduction type",l)),{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};case"cluster":case"binning":if(s.push(...l.fields??[]),"cluster"===l.type?u="esriGeometryPoint":"binning"===l.type&&(u="esriGeometryPolygon"),l.renderer&&!l.renderer.authoringInfo?.isAutoGenerated){if("cluster"===l.type){const{renderer:e}=m.injectDynamicLevelDependentSizeVisualVariable(l.renderer,l,null);y=e}else y=l.renderer;const t=v(l.renderer,l);a=q(e,n,l.renderer,t,i),d=l&&l.labelsVisible&&l.labelingInfo||[]}else if("cluster"===l.type){if(y=m.createClusterRenderer(s,t.renderer,l,null,!0),l.symbol){const e=v(y,l);a={type:"simple",symbol:c.createSymbolSchema(l.symbol,e,i),symbologyType:e.symbologyType}}d=l&&l.labelsVisible&&l.labelingInfo||[]}}k(e,s);return{labels:o.validateLabelingInfo(d,"binning"===l.type?"esriGeometryPolygon":u),matcher:a,fields:s,rendererOverride:y}}function D(e,t,i=!1){const l={indexCount:0,fields:{}},n="featureReduction"in e?e.featureReduction??void 0:void 0,s=n?"aggregate":"feature";if("sublayers"in e){const t={type:"subtype",subtypeField:e.subtypeField,renderers:{},symbologyType:u.WGLSymbologyType.DEFAULT},n={type:"subtype",mapping:{},target:"feature",subtypeField:e.subtypeField},a={type:"subtype",classes:{}},o={type:"symbol",target:"feature",aggregateFields:[],attributes:l,storage:n,mesh:{matcher:t,aggregateMatcher:null,labels:a,sortKey:null}},d=new Set;let y=0;for(const{renderer:c,subtypeCode:f,labelingInfo:g,labelsVisible:m}of e.sublayers){let e=0;"visualVariables"in c&&c.visualVariables&&(c.visualVariables.some((e=>"rotation"!==e.type))&&S.warnOnce("SubtypeGroupLayer currently only supports rotation visualVariables. All other visualVariable types will be ignored."),e=p.getVVFlags(c.visualVariables.filter((e=>"size"!==e.type))));const o={symbologyType:u.WGLSymbologyType.DEFAULT,vvFlags:e,maxVVSize:0},b=q(l,s,c,o,i),h=C(l,s,c),v=m&&g;if("dictionary"===b.type)throw new r(x,"Dictionary renderer is not supported in subtype layers");if("subtype"===b.type)throw new r(x,"Nested subtype renderers is not supported");if(null!=h&&"subtype"===h.type)throw new r(x,"Nested subtype storage is not supported");if(null!=h?.attributeMapping)throw new r(x,"Non-visual-variable attributes are not supported in subtype layers");if("heatmap"===b.type)throw new r(x,"Heatmaps are not supported in subtype layers");if("pie-chart"===b.type)throw new r(x,"Pie-charts are not supported in subtype layers");if(d.has(f))throw new r(x,"Subtype codes for sublayers must be unique");d.add(f),t.renderers[f]=b,n.mapping[f]=h,v&&(a.classes[f]=v.map((e=>A(l,e,"feature",y++,o,i))))}return o}if("heatmap"===e.renderer?.type&&"raster"===g.getSupportedHeatmapRenderer()){const{radius:t,fieldOffset:r,field:i}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:l,target:s,storage:null,mesh:{radius:t,fieldOffset:r,field:M(l,{target:s,field:i,resultType:"numeric"}).field}}}const a=U(l,e,i),d=b.toJSONGeometryType(e.geometryType),y=a.rendererOverride??e.renderer,c=v(y,n),f=q(l,s,y,c,i),m=C(l,s,y),h=B(l,e.orderBy,e.renderer,n),T=e.labelsVisible&&e.labelingInfo||[],F=o.validateLabelingInfo(T,d);let w=0;const E=[...F.map((e=>A(l,e,"feature",w++,c,i))),...a.labels.map((e=>A(l,e,"aggregate",w++,c,i)))];return{type:"symbol",target:s,attributes:l,aggregateFields:a.fields,storage:m,mesh:{matcher:f,labels:{type:"simple",classes:E},aggregateMatcher:a.matcher,sortKey:h}}}function P(e){return"heatmap"===e.renderer?.type&&"raster"===g.getSupportedHeatmapRenderer()?{type:"heatmap"}:{type:"symbol"}}function B(e,t,i,l){if(null!=l)return null;if(null!=t&&t.length){t.length>1&&S.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${t.length}. All but the first will be discarded`);const i=t[0],l="ascending"===i.order?"asc":"desc";if(i.field)return{field:i.field,order:l};if(i.valueExpression){return{fieldIndex:R(e,{type:"expression",target:"feature",valueExpression:i.valueExpression,resultType:"numeric"}).fieldIndex,order:l}}return S.error(new r(x,"Expected to find a field or valueExpression for OrderByInfo",i)),null}if(null!=i&&"unique-value"===i.type&&i.orderByClassesEnabled){return{byRenderer:!0,order:"asc"}}return null}function k(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,onStatisticField:l,onStatisticExpression:n,statisticType:s}=i;let a,o;const u="numeric",d="feature";if(n){o=R(e,{type:"expression",target:d,valueExpression:n.expression,resultType:u}).fieldIndex}else{a=R(e,{type:"field",target:d,field:l}).field}R(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:a,inFieldIndex:o,statisticType:s})}}function C(e,t,r){let i;switch(r.type){case"simple":case"class-breaks":case"unique-value":case"dictionary":i={visualVariables:!0,attributes:null};break;default:i=y.getTechniqueFromRenderer(r).getStorageSpec(r)}return J(e,t,i,r)}function J(e,t,r,i){if(null==r)return null;const{visualVariables:l,attributes:n}=r;let s=null;l&&"visualVariables"in i&&(s=W(e,t,i.visualVariables));const a=null!=s?4:0;let o=null;return null!=n&&(o=n.map(((r,i)=>{const{field:l,fieldIndex:n}=M(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i+a,field:l,fieldIndex:n}}))),{type:"simple",target:t,attributeMapping:o,vvMapping:s}}function W(e,r,i){if(!i?.length)return[];const l={storage:!0},n="numeric";return g.simplifyVisualVariables(i).map((t=>{const i=d.getVVType(t.type),{field:s,fieldIndex:a}=M(e,{target:r,valueExpression:t.valueExpression,field:t.field,context:l,resultType:n});switch(t.type){case"size":return"$view.scale"===t.valueExpression?null:{type:"size",binding:i,field:s,fieldIndex:a,normalizationField:M(e,{target:r,field:t.normalizationField,context:l,resultType:n}).field,valueRepresentation:t.valueRepresentation??null};case"color":return{type:"color",binding:i,field:s,fieldIndex:a,normalizationField:M(e,{target:r,field:t.normalizationField,context:l,resultType:n}).field};case"opacity":return{type:"opacity",binding:i,field:s,fieldIndex:a,normalizationField:M(e,{target:r,field:t.normalizationField,context:l,resultType:n}).field};case"rotation":return{type:"rotation",binding:i,field:s,fieldIndex:a}}})).filter(t.isSome)}function q(e,t,r,i,l=!1){const n=e??{indexCount:0,fields:{}};switch(r.type){case"simple":case"dot-density":return _(n,r,i,l);case"class-breaks":return $(n,t,r,i,l);case"unique-value":return j(n,t,r,i,l);case"dictionary":return K(n,r,i,l);case"heatmap":return Y(n,r,i,l);case"pie-chart":return H(n,r,i,l)}}function _(e,t,r,i=!1){const l=t.getSymbols(),n=l.length?l[0]:null;return{type:"simple",symbol:c.createSymbolSchema(n,r,i),symbologyType:r.symbologyType}}function H(e,t,r,i=!1){const l=t.getSymbols(),n=l[0],s=l.length>1?l[1]:null;return{type:"pie-chart",markerSymbol:c.createSymbolSchema(n,r,i),fillSymbol:c.createSymbolSchema(s,r,i),symbologyType:r.symbologyType}}function $(e,t,r,i,l=!1){const n={mesh:!0,use:"renderer.field"},s=r.backgroundFillSymbol,{field:a,fieldIndex:o}=M(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:n}),u=r.normalizationType,d="log"===u?"esriNormalizeByLog":"percent-of-total"===u?"esriNormalizeByPercentOfTotal":"field"===u?"esriNormalizeByField":null,y=r.classBreakInfos.map((e=>({symbol:c.createSymbolSchema(e.symbol,i,l),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:a,fieldIndex:o,backgroundFillSymbol:c.createSymbolSchema(s,i,l),defaultSymbol:c.createSymbolSchema(r.defaultSymbol,i,l),intervals:y,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:d,isMaxInclusive:r.isMaxInclusive,symbologyType:i.symbologyType}}function j(e,t,i,l,n=!1){const s=[],a=i.backgroundFillSymbol,o={target:t,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new r(x,"Expected renderer.field to be a string",i);const{field:u,fieldIndex:d}=M(e,{...o,field:i.field,valueExpression:i.valueExpression});for(const r of i.uniqueValueInfos??[])s.push({value:""+r.value,symbol:c.createSymbolSchema(r.symbol,l,n)});return{type:"map",attributes:e.fields,field:u,fieldIndex:d,field2:M(e,{...o,field:i.field2}).field,field3:M(e,{...o,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter??void 0,backgroundFillSymbol:c.createSymbolSchema(a,l),defaultSymbol:c.createSymbolSchema(i.defaultSymbol,l),map:s,symbologyType:l.symbologyType}}function K(e,t,r,i=!1){return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,symbologyType:r.symbologyType}}function Y(e,t,r,i=!1){const l=t.getSymbols(),n=l.length?l[0]:null;return{type:"heatmap",symbol:c.createSymbolSchema(n,r,i),symbologyType:r.symbologyType}}e.createSymbolSchema=c.createSymbolSchema,e.addAggregateFields=k,e.createMatcherSchema=q,e.createRendererAttributeSchema=M,e.createSchema=F,e.createSymbolSchemaOptions=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
