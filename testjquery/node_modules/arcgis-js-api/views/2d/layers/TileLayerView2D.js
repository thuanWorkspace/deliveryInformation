/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/handleUtils","../../../core/Logger","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/spatialReferenceUtils","../../../support/GraphicsCollection","../../../core/Error","../../../core/scheduling","../../../core/accessorSupport/tracking/Flags","../../../config","../../../request","../../../core/urlUtils","../../../layers/effects/EffectView","../engine/DisplayObject","../engine/webgl/effects/highlight/HighlightGradient","../../../core/Evented","../../../core/mathUtils","../../webgl/contextUtils","../engine/webgl/BufferPool","../engine/webgl/enums","../engine/webgl/brushes/BrushBitmap","../../../chunks/vec4f32","../engine/webgl/Utils","../engine/webgl/shaders/BackgroundPrograms","../../webgl/enums","../../webgl/checkWebGLError","../../../chunks/builtins","../engine/webgl/definitions","../../../core/RandomLCG","../engine/webgl/materialKey/MaterialKey","../engine/webgl/techniques/Technique","../engine/webgl/techniques/dotDensity/TechniqueDotDensity","../engine/webgl/techniques/heatmap/TechniqueHeatmap","../engine/webgl/techniques/pieChart/TechniquePieChart","../../webgl/BufferObject","../../webgl/FramebufferObject","../../webgl/GLObjectType","../../webgl/Texture","../../webgl/VertexArrayObject","../engine/webgl/brushes/WGLBrushHeatmap","../engine/webgl/DefaultVertexAttributeLayouts","../engine/webgl/shaders/TileInfoPrograms","../engine/webgl/brushes/WGLGeometryBrushMarker","../engine/webgl/number","../engine/vectorTiles/style/StyleDefinition","../../../chunks/vec2f32","../engine/vectorTiles/enums","../engine/vectorTiles/shaders/sources/resolver","../engine/webgl/shaders/BitBlitPrograms","../engine/webgl/shaders/sources/resolver","../engine/webgl/TextureManager","../engine/webgl/shaders/StencilPrograms","../engine/webgl/effects/BlendEffect","../engine/webgl/shaders/HighlightPrograms","../engine/webgl/Profiler","../../webgl/renderState","../../3d/webgl-engine/core/shaderModules/interfaces","../../../core/floatRGBA","../../3d/webgl-engine/lib/OrderIndependentTransparency","../../webgl/testSVGPremultipliedAlpha","../LabelManager","./graphics/GraphicsView2D","../engine/webgl/AttributeStoreView","../../../core/asyncUtils","../../../core/Collection","../../../core/accessorSupport/watch","../../../core/accessorSupport/tracking/SimpleTrackingTarget","../../../chunks/earcut","../../../layers/graphics/featureConversionUtils","../../../core/unitUtils","../../../renderers/support/lengthUtils","../../../chunks/vec3f32","../../../geometry/support/normalizeUtils","../navigation/MapViewNavigation","../engine/webgl/shaders/MagnifierPrograms","./BitmapTileLayerView2D","./LayerView2D","./graphics/HighlightGraphicContainer","./support/imageUtils","../tiling/TileInfoView","../tiling/TileKey","../tiling/TileQueue","../tiling/TileStrategy","../../layers/LayerView","../../layers/RefreshableLayerView","../../layers/support/MapServiceLayerViewHelper","../../support/drapedUtils"],(function(e,i,t,r,s,l,a,h,n,c,g,o,p,u,d,w,f,y,m,b,_,V,T,v,I,H,U,S,q,L,k,C,G,P,B,D,Q,M,A,E,x,F,R,O,z,j,K,W,N,J,X,Y,Z,$,ee,ie,te,re,se,le,ae,he,ne,ce,ge,oe,pe,ue,de,we,fe,ye,me,be,_e,Ve,Te,ve,Ie,He,Ue,Se,qe,Le,ke,Ce,Ge,Pe,Be,De,Qe,Me){"use strict";const Ae=[0,0];let Ee=class extends(De(Ue.BitmapTileLayerView2D(Se.LayerView2DMixin(Be)))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new g.GraphicsCollection,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this._highlightView?.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new ke(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new Ge({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,i)=>this.fetchTile(e,i)}),this._tileStrategy=new Pe({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),Qe.isMapServiceLayerView(this,this.layer)){const e=this._highlightView=new pe({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new qe(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new Qe.MapServiceLayerViewHelper({createFetchPopupFeaturesQueryGeometry:(e,i)=>Me.createQueryGeometry(e,i,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(i,t)=>{e.graphicUpdateHandler({graphic:i,property:t})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(e,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(e,i):[]}highlight(e){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(e):i.makeHandle()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return c.equals(this.layer.tileInfo?.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e))))}}acquireTile(e){const i=this._bitmapView.createTile(e),t=i.bitmap;return[t.x,t.y]=this._tileInfoView.getTileCoords(Ae,i.key),t.resolution=this._tileInfoView.getTileResolution(i.key),[t.width,t.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,i={}){const t=this.tilemapCache,{signal:s,resamplingLevel:l=0}=i;if(!t)try{return await this._fetchImage(e,s)}catch(n){if(!r.isAbortError(n)&&!this.resampling)return Le.createBlankImage(this._tileInfoView.tileInfo.size);if(l<3){const t=this._tileInfoView.getTileParentId(e.id);if(t){const r=new Ce(t),s=await this.fetchTile(r,{...i,resamplingLevel:l+1});return Le.resampleImage(this._tileInfoView,s,r,e)}}throw n}const a=new Ce(0,0,0,0);let h;try{if(await t.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:s}),a.level!==e.level&&!this.resampling)return Le.createBlankImage(this._tileInfoView.tileInfo.size);h=await this._fetchImage(a,s)}catch(n){if(r.isAbortError(n))throw n;h=await this._fetchImage(e,s)}return this.resampling?Le.resampleImage(this._tileInfoView,h,a,e):h}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const i=await this._fetchQueue.push(e.key);e.bitmap.source=i,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(i){r.isAbortError(i)||t.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(e,i){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:i})}};e.__decorate([s.property()],Ee.prototype,"resampling",null),e.__decorate([s.property()],Ee.prototype,"tilemapCache",null),Ee=e.__decorate([n.subclass("esri.views.2d.layers.TileLayerView2D")],Ee);return Ee}));
