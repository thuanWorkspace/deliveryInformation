/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../request","../../../core/asyncUtils","../../../core/Handles","../../../core/mathUtils","../../../core/maybe","../../../core/reactiveUtils","../../../core/urlUtils","../../../chunks/mat3f32","../engine/DisplayObject","../engine/webgl/DefaultVertexAttributeLayouts","../engine/webgl/enums","../engine/webgl/shaders/MagnifierPrograms","../../magnifier/resources","../../webgl/BufferObject","../../webgl/enums","../../webgl/Texture","../../webgl/TextureDescriptor","../../webgl/VertexArrayObject"],(function(e,r,s,t,i,a,o,n,l,u,h,c,d,m,_,g,b,p){"use strict";class x extends l.DisplayObject{constructor(){super(),this._handles=new s,this._resourcePixelRatio=1,this.visible=!1}destroy(){this._handles=i.destroyMaybe(this._handles),this._disposeRenderResources(),this._resourcesTask=i.abortMaybe(this._resourcesTask)}get backgroundColor(){return this._backgroundColor}set backgroundColor(e){this._backgroundColor=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([a.watch((()=>e.version),(()=>{this.visible=e.visible&&null!=e.position&&e.size>0,this.requestRender()}),a.initial),a.watch((()=>[e.maskUrl,e.overlayUrl]),(()=>this._reloadResources())),a.watch((()=>e.size),(()=>{this._disposeRenderResources(),this.requestRender()}))])}_createTransforms(){return{dvs:n.create()}}doRender(e){const r=e.context;if(!this._resourcesTask)return void this._reloadResources();if(e.drawPhase!==h.WGLDrawPhase.MAP||!this._canRender())return;this._updateResources(e);const s=this._magnifier;if(null==s.position)return;const i=e.pixelRatio,a=s.size*i,o=1/s.factor,n=Math.ceil(o*a);this._readbackTexture.resize(n,n);const{size:l}=e.state,u=i*l[0],c=i*l[1],d=.5*n,m=.5*n,g=t.clamp(i*s.position.x,d,u-d-1),b=t.clamp(c-i*s.position.y,m,c-m-1);r.setBlendingEnabled(!0);const p=g-d,x=b-m,T=this._readbackTexture;r.bindTexture(T,0),r.gl.copyTexImage2D(T.descriptor.target,0,T.descriptor.pixelFormat,p,x,n,n,0);const f=this.backgroundColor,y=f?[f.a*f.r/255,f.a*f.g/255,f.a*f.b/255,f.a]:[1,1,1,1],k=(g+s.offset.x*i)/u*2-1,R=(b-s.offset.y*i)/c*2-1,v=a/u*2,w=a/c*2,A=this._program;r.bindVAO(this._vertexArrayObject),r.bindTexture(this._overlayTexture,6),r.bindTexture(this._maskTexture,7),r.useProgram(A),A.setUniform4fv("u_background",y),A.setUniform1i("u_readbackTexture",0),A.setUniform1i("u_overlayTexture",6),A.setUniform1i("u_maskTexture",7),A.setUniform4f("u_drawPos",k,R,v,w),A.setUniform1i("u_maskEnabled",s.maskEnabled?1:0),A.setUniform1i("u_overlayEnabled",s.overlayEnabled?1:0),r.setStencilTestEnabled(!1),r.setColorMask(!0,!0,!0,!0),r.drawArrays(_.PrimitiveType.TRIANGLE_STRIP,0,4),r.bindVAO()}_canRender(){return this.mask&&this.overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const s=null!=this._magnifier?this._magnifier.maskUrl:null,t=null!=this._magnifier?this._magnifier.overlayUrl:null;this._resourcesTask=r.createTask((async r=>{const i=null==s||null==t?d.loadMagnifierResources(r):null,a=null!=s?e(s,{responseType:"image",signal:r}).then((e=>e.data)):i.then((e=>e.mask)),o=null!=t?e(t,{responseType:"image",signal:r}).then((e=>e.data)):i.then((e=>e.overlay)),[n,l]=await Promise.all([a,o]);this.mask=n,this.overlay=l,this._disposeRenderResources(),this.requestRender()}))}_disposeRenderResources(){this._readbackTexture=i.disposeMaybe(this._readbackTexture),this._overlayTexture=i.disposeMaybe(this._overlayTexture),this._maskTexture=i.disposeMaybe(this._maskTexture),this._vertexArrayObject=i.disposeMaybe(this._vertexArrayObject),this._program=i.disposeMaybe(this._program)}_updateResources(e){if(e.pixelRatio!==this._resourcePixelRatio&&this._disposeRenderResources(),this._readbackTexture)return;const r=e.context;this._resourcePixelRatio=e.pixelRatio;const s=Math.ceil(this._magnifier.size*e.pixelRatio);this._program=c.createMagnifierProgram(r);const t=new Uint16Array([0,1,0,0,1,1,1,0]),i=c.magnifierProgramTemplate.attributes;this._vertexArrayObject=new p.VertexArrayObject(r,i,u.Pos2us,{geometry:m.BufferObject.createVertex(r,_.Usage.STATIC_DRAW,t)}),this.overlay.width=s,this.overlay.height=s;const a=new b.TextureDescriptor;a.internalFormat=_.PixelFormat.RGBA,a.wrapMode=_.TextureWrapMode.CLAMP_TO_EDGE,a.samplingMode=_.TextureSamplingMode.NEAREST,a.flipped=!0,a.preMultiplyAlpha=!o.isSVG(this.overlay.src)||!e.context.driverTest.svgPremultipliesAlpha.result,this._overlayTexture=new g.Texture(r,a,this.overlay),this.mask.width=s,this.mask.height=s,a.pixelFormat=a.internalFormat=_.PixelFormat.ALPHA,this._maskTexture=new g.Texture(r,a,this.mask);const n=1/this._magnifier.factor;a.pixelFormat=a.internalFormat=_.PixelFormat.RGBA,a.width=a.height=Math.ceil(n*s),a.samplingMode=_.TextureSamplingMode.LINEAR,a.flipped=!1,this._readbackTexture=new g.Texture(r,a)}}return x}));
