/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../core/has","../../../../core/maybe","../brushes","../vectorTiles/shaders/VTLMaterialManager","./BitBlitRenderer","./enums","./MaterialManager","./TextureManager","./TextureUploadManager","./WorldExtentClipRenderer","./effects/AnimationEffect","./effects/BlendEffect","./effects/FeatureEffect","./effects/HighlightEffect","./effects/HittestEffect","./effects/HittestEffectVTL","./effects/post-processing/EffectManager","./painter/RenderPass","../../../webgl/contextUtils","../../../webgl/enums","../../../webgl/FramebufferObject","../../../webgl/Renderbuffer","../../../webgl/RenderbufferDescriptor","../../../webgl/TextureDescriptor"],(function(e,t,s,r,n,i,a,o,h,l,f,c,u,d,b,_,E,p,g,M,T,w,B,F){"use strict";function L(e,t){switch(e){case i.WGLGeometryType.LINE:return s.brushes.line;case i.WGLGeometryType.TEXT:return s.brushes.text;case i.WGLGeometryType.LABEL:return s.brushes.label;case i.WGLGeometryType.FILL:return t===i.WGLSymbologyType.DOT_DENSITY?s.brushes.dotDensity:s.brushes.fill;case i.WGLGeometryType.MARKER:switch(t){case i.WGLSymbologyType.HEATMAP:return s.brushes.heatmap;case i.WGLSymbologyType.PIE_CHART:return s.brushes.pieChart;default:return s.brushes.marker}}}class R{constructor(e,t,s){this.context=e,this._blitRenderer=new n.BitBlitRenderer,this._worldExtentRenderer=new l.WorldExtentRenderer,this._brushCache=new Map,this._lastWidth=null,this._lastHeight=null,this._vtlMaterialManager=new r,this._blendEffect=new c.BlendEffect,this._stencilBuf=null,this._prevBeforeLayerFBOStack=[],this._fboPool=[],this.effects={highlight:new d,hittest:new b.HittestEffect,hittestVTL:new _.HittestEffectVTL,integrate:new f.AnimationEffect,insideEffect:new u.FeatureEffect("inside"),outsideEffect:new u.FeatureEffect("outside")},this.materialManager=new a(e),this.textureManager=new o(t,s,e.type===g.ContextType.WEBGL2),this.textureUploadManager=new h.TextureUploadManager(e,t),this._effectsManager=new E.EffectManager}dispose(){if(this.materialManager.dispose(),this.textureManager.dispose(),this.textureUploadManager.destroy(),this._blitRenderer=t.disposeMaybe(this._blitRenderer),this._worldExtentRenderer=t.disposeMaybe(this._worldExtentRenderer),this._brushCache&&(this._brushCache.forEach((e=>e.dispose())),this._brushCache.clear(),this._brushCache=null),this._fbos){let e;for(e in this._fbos)this._fbos[e]&&this._fbos[e].dispose()}for(const e of this._fboPool)e.dispose();if(this._fboPool.length=0,this.effects){let e;for(e in this.effects)this.effects[e]&&this.effects[e].dispose()}this._effectsManager.dispose(),this._blendEffect.dispose(this.context),this._vtlMaterialManager=t.disposeMaybe(this._vtlMaterialManager)}get blitRenderer(){return this._blitRenderer}get vectorTilesMaterialManager(){return this._vtlMaterialManager}getFbos(){if(!this._fbos)throw new Error("InternalError: Painter FBOs not initialized");return this._fbos}acquireFbo(e,t){let s;if(this._fboPool.length>0)s=this._fboPool.pop();else{const r=new F.TextureDescriptor(e,t);r.samplingMode=M.TextureSamplingMode.NEAREST,r.wrapMode=M.TextureWrapMode.CLAMP_TO_EDGE,s=new T.FramebufferObject(this.context,r,this._stencilBuf)}return s.width===e&&s.height===t||s.resize(e,t),s}releaseFbo(e){this._fboPool.push(e)}getSharedStencilBuffer(){return this._stencilBuf}beforeRenderPhases(e,t,s){const{context:r}=e;this._worldExtentRenderer.render(e,t,s);const{width:n,height:i}=r.getViewport();if(this.updateFBOs(n,i),this._prevFBO=r.getBoundFramebufferObject(),r.bindFramebuffer(this.getFbos().output),r.setColorMask(!0,!0,!0,!0),null!=t){const{r:e,g:s,b:n,a:i}=t;r.setClearColor(i*e/255,i*s/255,i*n/255,i)}else r.setClearColor(0,0,0,0);r.setDepthWriteEnabled(!0),r.setClearDepth(1),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),r.setDepthWriteEnabled(!1)}afterRenderPhases(e){const{context:t}=e;t.bindFramebuffer(this._prevFBO),t.setStencilFunction(M.CompareFunction.EQUAL,1,255),t.setStencilTestEnabled(!0),t.setDepthTestEnabled(!1),this.blitTexture(t,this.getFbos().output.colorTexture,M.TextureSamplingMode.NEAREST)}beforeRenderLayer(e,t,s){const{context:r,blendMode:n,effects:i,drawPhase:a,requireFBO:o}=e;if(o||C(a,n,i,s)){const e=r.getBoundFramebufferObject();this._prevBeforeLayerFBOStack.push(e);const{width:t,height:s}=r.getViewport(),n=this.acquireFbo(t,s);r.bindFramebuffer(n),r.setColorMask(!0,!0,!0,!0),r.setClearColor(0,0,0,0),r.setDepthWriteEnabled(!0),r.setClearDepth(1),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),r.setDepthWriteEnabled(!1)}r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setClearStencil(t),r.setStencilWriteMask(255),r.clear(r.gl.STENCIL_BUFFER_BIT)}afterRenderLayer(e,t){const{context:s,blendMode:r,effects:n,requireFBO:a,drawPhase:o}=e;if(a||C(o,r,n,t)){const a=s.getBoundFramebufferObject();null!=n&&n.length>0&&o===i.WGLDrawPhase.MAP&&this._applyEffects(e,n,a),s.bindFramebuffer(this._prevBeforeLayerFBOStack.pop()),s.setStencilTestEnabled(!1),s.setStencilWriteMask(0),s.setBlendingEnabled(!0),s.setBlendFunctionSeparate(M.BlendFactor.ONE,M.BlendFactor.ONE_MINUS_SRC_ALPHA,M.BlendFactor.ONE,M.BlendFactor.ONE_MINUS_SRC_ALPHA),s.setColorMask(!0,!0,!0,!0);const h=null==r||o===i.WGLDrawPhase.HIGHLIGHT?"normal":r;this._blendEffect.draw(e,a.colorTexture,M.TextureSamplingMode.NEAREST,h,t),this.releaseFbo(a)}}getBrush(e,t){const s=L(e,t);let r=this._brushCache.get(s);return void 0===r&&(r=new s,this._brushCache.set(s,r)),r}renderObject(e,t,r,n){const i=s.brushes[r];if(!i)return;let a=this._brushCache.get(i);void 0===a&&(a=new i,this._brushCache.set(i,a)),a.prepareState(e,n),a.draw(e,t,n)}renderObjects(e,t,r,n){const i=s.brushes[r];if(!i)return;let a=this._brushCache.get(i);void 0===a&&(a=new i,this._brushCache.set(i,a)),a.drawMany(e,t,n)}registerRenderPass(e){const t=e.brushes.map((e=>(this._brushCache.has(e)||this._brushCache.set(e,new e),this._brushCache.get(e))));return new p(t,e)}blitTexture(e,t,s,r=1){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(M.BlendFactor.ONE,M.BlendFactor.ONE_MINUS_SRC_ALPHA,M.BlendFactor.ONE,M.BlendFactor.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),this._blitRenderer.render(e,t,s,r)}getPostProcessingEffects(e){return this._effectsManager.getPostProcessingEffects(e)}updateFBOs(e,t){if(e!==this._lastWidth||t!==this._lastHeight){if(this._lastWidth=e,this._lastHeight=t,this._fbos){let s;for(s in this._fbos)this._fbos[s].resize(e,t);return}const s=new F.TextureDescriptor(e,t);s.samplingMode=M.TextureSamplingMode.NEAREST,s.wrapMode=M.TextureWrapMode.CLAMP_TO_EDGE;const r=new B.RenderbufferDescriptor(M.RenderbufferFormat.DEPTH_STENCIL,e,t);this._stencilBuf=new w.Renderbuffer(this.context,r),this._fbos={output:new T.FramebufferObject(this.context,s,this._stencilBuf),effect0:new T.FramebufferObject(this.context,s,this._stencilBuf)}}}_applyEffects(e,t,s){const{context:r}=e,n=this._effectsManager.getPostProcessingEffects(t);for(const{postProcessingEffect:i,effect:a}of n)r.bindFramebuffer(s),i.draw(e,s,a)}}function C(e,t,s,r){return e!==i.WGLDrawPhase.LABEL_ALPHA&&e!==i.WGLDrawPhase.LABEL&&e!==i.WGLDrawPhase.HIGHLIGHT&&(1!==r||null!=t&&"normal"!==t||null!=s&&s.length>0)}return R}));
