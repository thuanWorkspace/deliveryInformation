/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../config","../../../../request","../../../../core/BidiText","../../../../core/Error","../../../../core/fontUtils","../../../../core/has","../../../../core/Logger","../../../../core/mathUtils","../../../../core/promiseUtils","../../../../core/screenUtils","../../../../core/urlUtils","../../../../chunks/vec2","../../../../chunks/vec2f32","../../../../symbols/cim/Rasterizer","./definitions","./enums","./GlyphMosaic","./GlyphSource","./SDFConverter","./SpriteMosaic","./Utils","./animatedFormats/AnimatableTextureResource","./animatedFormats/utils","./util/Result","./util/symbolUtils","../../../support/QueueProcessor","../../../webgl/enums"],(function(e,t,i,s,r,n,a,o,h,c,u,d,l,g,p,m,_,f,w,y,M,T,I,S,R,z,x){"use strict";const b=l.create(),v="arial-unicode-ms-regular",P=a.getLogger("esri.views.2d.engine.webgl.TextureManager");function G(e){const t=Math.round(c.pt2px(e)*window.devicePixelRatio);return t*(t>=128?2:4)}function A(e,t){return Math.min(e,G(t))}function B(e,t){if(!e||!t)return{width:0,height:0};const i=e/t;if(i>1){const t=G(e);return{width:t,height:t/i}}const s=G(t);return{width:s*i,height:s}}const U=(e,t,i)=>P.error(new s(e,t,i));class F{static fromMosaic(e,t){return new F(e,t.page,t.sdf)}constructor(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}}class C{constructor(i,r,n){this._requestRender=i,this.resourceManager=r,this._allowNonPowerOfTwo=n,this._invalidFontsMap=new Map,this._sdfConverter=new w(p.sdfTextureSize),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new z.QueueProcessor({concurrency:10,process:async(e,i)=>{h.throwIfAborted(i);try{return await t(e,{responseType:"image",signal:i})}catch(r){if(!h.isAbortError(r))throw new s("mapview-invalid-resource",`Could not fetch requested resource at ${e}`,r);throw r}}}),this._spriteMosaic=new y(2048,2048,500),this._glyphSource=new f(`${e.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new _(1024,1024,this._glyphSource),this._rasterizer=new g(r)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}async rasterizeItem(e,t,i,s){if(null==e)return U("mapview-null-resource","Unable to rasterize null resource"),null;switch(e.type){case"text":case"esriTS":{const t=await this._rasterizeText(e,i,s);return t.forEach((e=>this._setTextureBinding(m.MosaicType.GLYPH,e))),{glyphMosaicItems:t}}default:{if(M.is3D(e))return U("mapview-invalid-type",`MapView does not support symbol type: ${e.type}`,e),null;const i=await this._rasterizeSpriteSymbol(e,t,s);return S.ok(i)&&i&&this._setTextureBinding(m.MosaicType.SPRITE,i),{spriteMosaicItem:i}}}}bindTextures(e,t,i,s=!1){if(0===i.textureBinding)return;const r=this._bindingInfos[i.textureBinding-1],n=r.page,a=s?x.TextureSamplingMode.LINEAR_MIPMAP_LINEAR:x.TextureSamplingMode.LINEAR;switch(r.mosaicType){case m.MosaicType.SPRITE:{const i=this.sprites.getWidth(n),s=this.sprites.getHeight(n),r=d.set(b,i,s);return this._spriteMosaic.bind(e,a,n,p.textureBindingSpriteAtlas),t.setUniform1i("u_texture",p.textureBindingSpriteAtlas),void t.setUniform2fv("u_mosaicSize",r)}case m.MosaicType.GLYPH:{const i=this.glyphs.width,s=this.glyphs.height,r=d.set(b,i,s);return this._glyphMosaic.bind(e,a,n,p.textureBindingGlyphAtlas),t.setUniform1i("u_texture",p.textureBindingGlyphAtlas),void t.setUniform2fv("u_mosaicSize",r)}default:P.error("mapview-texture-manager",`Cannot handle unknown type ${r.mosaicType}`)}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3}_setTextureBinding(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=F.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)}async _rasterizeText(e,t,s){let a,o;if("cim"in e){const t=e;a=t.fontName,o=t.text}else{const t=e;a=r.getFullyQualifiedFontName(t.font),o=t.text}const h=this._invalidFontsMap.has(a),c=t||M.charCodes(i.bidiText(o)[0]);try{const e=h?v:a;return n("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(e),await this._glyphMosaic.getGlyphItems(e,c,s)}catch(u){return U("mapview-invalid-resource",`Couldn't find font ${a}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(a,!0),this._glyphMosaic.getGlyphItems(v,c,s)}}async _rasterizeSpriteSymbol(e,t,i){if(M.isSimple(e))return;const r=R.keyFromSymbol(e);if(this._spriteMosaic.has(r))return this._spriteMosaic.getSpriteItem(r);if(M.isSVGResource(e)||M.isImageResource(e)&&!M.isMarkerPlacementInsidePolygon(e))return this._handleAsyncResource(r,e,i);const n=p.patternFillRasterizationScale,a=this._rasterizer.rasterizeJSONResource(e,n);if(a){const{size:t,image:i,sdf:s,simplePattern:n,rasterizationScale:o}=a;return this._addItemToMosaic(r,t,{type:"static",data:i},M.shouldRepeat(e),s,n,o)}return new s("TextureManager","unrecognized or null rasterized image")}async _handleAsyncResource(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;s=M.isSVGResource(t)?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s);try{await s,this._ongoingRasterizations.delete(e)}catch{this._ongoingRasterizations.delete(e)}return s}async _handleSVG(e,t,i){const s=[p.sdfTextureSize,p.sdfTextureSize],r=!("cim"in e)||e.cim.asFill,n=await this._sdfConverter.draw(e.path,r,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(n.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,i){const r=M.getUrl(e);await this.resourceManager.fetchResource(r,i);let n=this.resourceManager.getResource(r);if(null==n)return new s("mapview-invalid-resource",`Could not fetch requested resource at ${r}.`);let a=n.width,h=n.height;if(n instanceof HTMLImageElement){"esriPMS"===e.type&&(a=Math.round(A(n.width,M.getPMSResourceSize(e))),h=Math.round(n.height*(a/n.width)));const i="cim"in e?e.cim.colorSubstitutions:void 0,{size:s,sdf:r,image:o}=this._rasterizer.rasterizeImageResource(a,h,n,i);return this._addItemToMosaic(t,s,{type:"static",data:o},M.shouldRepeat(e),r,!1)}this._allowNonPowerOfTwo||(a=o.nextPowerOfTwo(n.width+2*p.spritePadding)-2*p.spritePadding,h=o.nextPowerOfTwo(n.height+2*p.spritePadding)-2*p.spritePadding),a===n.width&&h===n.height||(n=I.resize(n,a,h));const c=e.animatedSymbolProperties||{},u=e.objectId,d=new T.AnimatableTextureResource(n,this._requestRender,c,u);return this._addItemToMosaic(t,[d.width,d.height],{type:"animated",data:d},M.shouldRepeat(e),!1,!1)}async _handleImage(e,t,i){if(M.isGIF(e)||M.isPNG(e))return this._handleGIFOrPNG(e,t,i);const r=M.getUrl(e);try{let s;const n=this.resourceManager.getResource(r);if(null!=n&&n instanceof HTMLImageElement)s=n;else{const{data:e}=await this._imageRequestQueue.push(r,{...i});s=e}if(u.isSVG(r))if("width"in e&&"height"in e){const{width:t,height:i}=B(e.width,e.height);s.width=t,s.height=i}else if("cim"in e){const t=e.cim,{width:i,height:r}=B(t.width??t.scaleX*t.size,t.size);s.width=i,s.height=r}if(!s.width||!s.height)return null;let a=s.width,o=s.height;"esriPMS"===e.type&&(a=Math.round(A(s.width,M.getPMSResourceSize(e))),o=Math.round(s.height*(a/s.width)));const h="cim"in e?e.cim.colorSubstitutions:void 0,{size:c,sdf:d,image:l}=this._rasterizer.rasterizeImageResource(a,o,s,h);return this._addItemToMosaic(t,c,{type:"static",data:l},M.shouldRepeat(e),d,!1)}catch(U){if(!h.isAbortError(U))return new s("mapview-invalid-resource",`Could not fetch requested resource at ${r}. ${U.message}`)}}_addItemToMosaic(e,t,i,s,r,n,a){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,n,a)}}return C}));
