/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","./DirtyMap","./DisplayRecordStore","./WGLBuffers","./WGLTile"],(function(t,e,s,i,a){"use strict";class l extends a.WGLTile{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new e}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(t){return this._wglBuffers&&this._wglBuffers.has(t)?this._wglBuffers.get(t):null}getDisplayList(){return this._displayList}patch(t){if(!0===t.clear)return this.clear(),void(this._hasData=!1);const i=t.addOrUpdate,a=t.remove;!this._data&&i?.tileDisplayData?.displayObjects.length?(i.tileDisplayData.computeDisplayList(),this._dirtyMap=new e,this._dispRecStore=s.fromTileData(i,this._dirtyMap),this._data=i,this._dirtyMap.markAllDirty(),this._hasData=!0,t.end&&this.ready()):this._data&&(i?.tileDisplayData?.displayObjects.length||a.length)?this._doPatchData(t):t.end&&this.ready(),t.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(t){t.time&&t.time===this._lastCommitTime||(this._lastCommitTime=t.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new i(t.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(t){this._invalidated=!0,this._patchData(t)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=s.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(t){let e=!0;const s=t.addOrUpdate?.tileDisplayData?.displayObjects||[],i=(t.remove||[]).slice();for(const d of s)null!=d.insertAfter&&i.push(d.id);let a;i.length>0&&(a=new Set(i));const l=this._data.tileDisplayData;for(const d of i){const t=l.displayObjectRegistry.get(d);if(t){l.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);l.displayObjectRegistry.delete(d)}}a?.size&&(l.displayObjects=l.displayObjects.filter((t=>!a.has(t.id))));for(const d of s){let s,i=l.displayObjectRegistry.get(d.id);if(i){const t=i.displayRecords;i.set(d),i.displayRecords=t;const e=i.displayRecords.length;for(let s=0;s<e;++s){const t=i.displayRecords[s],e=d.displayRecords[s];(s>=d.displayRecords.length||t.geometryType!==e.geometryType||t.symbolLevel!==e.symbolLevel||t.zOrder!==e.zOrder||t.materialKey!==e.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<d.displayRecords.length&&(i.displayRecords[s]=void 0))}i.displayRecords.length=d.displayRecords.length}else{let t;i=d.copy(),i.displayRecords=[],l.displayObjectRegistry.set(d.id,i);const e=l.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=l.displayObjectRegistry.get(i.insertAfter);s?(t=e.indexOf(s)+1,t<e.length?e.splice(t,0,i):(e.push(i),t=e.length)):(e.push(i),t=e.length)}else e.unshift(i),t=0;else e.push(i),t=e.length;if(s){const i=d.displayRecords.length>0?1:0;let a=0;for(let d=t-1;d>=0&&a<i;--d)for(let t=e[d].displayRecords.length-1;t>=0&&a<i;--t){const i=e[d].displayRecords[t],r=l.displayList.getDPInfoType();s[r]||(s[r]=i,++a)}}}const a=d.displayRecords.length;for(let r=0;r<a;++r){const a=d.displayRecords[r];let h=i.displayRecords[r];h?(h.meshData=a.meshData,h.materialKey=a.materialKey):(h=a.copy(),h.vertexFrom=void 0,h.indexFrom=void 0,i.displayRecords[r]=h);const o=a.geometryType,p=l.displayList.getDPInfoType(),y=t.addOrUpdate.tileBufferData.geometries[o],c=y.vertexBuffer,n=y.indexBuffer;let f;s&&(f=s[p]?l.displayList.splitAfter(s[p]):-1),e=this._dispRecStore.setMeshData(h,a,c,n,f)&&e,s&&null!=h.indexFrom&&null!=h.indexFrom&&(s[p]=h)}}return e}}t.GraphicTile=l,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
