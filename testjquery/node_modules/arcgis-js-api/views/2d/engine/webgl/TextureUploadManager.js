/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../core/promiseUtils","./definitions","../../../webgl/contextUtils"],(function(e,t,s,o){"use strict";class r{constructor(e,t){this._queue=[],this._context=e,this._refreshable=t}destroy(){this._queue=[]}enqueueTextureUpdate(e,r){const u=t.createResolver(),n=e,h=s.textureUploadManagerChunkSize,i=Math.ceil(n.height/h);if(t.throwIfAborted(r),this._context.type===o.ContextType.WEBGL1)this._queue.push({type:"no-chunk",request:e,resolver:u,options:r});else for(let t=0;t<i;t++){const s=t*h,o=t===i-1,a=o?n.height-h*t:h;this._queue.push({type:"chunk",request:e,resolver:u,chunk:t,chunkOffset:s,destHeight:a,chunkIsLast:o,options:r})}return t.onAbortOrThrow(r,(e=>u.reject(e))),u.promise}upload(){let e=0;for(;this._queue.length;){const t=performance.now(),o=this._queue.shift();if(o){if(null!=o.options.signal&&o.options.signal.aborted)continue;switch(o.type){case"chunk":this._uploadChunk(o);break;case"no-chunk":this._uploadNoChunk(o)}const r=performance.now()-t;if(e+=r,e+r>=s.textureUploadManagerBudget)break}}this._queue.length&&this._refreshable.requestRender()}_uploadChunk(e){const{request:t,resolver:s,chunkOffset:o,chunkIsLast:r,destHeight:u}=e,{data:n,texture:h,width:i}=t;null!=n&&(h.updateData(0,0,o,i,u,n,o),r&&s.resolve())}_uploadNoChunk(e){const{request:t,resolver:s}=e,{data:o,texture:r}=t;r.setData(o),s.resolve()}}e.TextureUploadManager=r,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
