/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../core/arrayUtils","../enums","../../../../webgl/enums"],(function(e,t,r){"use strict";class s{constructor(e,r){this.brushes=e,this.name=r.name,this.drawPhase=r.drawPhase||t.WGLDrawPhase.MAP,this._targetFn=r.target,this.effects=r.effects||[],this.enableDefaultDraw=r.enableDefaultDraw??(()=>!0),this.forceDrawByDisplayOrder=!!r.forceDrawByDisplayOrder}render(e){const{context:t,profiler:r}=e,s=this._targetFn(),o=this.drawPhase&e.drawPhase;if(r.recordPassStart(this.name),o){this.enableDefaultDraw()&&this._doRender(e,s),r.recordPassEnd();for(const r of this.effects){if(!r.enable())continue;const o=r.apply,n=r.args?.(),a=t.getViewport(),i=t.getBoundFramebufferObject(),f=e.passOptions;this._bindEffect(e,o,n),this._doRender(e,s,o.defines),this._drawAndUnbindEffect(e,o,a,i,f,n)}}}_doRender(e,s,o){if(null==s)return;const{profiler:n,context:a}=e;if(this.forceDrawByDisplayOrder){for(const t of this.brushes){if(n.recordBrushStart(t.name),null!=t.brushEffect){const r=a.getViewport(),n=a.getBoundFramebufferObject(),i=e.passOptions;this._bindEffect(e,t.brushEffect),this._drawWithBrush(t,e,s,o),this._drawAndUnbindEffect(e,t.brushEffect,r,n,i)}else this._drawWithBrush(t,e,s,o);n.recordBrushEnd()}const i=s,f=e;f.attributeView.bindTextures(e.context);for(const e of i){if(!e.visible)continue;e.commit(f),f.context.setStencilFunction(r.CompareFunction.EQUAL,e.stencilRef,255);const s=e.getGeometry(t.WGLGeometryType.MARKER),n=e.getGeometry(t.WGLGeometryType.TEXT);if(s?.records&&n?.records){const r=new Map,a=s.records.getCursor();for(;a.next();)r.set(a.id,[a.getDrawInfo(s,t.WGLGeometryType.MARKER)]);const i=n.records.getCursor();for(;i.next();){const e=r.get(i.id),s=i.getDrawInfo(n,t.WGLGeometryType.TEXT);e?e.push(s):r.set(i.id,[s])}const c=Array.from(r.entries()).sort((([e,t],[r,s])=>r-e));for(const[s,n]of c)for(const r of n){const s=f.painter.getBrush(r.geometryType,t.WGLSymbologyType.DEFAULT);s.prepareState(f,o),s.drawGeometry(f,e,r,o)}}else if(s){const r=f.painter.getBrush(t.WGLGeometryType.MARKER,t.WGLSymbologyType.DEFAULT);r.prepareState(f,o),s.forEachCommand((t=>{r.drawGeometry(f,e,t,o)}))}else if(n){const r=f.painter.getBrush(t.WGLGeometryType.TEXT,t.WGLSymbologyType.DEFAULT);r.prepareState(f,o),n.forEachCommand((t=>{r.drawGeometry(f,e,t,o)}))}}}else for(const t of this.brushes){if(n.recordBrushStart(t.name),null!=t.brushEffect){const r=a.getViewport(),n=a.getBoundFramebufferObject(),i=e.passOptions;this._bindEffect(e,t.brushEffect),this._drawWithBrush(t,e,s,o),this._drawAndUnbindEffect(e,t.brushEffect,r,n,i)}else this._drawWithBrush(t,e,s,o);n.recordBrushEnd()}}_drawWithBrush(t,r,s,o){e.isArrayLike(s)?(t.prepareState(r,o),t.drawMany(r,s,o)):s.visible&&(t.prepareState(r,o),t.draw(r,s,o))}_bindEffect(e,t,r){const{profiler:s}=e;s.recordPassStart(this.name+"."+t.name),t.bind(e,r);const o=t.createOptions(e,r);e.passOptions=o}_drawAndUnbindEffect(e,t,r,s,o,n){const{profiler:a,context:i}=e;e.passOptions=o,a.recordBrushStart(t.name),t.draw(e,n),t.unbind(e,n),i.bindFramebuffer(s);const{x:f,y:c,width:d,height:h}=r;i.setViewport(f,c,d,h),a.recordBrushEnd(),a.recordPassEnd()}}return s}));
