/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../core/maybe","../../../../../core/RandomLCG","../definitions","../enums","./WGLGeometryBrushFill","../techniques/utils","../../../../webgl/BufferObject","../../../../webgl/enums","../../../../webgl/FramebufferObject","../../../../webgl/Renderbuffer","../../../../webgl/RenderbufferDescriptor","../../../../webgl/Texture","../../../../webgl/TextureDescriptor","../../../../webgl/VertexArrayObject"],(function(e,t,r,s,o,i,n,d,a,l,u,c,_,h){"use strict";class f extends o{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([r.textureBindingRenderer0,r.textureBindingRenderer1]),this._dotVAO=null,this._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=e.disposeMaybe(this._dotFBO),this._dotVAO=e.disposeMaybe(this._dotVAO)}getGeometryType(){return s.WGLGeometryType.FILL}supportsSymbology(e){return e===s.WGLSymbologyType.DOT_DENSITY}_drawFills(e,t,r,s,o,i){const{passOptions:n}=e;if(null!=n&&"hittest"===n.type)super._drawFills(e,t,r,s,o,i);else{const s=this._drawDotLocations(e,t,r,o,i);this._drawDotDensity(e,t,s)}}_drawDotDensity(e,t,r){const{context:s,painter:o,rendererInfo:n,requestRender:a,allowDelayedRender:l}=e,u=o.materialManager.getProgram(this._dotDesc);if(l&&null!=a&&!u.compiled)return void a();const{rendererSchema:c}=n;i.assertRendererSchema(c,"dot-density");const _=this._createDotDensityMesh(s,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:d.DataType.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});s.setStencilTestEnabled(!0),s.useProgram(u),u.setUniform1f("u_tileZoomFactor",1),u.setUniform1i("u_texture",this._dotSamplers[0]),u.setUniform1f("u_dotSize",Math.max(c.dotSize,1)),u.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(u,e,t),s.bindTexture(r,this._dotSamplers[0]),s.bindVAO(_),s.drawArrays(d.PrimitiveType.POINTS,0,262144)}_drawDotLocations(e,t,s,o,n){const{context:a,rendererInfo:l,requiredLevel:u}=e,c=a.getViewport(),{rendererSchema:_}=l;i.assertRendererSchema(_,"dot-density");const{dotScale:h,colors:f,activeDots:T,backgroundColor:m,dotValue:x}=_;a.setViewport(0,0,512,512);const p=a.getBoundFramebufferObject(),y=this._createFBO(a);a.bindFramebuffer(y),a.setClearColor(0,0,0,0),a.clear(a.gl.COLOR_BUFFER_BIT|a.gl.STENCIL_BUFFER_BIT),a.setStencilTestEnabled(!1);const w=1/2**(u-t.key.level),D=r.tileSize,b=D*window.devicePixelRatio*D*window.devicePixelRatio,S=1/w*(1/w),g=h?e.state.scale/h:1;return s.setUniform1f("u_tileZoomFactor",w),s.setUniform1f("u_tileDotsOverArea",b/(r.tileSize*window.devicePixelRatio*r.tileSize*window.devicePixelRatio)),s.setUniformMatrix4fv("u_dotColors",f),s.setUniform4fv("u_isActive",T),s.setUniform4fv("u_dotBackgroundColor",m),s.setUniform1f("u_dotValue",Math.max(1,x*g*S)),this._bindDotDensityTextures(a,s,l,D),a.drawElements(d.PrimitiveType.TRIANGLES,o,d.DataType.UNSIGNED_INT,n),a.setViewport(c.x,c.y,c.width,c.height),a.bindFramebuffer(p),y.colorTexture}_createFBO(e){if(null==this._dotFBO){const t=512,r=512,s=new _.TextureDescriptor(t,r);s.samplingMode=d.TextureSamplingMode.NEAREST,s.wrapMode=d.TextureWrapMode.CLAMP_TO_EDGE;const o=new l.Renderbuffer(e,new u.RenderbufferDescriptor(d.RenderbufferFormat.DEPTH_STENCIL,t,r));this._dotFBO=new a.FramebufferObject(e,s,o)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,r,s){const{rendererSchema:o}=r;i.assertRendererSchema(o,"dot-density");const n=this._createDotDensityTextures(e,s,o.seed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let i=0;i<n.length;i++)e.bindTexture(n[i],this._dotSamplers[i])}_createDotDensityMesh(e,t,r){if(null==this._dotVAO){const s=2,o=new Int16Array(262144*s);for(let e=0;e<512;e++)for(let t=0;t<512;t++)o[s*(t+512*e)]=t,o[s*(t+512*e)+1]=e;const i=n.BufferObject.createVertex(e,d.Usage.STATIC_DRAW,o);this._dotVAO=new h.VertexArrayObject(e,t,r,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,r,s){if(this._dotTextureSize===r&&this._seed===s||(this._disposeTextures(),this._dotTextureSize=r,this._seed=s),null===this._dotTextures){const o=new t(s);this._dotTextures=[this._allocDotDensityTexture(e,r,o),this._allocDotDensityTexture(e,r,o)]}return this._dotTextures}_allocDotDensityTexture(e,t,r){const s=new Float32Array(t*t*4);for(let i=0;i<s.length;i++)s[i]=r.getFloat();const o=new _.TextureDescriptor;return o.dataType=d.PixelType.FLOAT,o.samplingMode=d.TextureSamplingMode.NEAREST,o.width=t,o.height=t,new c.Texture(e,o,s)}}return f}));
