/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../core/Logger","../../../../../core/maybe","../enums","../VertexStream","./WGLGeometryBrushMarker","../effects/Effect","../techniques/utils","../../../../webgl/contextUtils","../../../../webgl/enums","../../../../webgl/FramebufferObject","../../../../webgl/heatmapTextureUtils","../../../../webgl/Renderbuffer","../../../../webgl/RenderbufferDescriptor","../../../../webgl/Texture","../../../../webgl/TextureDescriptor"],(function(e,t,r,i,a,s,u,n,o,l,c,f,h,d,p){"use strict";const m=e.getLogger("esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap");function _(e){return"heatmap"===e.type}function b(e,t){const{referenceScale:r,radius:i}=e;return i*(0!==r?r/t.scale:1)}class F extends a{constructor(){super(...arguments),this.brushEffect=new S}supportsSymbology(e){return e===r.WGLSymbologyType.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null}prepareState(){}drawGeometry(e,t,r,i){const{defines:a}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...a]:a)}_drawMarkers(e,t,r,i,a,s,n){const{context:l,rendererInfo:c,state:f}=e,{rendererSchema:h}=c;u.assertRendererSchema(h,"heatmap");const{isFieldActive:d}=h;r.setUniform1f("u_radius",b(h,f)),n||(r.setUniform1f("u_isFieldActive",d),l.setStencilFunction(o.CompareFunction.GEQUAL,t.stencilRef,255)),l.drawElements(i,a,o.DataType.UNSIGNED_INT,s)}}const g={vsPath:"heatmap/heatmapResolve",fsPath:"heatmap/heatmapResolve",attributes:new Map([["a_position",0]])},w=.25,T=1/(2*w);function B(e){return e<T?1:w}class S extends s.Effect{constructor(){super(...arguments),this.name=this.constructor.name}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,null!=this._accumulateFramebuffer&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=t.disposeMaybe(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=t.disposeMaybe(this._accumulateFramebuffer),this._resolveGradientTexture=t.disposeMaybe(this._resolveGradientTexture),this._tileQuad=t.disposeMaybe(this._tileQuad)}bind(e){const{context:t,rendererInfo:r,passOptions:i,state:a}=e,{rendererSchema:s}=r;!(null!=i&&"hittest"===i.type)&&_(s)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),u.assertRendererSchema(s,"heatmap"),this._loadResources(e),this._updateResources(t,s,a),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(o.BlendFactor.ONE,o.BlendFactor.ONE),t.setClearColor(0,0,0,0),t.clear(o.ClearBufferBit.COLOR_BUFFER_BIT))}unbind(){this._prevFBO=null,this._prevViewport=null}draw(e){const{context:t,painter:r,rendererInfo:i,passOptions:a}=e,{rendererSchema:s}=i;if(null!=a&&"hittest"===a.type||!_(s))return;const{defines:u}=this.loadQualityProfile(t),n=r.materialManager.getProgram(g,u);t.useProgram(n),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(o.BlendFactor.ONE,o.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:l,minDensity:c,densityRange:f}=s;t.bindTexture(this._accumulateFramebuffer.colorTexture,8),t.bindTexture(this._resolveGradientTexture,9),n.setUniform1i("u_texture",8),n.setUniform1i("u_gradient",9),n.setUniform2f("u_densityMinAndInvRange",c,1/f),n.setUniform1f("u_densityNormalization",3/(l*l*Math.PI)),this._tileQuad.draw()}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:a,pixelFormat:s,internalFormat:u,requiresSharedStencilBuffer:n}=this.loadQualityProfile(e),{width:c,height:m}=this._prevViewport,_=n?1:w,b=c*_,F=m*_;let g=new p.TextureDescriptor(b,F);g.pixelFormat=s,g.internalFormat=u,g.dataType=r,g.samplingMode=a,g.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE,n||(this._accumulateOutputStencilBuffer??(this._accumulateOutputStencilBuffer=new f.Renderbuffer(e,new h.RenderbufferDescriptor(o.RenderbufferFormat.DEPTH_STENCIL,b,F)))),this._accumulateFramebuffer??(this._accumulateFramebuffer=new l.FramebufferObject(e,g,n?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer)),g=new p.TextureDescriptor,g.wrapMode=o.TextureWrapMode.CLAMP_TO_EDGE,this._resolveGradientTexture??(this._resolveGradientTexture=new d.Texture(e,g)),this._tileQuad??(this._tileQuad=new i(e,[0,0,1,0,0,1,1,1]))}_updateResources(e,t,r){const{gradientHash:i,gradient:a}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(a.length/4,1),this._resolveGradientTexture.setData(a),this._prevGradientHash=i);const{requiresSharedStencilBuffer:s}=this.loadQualityProfile(e),u=s?1:B(b(t,r)),{width:n,height:l}=this._prevViewport,c=n*u,f=l*u,{width:h,height:d}=this._accumulateFramebuffer;if(h!==c||d!==f){const e=this._accumulateFramebuffer.depthStencil;if(s&&null!=e){const{width:t,height:r}=e.descriptor;t===c&&r===f||(m.errorOnce("Attempted to resize shared stencil buffer! Detaching instead."),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(c,f)}s||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,o.ClearBufferBit.STENCIL_BUFFER_BIT,o.TextureSamplingMode.NEAREST)}loadQualityProfile(e){if(null==this._qualityProfile){const t=c.loadHeatmapTextureConfiguration(e,m),r=e.type===n.ContextType.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,defines:t.dataType!==o.PixelType.FLOAT?["heatmapPrecisionHalfFloat"]:[]}}return this._qualityProfile}}return F}));
