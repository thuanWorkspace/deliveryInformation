/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../enums","../Utils","./WGLGeometryBrush","../materialKey/MaterialKey","../techniques/utils","../../../../webgl/enums"],(function(e,t,a,o,r,i){"use strict";const n={shader:"materials/icon",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:i.DataType.SHORT},{location:1,name:"a_vertexOffset",count:2,type:i.DataType.SHORT},{location:2,name:"a_texCoords",count:2,type:i.DataType.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:i.DataType.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:i.DataType.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:i.DataType.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:i.DataType.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:i.DataType.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:i.DataType.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]};class s extends a{dispose(){}getGeometryType(){return e.WGLGeometryType.MARKER}supportsSymbology(t){return t!==e.WGLSymbologyType.HEATMAP&&t!==e.WGLSymbologyType.PIE_CHART}drawGeometry(e,a,s,y){const{context:l,painter:m,rendererInfo:p,state:u,passOptions:c,requestRender:d,allowDelayedRender:T}=e,_=o.MarkerMaterialKey.load(s.materialKey),S=r.getTechniqueFromMaterialKey(_.data),D=null!=c&&"hittest"===c.type,{shader:E,vertexLayout:g,hittestAttributes:N}=S.programSpec??n;let G=i.PrimitiveType.TRIANGLES,f=t.createProgramDescriptor(_.data,g);D&&(f=this._getTriangleDesc(s.materialKey,f,N),G=i.PrimitiveType.POINTS);const{attributes:h,bufferLayouts:M}=f,R=m.materialManager.getMaterialProgram(e,_,E,h,y);if(T&&null!=d&&!R.compiled)return void d();l.useProgram(R),_.textureBinding&&m.textureManager.bindTextures(l,R,_,!0),this._setSharedUniforms(R,e,a);const x=_.vvRotation?u.displayViewMat3:u.displayMat3;R.setUniformMatrix3fv("u_displayMat3",x),this._setSizeVVUniforms(_,R,p,a),this._setColorAndOpacityVVUniforms(_,R,p),this._setRotationVVUniforms(_,R,p);const U=s.target.getVAO(l,M,h,D);let A=s.indexCount,O=s.indexFrom*Uint32Array.BYTES_PER_ELEMENT;D&&(A/=3,O/=3),l.bindVAO(U),this._drawMarkers(e,a,R,G,A,O,D),l.bindVAO(null)}_drawMarkers(e,t,a,o,r,n,s){e.context.drawElements(o,r,i.DataType.UNSIGNED_INT,n)}}return s}));
