/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../core/has","../../../../core/promiseUtils","./Rect","./RectangleBinPack","../../../webgl/enums","../../../webgl/Texture","../../../webgl/TextureDescriptor"],(function(t,e,h,i,s,r,a){"use strict";const n=256,c=t=>Math.floor(t/256);function o(t){const e=new Set;for(const h of t)e.add(c(h));return e}function l(t,h,i){return t.has(h)||t.set(h,i().then((()=>{t.delete(h)})).catch((i=>{t.delete(h),e.throwIfNotAbortError(i)}))),t.get(h)}const g=t=>({rect:new h(0,0,0,0),page:0,metrics:{left:0,width:0,height:0,advance:0,top:0},code:t,sdf:!0});class _{constructor(t,e,h){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphCache={},this._textures=[],this._rangePromises=new Map,this._preloadCache={},this.width=t,this.height=e,this._glyphSource=h,this._binPack=new i(t-4,e-4),this._glyphData.push(new Uint8Array(t*e)),this._dirties.push(!0),this._textures.push(null),this._initDecorationGlyphs()}dispose(){this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0,this._glyphData.length=0}_initDecorationGlyphs(){const t=[117,149,181,207,207,181,149,117],e=[],h=[];for(let r=0;r<t.length;r++){const i=t[r];for(let t=0;t<11;t++){const s=r>=3&&r<5&&t>=3&&t<8?255:0;e.push(i),h.push(s)}}const i={metrics:{width:5,height:2,left:0,top:0,advance:0},bitmap:new Uint8Array(e)},s={metrics:{width:5,height:2,left:0,top:0,advance:0},bitmap:new Uint8Array(h)};this._recordGlyph(i),this._recordGlyph(s)}async getGlyphItems(t,e,h){const i=this._getGlyphCache(t);return await this._fetchRanges(t,e,h),e.map((e=>this._getMosaicItem(i,t,e)))}bind(t,e,h,i){const s=this._getTexture(t,h);s.setSamplingMode(e),this._dirties[h]&&(s.setData(this._glyphData[h]),this._dirties[h]=!1),t.bindTexture(s,i)}preloadASCIIGlyphCache(t){const e=this._preloadCache[t];if(null!=e)return e;const h=this._glyphSource.preloadASCIIRange(t).then((()=>{const e=this._getGlyphCache(t);for(let h=0;h<256;h++)this._getMosaicItem(e,t,h)}));return this._preloadCache[t]=h,h}_getGlyphCache(t){return this._glyphCache[t]||(this._glyphCache[t]={}),this._glyphCache[t]}_getTexture(t,e){if(!this._textures[e]){const h=new a.TextureDescriptor;h.pixelFormat=s.PixelFormat.ALPHA,h.wrapMode=s.TextureWrapMode.CLAMP_TO_EDGE,h.width=this.width,h.height=this.height,this._textures[e]=new r.Texture(t,h,new Uint8Array(this.width*this.height))}return this._textures[e]}_invalidate(){this._dirties[this._currentPage]=!0}async _fetchRanges(t,e,h){const i=o(e),s=[];i.forEach((e=>{s.push(this._fetchRange(t,e,h))})),await Promise.all(s)}async _fetchRange(t,e,h){if(e>n)return;const i=t+e;return l(this._rangePromises,i,(()=>this._glyphSource.getRange(t,e,h)))}_getMosaicItem(t,e,h){if(!t[h]){const i=this._glyphSource.getGlyph(e,h);if(!i?.metrics)return g(h);const s=this._recordGlyph(i),r=this._currentPage,a=i.metrics;t[h]={rect:s,page:r,metrics:a,code:h,sdf:!0},this._invalidate()}return t[h]}_recordGlyph(e){const s=e.metrics;let r;if(0===s.width)r=new h(0,0,0,0);else{const h=3,a=s.width+2*h,n=s.height+2*h;r=this._binPack.allocate(a,n),r.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(null),this._initDecorationGlyphs(),this._binPack=new i(this.width-4,this.height-4),r=this._binPack.allocate(a,n));const c=this._glyphData[this._currentPage],o=e.bitmap;let l,g;if(o)for(let t=0;t<n;t++){l=a*t,g=this.width*(r.y+t)+r.x;for(let t=0;t<a;t++)c[g+t]=o[l+t]}t("esri-glyph-debug")&&this._showDebugPage(c)}return r}_showDebugPage(t){const e=document.createElement("canvas"),h=e.getContext("2d"),i=new ImageData(this.width,this.height),s=i.data;e.width=this.width,e.height=this.height,e.style.border="1px solid black";for(let r=0;r<t.length;++r)s[4*r]=t[r],s[4*r+1]=0,s[4*r+2]=0,s[4*r+3]=255;h.putImageData(i,0,0),document.body.appendChild(e)}}return _}));
