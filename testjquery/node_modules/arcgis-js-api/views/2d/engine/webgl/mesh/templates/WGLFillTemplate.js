/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../../core/screenUtils","../../color","../../definitions","../../GeometryUtils","../../number","../../materialKey/MaterialKey","./util","./WGLBaseFillTemplate","./WGLMeshTemplate"],(function(t,e,o,i,r,s,a,l,n){"use strict";class c extends(l(n)){constructor(t,e,i,a,l,n,c,m,p,d,F,h,u,f,x,y){super(),this._effects=f||void 0;const M=s.FillMaterialKey.load(t);e&&(M.sdf=e.sdf,M.pattern=!0,M.textureBinding=e.textureBinding),this.fillColor=i,this.tl=a,this.br=l,this.aux21=r.i1616to32(n,c),this.aux22=r.i1616to32(m,p),this.aux3=r.i8888to32(d,F,h,0),this._bitset=u,this._minMaxZoom=r.i1616to32(Math.round(x*o.minMaxZoomPrecisionFactor),Math.round(y*o.minMaxZoomPrecisionFactor)),this._materialKey=M.data}static fromCIMFill(s,l,n){const m=s.color,p=m&&e.premultiplyAlphaRGBA(m)||0,d=s.materialKey,[F,h]=a.getMinMaxZoom(s.scaleInfo,n);let u=(s.colorLocked?o.bitsetGenericLockColor:0)|(s.applyRandomOffset?o.bitsetFillRandomPatternOffset:0)|(s.sampleAlphaOnly?o.bitsetGenericConsiderAlphaOnly:0)|(s.hasUnresolvedReplacementColor?o.bitsetFillHasUnresolvedReplacementColor:0);if(!l)return new c(d,null,p,0,0,0,0,0,0,0,0,0,u,s.effects,F,h);const{rect:f,width:x,height:y}=l,M=s.scaleX||1,P=f.x+o.spritePadding,U=f.y+o.spritePadding,g=P+x,b=U+y,C=t.pt2px(s.height);let H=M*C;"CIMHatchFill"===s.cim.type&&(H*=x/y);let Z=C;Z<=0&&(Z=b-U),Z<o.maxSizeForU16Compression&&(Z*=o.compressionFactorForU16,u|=o.bitsetFillHasPatternHeightPrecisionFactor),Z=Math.round(Z);let w=H;w<=0&&(w=g-P),w<o.maxSizeForU16Compression&&(w*=o.compressionFactorForU16,u|=o.bitsetFillHasPatternWidthPrecisionFactor),w=Math.round(w);const A=t.pt2px(s.offsetX||0),G=t.pt2px(-s.offsetY||0),S=r.i1616to32(P,U),L=r.i1616to32(g,b);return new c(d,l,p,S,L,w,Z,A,G,o.compressionFactorForU16,o.compressionFactorForU16,i.degToByte(s.angle),u,s.effects,F,h)}static fromSimpleFill(t,i,s=!1){const{color:l}=t,n=l&&"esriSFSNull"!==t.style&&e.premultiplyAlphaRGBAArray(l)||0;let m=s?o.bitsetGenericLockColor:0;const p=t.materialKey;let d;if(i){const{rect:t,width:e,height:s,pixelRatio:l}=i,F=t.x+o.spritePadding,h=t.y+o.spritePadding,u=F+e,f=h+s,x=r.i1616to32(F,h),y=r.i1616to32(u,f);let M=e/l;M<o.maxSizeForU16Compression&&(M*=o.compressionFactorForU16,m|=o.bitsetFillHasPatternWidthPrecisionFactor),M=Math.round(M);let P=s/l;P<o.maxSizeForU16Compression&&(P*=o.compressionFactorForU16,m|=o.bitsetFillHasPatternHeightPrecisionFactor),P=Math.round(P),d=new c(p,i,n,x,y,M,P,0,0,o.compressionFactorForU16,o.compressionFactorForU16,0,m,null,a.defaultMinZoom,a.defaultMaxZoom)}else d=new c(p,null,n,0,0,0,0,0,0,0,0,0,m,null,a.defaultMinZoom,a.defaultMaxZoom);return d._maybeAddLineTemplate(t),d}static fromPictureFill(e,i,s=!1){const l=o.pictureFillColor,{rect:n,width:m,height:p}=i,d=n.x+o.spritePadding,F=n.y+o.spritePadding,h=d+m,u=F+p,f=r.i1616to32(d,F),x=r.i1616to32(h,u);let y=s?o.bitsetGenericLockColor:0,M=t.pt2px(e.width);M<o.maxSizeForU16Compression&&(M*=o.compressionFactorForU16,y|=o.bitsetFillHasPatternWidthPrecisionFactor),M=Math.round(M);let P=t.pt2px(e.height);P<o.maxSizeForU16Compression&&(P*=o.compressionFactorForU16,y|=o.bitsetFillHasPatternHeightPrecisionFactor),P=Math.round(P);const U=t.pt2px(e.xoffset),g=t.pt2px(-e.yoffset),b=e.materialKey,C=new c(b,i,l,f,x,M,P,U,g,o.compressionFactorForU16*e.xscale,o.compressionFactorForU16*e.yscale,0,y,null,a.defaultMinZoom,a.defaultMaxZoom);return C._maybeAddLineTemplate(e),C}}return c}));
