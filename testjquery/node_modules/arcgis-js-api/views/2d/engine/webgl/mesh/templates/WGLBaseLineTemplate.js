/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../../geometry/GeometryCursor","../../definitions","../../enums","../../number","../../TurboLine","../../materialKey/MaterialKey","./templateUtils"],(function(e,t,i,r,s,o,l){"use strict";const n=8,a=16,h=65535,d=r=>class extends r{constructor(...e){super(...e),this.tessellationProperties={},this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0},this.geometryType=i.WGLGeometryType.LINE}writeGeometry(e,t,i,r){this._writeGeometry(e,t,i,r)}_initializeTessellator(e){const i=o.LineMaterialKey.load(this._materialKey),r=o.FillMaterialKey.load(this._materialKey),l=this._tessellationOptions,n=i.vvSizeFieldStops||i.vvSizeMinMaxValue||i.vvSizeScaleStops||i.vvSizeUnitValue,a=this.tessellationProperties._halfWidth<t.thinLineHalfWidthThreshold&&!e&&!n;this.tessellationProperties.minMaxZoom=this._minMaxZoom,l.wrapDistance=h,l.textured=this._isDashed||this._hasPattern,l.offset=this.tessellationProperties.offset,l.halfWidth=this.tessellationProperties._halfWidth;const d=a?0:1,_=o.hasOutlineFillSymbology(r)?x:y;this._lineTessellator=new s.LineTessellation(_(this.tessellationProperties,d,d),u(this.tessellationProperties),a)}_write(e,t,i,r){const s="esriGeometryPoint"===t.geometryType;e.recordStart(t.getDisplayId(),this._materialKey,this.geometryType,s),this._writeGeometry(e,t,r,s),e.recordEnd()}_writeGeometry(t,i,r,s){const o=r||e.GeometryCursor.fromFeatureSetReaderCIM(i);if(!o)return;const l=this._getLines(o,s);null!=l&&this._writeVertices(t,i,l)}_getLines(e,t){const i=t?256:16;return l.clipLinesMarshall(e,i)}_writeVertices(e,t,i){const r=t.getDisplayId(),s=e.vertexCount(),l=this.tessellationProperties,n=this._tessellationOptions;l.out=e,l.id=r,l.indexCount=0,l.vertexCount=0,l.offset=s,n.capType=this._capType,n.joinType=this._joinType;const a=o.FillMaterialKey.load(this._materialKey);this.tessellationProperties.key=o.hasOutlineFillSymbology(a)?a:o.LineMaterialKey.load(this._materialKey);for(const{line:o,start:d}of i)n.initialDistance=d%h,this._lineTessellator.tessellate(o,n)}},y=(e,t,i)=>(s,o,l,h,d,y,x,u,_,v,m)=>{const c=r.i1616to32(m,Math.ceil(a*e._halfWidth)),f=r.i8888to32(Math.round(a*x),Math.round(a*u),Math.round(a*_),Math.round(a*v)),p=r.i8888to32(a*d,a*y,0,e._bitset),W=e.out;return W.vertexBounds(s,o,t,i),W.vertexWrite(r.i1616to32(n*s,n*o)),W.vertexWrite(e.id),W.vertexWrite(e._fillColor),W.vertexWrite(f),W.vertexWrite(c),W.vertexWrite(e._tl),W.vertexWrite(e._br),W.vertexWrite(p),W.vertexWrite(r.i1616to32(Math.ceil(a*e._halfReferenceWidth),0)),W.vertexWrite(e.minMaxZoom),W.vertexEnd(),e.offset+e.vertexCount++},x=(e,t,i)=>(s,l,h,d,y,x,u,_,v,m,c)=>{const f=r.i1616to32(a*e._halfWidth,a*e._halfReferenceWidth),p=r.i8888to32(a*u+128,a*_+128,a*v+128,a*m+128),W=e.out,M=e._bitset<<24|e.id;W.vertexBounds(s,l,t,i),W.vertexWrite(r.i1616to32(n*s,n*l)),W.vertexWrite(M),W.vertexWrite(e._fillColor);const T=o.hasSimpleSymbology(e.key);return T||(W.vertexWrite(0),W.vertexWrite(0)),W.vertexWrite(0),W.vertexWrite(f),W.vertexWrite(p),T||W.vertexWrite(e.minMaxZoom),W.vertexEnd(),e.offset+e.vertexCount++},u=e=>(t,i,r)=>{const s=e.out;s.indexWrite(t),s.indexWrite(i),s.indexWrite(r),e.indexCount+=3};return d}));
