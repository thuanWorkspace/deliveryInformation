/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../../core/Logger","../../../../../../core/screenUtils","../../../../../../symbols/cim/enums","../../color","../../definitions","../../number","../../Utils","../../materialKey/MaterialKey","./util","./WGLBaseLineTemplate","./WGLMeshTemplate"],(function(e,t,i,l,s,r,o,n,a,c,p){"use strict";class m extends(c(p)){constructor(e,t,i,l,o,c,p,m,h,d,u,y,f,L,g,S,x,M,P,_){super();const b=n.LineMaterialKey.load(e);t&&(b.sdf=t.sdf,b.pattern=!0,b.textureBinding=t.textureBinding),this._capType=l,this._joinType=o,this._miterLimitCosine=a.getLimitCosine(c),this.tessellationProperties._fillColor=p,this.tessellationProperties._tl=m,this.tessellationProperties._br=h,this._hasPattern=d,this._isDashed=u,this._zOrder=x,this._effects=M||null,this._minMaxZoom=r.i1616to32(Math.round(P*s.minMaxZoomPrecisionFactor),Math.round(_*s.minMaxZoomPrecisionFactor)),this._materialKey=b.data;const K=L?s.bitsetTypeFillOutline:0,T=(f?s.bitsetGenericLockColor:0)|K|(y?s.bitsetLineScaleDash:0)|(g?s.bitsetGenericConsiderAlphaOnly:0);this.tessellationProperties._bitset=T,this.tessellationProperties._halfWidth=.5*i,this.tessellationProperties._halfReferenceWidth=.5*S,this.tessellationProperties.offset=0,this._initializeTessellator(!1)}static fromCIMLine(e,o,n){const c=e.color,p=e.scaleFactor||1,h=!!e.dashTemplate;let d=e.cap;h&&d===i.CapType.ROUND&&(d=i.CapType.SQUARE);const u=e.join,y=t.pt2px(e.width)*p,f=t.pt2px(e.referenceWidth),L=t.pt2px(e.miterLimit),g=c&&l.premultiplyAlphaRGBA(c)||0,[S,x]=a.getMinMaxZoom(e.scaleInfo,n),M=!1;if(!o)return new m(e.materialKey,o,y,d,u,L,g,0,0,!1,h,e.scaleDash??!1,e.colorLocked??!1,M,e.sampleAlphaOnly,f,e.zOrder,e.effects,S,x);const{rect:P,width:_,height:b}=o,K=P.x+s.spritePadding,T=P.y+s.spritePadding,w=K+_,O=T+b,A=r.i1616to32(K,T),C=r.i1616to32(w,O),Z=!1;return new m(e.materialKey,o,y,d,u,L,g,A,C,!0,h,e.scaleDash??!1,e.colorLocked??!1,Z,e.sampleAlphaOnly,f,e.zOrder,e.effects,S,x)}static fromFillOutline(e){const t=n.FillMaterialKey.load(e.materialKey);return n.hasOutlineFillSymbology(t)&&e.outline&&"esriSLSSolid"===e.outline?.style?m.fromSimpleLine({hash:"",materialKey:e.materialKey,...e.outline},null,!0):null}static fromSimpleLine(e,i,n=!1){const{color:c}=e,p="esriSLSSolid"!==e.style&&"esriSLSNull"!==e.style,h=o.getCapType(e.cap||"round"),d=o.getJoinType(e.join||"round");let u=c&&"esriSLSNull"!==e.style&&l.premultiplyAlphaRGBAArray(c)||0;"esriSLSNull"===e.style&&(u=0);const y=t.pt2px(e.width),f=e.miterLimit;if(!i)return new m(e.materialKey,i,y,h,d,f,u,0,0,!1,p,!0,!1,n,!1,y,0,null,a.defaultMinZoom,a.defaultMaxZoom);const{rect:L,width:g,height:S}=i,x=L.x+s.spritePadding,M=L.y+s.spritePadding,P=x+g,_=M+S,b=r.i1616to32(x,M),K=r.i1616to32(P,_);return new m(e.materialKey,i,y,h,d,f,u,b,K,!0,p,!0,!1,n,!1,y,0,null,a.defaultMinZoom,a.defaultMaxZoom)}static fromPictureLineSymbol(t,i,l,s){return e.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate").error("PictureLineSymbol support does not exist!"),null}}return m}));
