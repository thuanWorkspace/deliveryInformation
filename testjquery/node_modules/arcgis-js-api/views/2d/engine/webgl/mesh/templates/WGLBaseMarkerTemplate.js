/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../../core/screenUtils","../../../../../../chunks/mat2d","../../../../../../chunks/mat2df32","../../../../../../chunks/vec2","../../../../../../chunks/vec2f32","../../../../../../geometry/GeometryCursor","../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper","../../definitions","../../enums","../../number","../../materialKey/MaterialKey"],(function(t,e,i,r,s,o,h,n,a,x,_){"use strict";const l=3.14159265359/180,f=8;return c=>class extends c{constructor(...t){super(...t),this.angle=0,this.xOffset=0,this.yOffset=0,this.width=0,this.height=0,this.boundsType="square",this._anchorX=0,this._anchorY=0,this._computedWidth=0,this._computedHeight=0,this._allowBorrowing=!0,this._vertexBoundsScaleX=1,this._vertexBoundsScaleY=1,this.geometryType=a.WGLGeometryType.MARKER}_write(t,e,i,r){const s=e.getDisplayId();t.recordStart(s,this._materialKey,this.geometryType,!0),this._writeGeometry(t,e,s,i,r),t.recordEnd()}_writeGeometry(t,e,i,r,s){if(null!=this._markerPlacement)return this._writePlacedMarkers(t,e,r,s);if(this._allowBorrowing=!0,!s&&"esriGeometryPoint"===e.geometryType){const r=e.getX(),s=e.getY();if(!t.hasAggregates&&t.hasPixelBufferEnabled&&(r<0||r>=513||s<0||s>=513))return;return this._writeVertices(t,i,this._getPos(r,s),r,s)}const o=s?s.asOptimized():"esriGeometryPolygon"===e.geometryType?e.readCentroid():e.readGeometryForDisplay();if(null!=o){if(o.isPoint){const[e,r]=o.coords;if(!t.hasAggregates&&t.hasPixelBufferEnabled&&(e<0||e>=512||r<0||r>=512))return;return this._writeVertices(t,i,this._getPos(e,r),e,r)}o.forEachVertex(((e,r)=>{const s=2*n.tileSize;e<-s||e>=s||r<-s||r>=s||this._writeVertices(t,i,this._getPos(e,r),e,r)}))}}_writePlacedMarkers(e,r,n,a){const x=a||o.GeometryCursor.fromFeatureSetReaderCIM(r);if(!x)return;const _=-1,f=h.CIMMarkerPlacementHelper.getPlacement(x,_,this._markerPlacement,t.pt2px(1),e.tileKey,n.geometryEngine);if(!f)return;this._allowBorrowing="esriGeometryPolygon"!==r.geometryType;const c=r.getDisplayId(),d=s.create(),m=i.create(),v=-128,W=640;let u=f.next();for(;null!=u;){const t=u.tx,i=-u.ty;t>=v&&t<=W&&i>=v&&i<=W&&(this._applyTransformation(m,d,-u.getAngle()/l),this._writeVertices(e,c,this._getPos(t,i),t,i)),u=f.next()}}_writeVertices(t,e,i,r,s){const o=_.MarkerMaterialKey.load(this._materialKey);return o.symbologyType===a.WGLSymbologyType.HEATMAP?this._writeHeatmapVertices(t,e,i):this._writeMarkerVertices(t,e,o,i,r,s)}_writeMarkerVertices(t,e,i,r,s,o){const h=i.vvRotation,n=t.vertexCount();let a=this._computedWidth*this._vertexBoundsScaleX,x=this._computedHeight*this._vertexBoundsScaleY;if(this.angle){const t=Math.max(a,x);a=t,x=t}if(h){const t=Math.max(this.xOffset,this.yOffset);a+=t,x+=t}this._allowBorrowing&&t.vertexBounds(s+this.xOffset,o-this.yOffset,a,x),t.vertexWrite(r),t.vertexWrite(this._offsetUpperLeft),t.vertexWrite(this._texUpperLeft),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),t.vertexWrite(r),t.vertexWrite(this._offsetUpperRight),t.vertexWrite(this._texUpperRight),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),t.vertexWrite(r),t.vertexWrite(this._offsetBottomLeft),t.vertexWrite(this._texBottomLeft),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),t.vertexWrite(r),t.vertexWrite(this._offsetBottomRight),t.vertexWrite(this._texBottomRight),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),this._writeIndices(t,n)}_writeHeatmapVertices(t,e,i){const r=t.vertexCount();t.vertexWrite(i),t.vertexWrite(this._offsetUpperLeft),t.vertexWrite(e),t.vertexEnd(),t.vertexWrite(i),t.vertexWrite(this._offsetUpperRight),t.vertexWrite(e),t.vertexEnd(),t.vertexWrite(i),t.vertexWrite(this._offsetBottomLeft),t.vertexWrite(e),t.vertexEnd(),t.vertexWrite(i),t.vertexWrite(this._offsetBottomRight),t.vertexWrite(e),t.vertexEnd(),this._writeIndices(t,r)}_writeIndices(t,e){t.indexWrite(e+0),t.indexWrite(e+1),t.indexWrite(e+2),t.indexWrite(e+1),t.indexWrite(e+3),t.indexWrite(e+2)}_applyTransformation(t,i,o=0){o?e.fromRotation(t,l*o):e.identity(t),e.translate(t,t,s.fromValues(this.xOffset,-this.yOffset)),this.angle&&e.rotate(t,t,l*this.angle);const h=this._computedWidth,n=this._computedHeight,a=-(.5+this._anchorX)*h,_=-(.5-this._anchorY)*n;r.set(i,a,_),r.transformMat2d(i,i,t),this._offsetUpperLeft=x.i1616to32(16*i[0],16*i[1]),r.set(i,a+h,_),r.transformMat2d(i,i,t),this._offsetUpperRight=x.i1616to32(16*i[0],16*i[1]),r.set(i,a,_+n),r.transformMat2d(i,i,t),this._offsetBottomLeft=x.i1616to32(16*i[0],16*i[1]),r.set(i,a+h,_+n),r.transformMat2d(i,i,t),this._offsetBottomRight=x.i1616to32(16*i[0],16*i[1])}_computeSize(t,e,i,r,s,o,h,a){const _=t*i,l=e*i;if(!!o.sdf&&!h){const i=a&&t>e?_:t,s=e,o=r+2*1;t=Math.min(i+o,_),e=Math.min(s+o,l)}else t=_,e=l;const f=n.sdfTextureSize/Math.max(_,l),c=.5*(_-t)*f,d=.5*(l-e)*f,m=o.rect.x+n.spritePadding+c,v=o.rect.y+n.spritePadding+d,W=m+o.width-2*c,u=v+o.height-2*d,g=Math.floor(m),p=Math.floor(v),y=Math.ceil(W),M=Math.ceil(u);t*=(y-g)/(W-m),e*=(M-p)/(u-v),this._texUpperLeft=x.i1616to32(g,p),this._texUpperRight=x.i1616to32(y,p),this._texBottomLeft=x.i1616to32(g,M),this._texBottomRight=x.i1616to32(y,M),this._anchorX*=_/t,this._anchorY*=l/e,t*=s,e*=s,this._computedWidth=t,this._computedHeight=e}_getPos(t,e){return x.i1616to32(Math.round(f*t),Math.round(f*e))}}}));
