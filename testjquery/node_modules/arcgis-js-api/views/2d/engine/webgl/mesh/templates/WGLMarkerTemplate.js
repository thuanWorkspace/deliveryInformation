/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../../core/screenUtils","../../../../../../chunks/mat2df32","../../../../../../chunks/vec2f32","../../../../../../symbols/cim/enums","../../color","../../definitions","../../enums","../../number","../../materialKey/MaterialKey","./util","./WGLBaseMarkerTemplate","./WGLMeshTemplate"],(function(t,e,i,o,r,a,n,l,s,m,c,h){"use strict";class u extends(c(h)){constructor(t,r,m,c,h,u,p,d,x,M,f,y,S,g,A,V,_,b,k,z,P,B,C,w){super(),this.angle=c,this.height=p,this.width=u,this.xOffset=r*k,this.yOffset=m*k,this._markerPlacement=z||void 0,this._effects=P||void 0,this._anchorX=V,this._anchorY=_,this._minMaxZoom=l.i1616to32(Math.round(B*a.minMaxZoomPrecisionFactor),Math.round(C*a.minMaxZoomPrecisionFactor));const E=(g===o.Alignment.MAP?a.bitsetMarkerAlignmentMap:a.bitsetMarkerAlignmentScreen)|(f?a.bitsetGenericLockColor:0)|(S?a.bitsetMarkerOutlineAllowColorOverride:0)|(y?a.bitsetMarkerScaleSymbolsProportionally:0),R=A&&A.sdf,v=s.MarkerMaterialKey.load(t);v.sdf=R,v.pattern=!0,v.textureBinding=A.textureBinding,this._materialKey=v.data,this._fillColor=h,this._outlineColor=x,this._sizeOutlineWidth=l.i8888to32(Math.round(Math.min(Math.sqrt(128*u),255)),Math.round(Math.min(Math.sqrt(128*p),255)),Math.round(Math.min(Math.sqrt(128*M),255)),Math.round(Math.min(Math.sqrt(128*d),255))),v.symbologyType===n.WGLSymbologyType.PIE_CHART?(u*=b*k,p*=b*k,this._computedWidth=u,this._computedHeight=p,this._texUpperLeft=l.i1616to32(0,1),this._texUpperRight=l.i1616to32(1,1),this._texBottomLeft=l.i1616to32(0,0),this._texBottomRight=l.i1616to32(1,0)):this._computeSize(u,p,b,M,k,A,v.hasSizeVV(),w);const L=Math.round(64*b);this._bitestAndDistRatio=l.i1616to32(E,L);const T=i.create(),Z=e.create();this._applyTransformation(Z,T)}static fromCIMMarker(e,i,a){const n=i&&i.width||1,l=i&&i.height||1,s=e.size,c=n/l*e.scaleX,h=e.scaleSymbolsProportionally&&e.frameHeight?s/e.frameHeight:1,p=r.premultiplyAlphaRGBA(e.color),d=r.premultiplyAlphaRGBA(e.outlineColor),x=t.pt2px(s),M=x*c,f=t.pt2px(e.offsetX||0),y=t.pt2px(e.offsetY||0),S=t.pt2px(e.outlineWidth||0)*h,g=e.alignment||o.Alignment.SCREEN,A=t.pt2px(e.referenceSize),[V,_]=m.getMinMaxZoom(e.scaleInfo,a);let b=e.rotation||0;e.rotateClockwise||(b=-b);let k=0,z=0;const P=e.anchorPoint;P&&(e.isAbsoluteAnchorPoint?s&&(k=P.x/(s*c),z=P.y/s):(k=P.x,z=P.y));const B=new u(e.materialKey,f,y,b,p,M,x,A,d,S,e.colorLocked,e.scaleSymbolsProportionally,!1,g,i,k,z,e.sizeRatio,e.scaleFactor??1,e.markerPlacement,e.effects,V,_,!0);return B._vertexBoundsScaleX=e.maxVVSize?e.maxVVSize/M:1,B._vertexBoundsScaleY=e.maxVVSize?e.maxVVSize/x:1,B}static fromPictureMarker(e,i){const r=Math.round(t.pt2px(e.width)),n=Math.round(t.pt2px(e.height)),l=a.pictureFillColor,s=Math.round(t.pt2px(e.xoffset||0)),c=Math.round(t.pt2px(e.yoffset||0)),h=new u(e.materialKey,s,c,e.angle,l,r,n,n,0,0,!1,!1,!1,o.Alignment.SCREEN,i,0,0,1,1,null,null,m.defaultMinZoom,m.defaultMaxZoom,!1);return h._vertexBoundsScaleX=e.maxVVSize?e.maxVVSize/e.width:1,h._vertexBoundsScaleY=e.maxVVSize?e.maxVVSize/e.height:1,h}static fromSimpleMarker(e,i){const a=e.style,n=r.premultiplyAlphaRGBAArray(e.color),l=Math.round(t.pt2px(e.size));let s=l;"esriSMSTriangle"===a&&(s*=i.height/i.width);const c=Math.round(t.pt2px(e.xoffset||0)),h=Math.round(t.pt2px(e.yoffset||0)),p=e.outline,d=0|(p?.color&&r.premultiplyAlphaRGBAArray(p.color)),x=0|(p?.width&&Math.round(t.pt2px(p.width))),M=new u(e.materialKey,c,h,e.angle??0,n,l,s,s,d,x,!1,!1,"esriSMSCross"===a||"esriSMSX"===a,o.Alignment.SCREEN,i,0,0,2,1,null,null,m.defaultMinZoom,m.defaultMaxZoom,!1);return M.boundsType="esriSMSCircle"===a?"circle":"square",M._vertexBoundsScaleX=e.maxVVSize?e.maxVVSize/e.size:1,M._vertexBoundsScaleY=e.maxVVSize?e.maxVVSize/e.size:1,M}static fromLineSymbolMarker(e,i){const a=r.premultiplyAlphaRGBAArray(e.color),n=6,l=Math.round(t.pt2px(n*e.lineWidth)),s=l,c="cross"===e.style||"x"===e.style;let h;switch(e.placement){case"begin-end":h=o.ExtremityPlacement.Both;break;case"begin":h=o.ExtremityPlacement.JustBegin;break;case"end":h=o.ExtremityPlacement.JustEnd;break;default:h=o.ExtremityPlacement.None}const p={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:h,offsetAlongLine:0},d=new u(e.materialKey,0,0,0,a,l,s,s/n,a,c?Math.round(t.pt2px(e.lineWidth)):0,!1,!1,c,o.Alignment.MAP,i,0,0,2,1,p,null,m.defaultMinZoom,m.defaultMaxZoom,!1);return d.boundsType="circle"===e.style?"circle":"square",d}}return u}));
