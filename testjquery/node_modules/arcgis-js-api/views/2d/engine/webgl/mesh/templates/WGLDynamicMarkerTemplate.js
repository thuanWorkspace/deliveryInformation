/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../../core/Error","../../../../../../core/Logger","../../../../../../core/screenUtils","../../../../../../chunks/mat2df32","../../../../../../chunks/vec2f32","../../../../../../symbols/cim/enums","../../../../../../symbols/cim/utils","../../color","../../definitions","../../number","../../materialKey/MaterialKey","./util","./WGLBaseMarkerTemplate","./WGLDynamicMeshTemplate","../../util/Result"],(function(t,e,i,s,a,r,o,n,c,l,h,m,p,u,y){"use strict";const _=a.create(),f=s.create();class M extends(p(u)){constructor(t,e,s){super(t),this._cimMarkerLayer=t,this._minMaxZoom=l.i1616to32(Math.round(e*c.minMaxZoomPrecisionFactor),Math.round(s*c.minMaxZoomPrecisionFactor));const a=t.color;if(o.isFeatureValueFn(a)){const t=(t,e,i)=>n.premultiplyAlphaRGBA(a(t,e,i));this._dynamicPropertyMap.set("_fillColor",t)}else this._fillColor=n.premultiplyAlphaRGBA(a);const h=t.outlineColor;if(o.isFeatureValueFn(h)){const t=(t,e,i)=>n.premultiplyAlphaRGBA(h(t,e,i));this._dynamicPropertyMap.set("_outlineColor",t)}else this._outlineColor=n.premultiplyAlphaRGBA(h);const m=t.size;if(o.isFeatureValueFn(m)){const t=(t,e,s)=>i.pt2px(m(t,e,s));this._dynamicPropertyMap.set("_size",t)}else this._size=i.pt2px(m)||0;const p=t.scaleX;o.isFeatureValueFn(p)?this._dynamicPropertyMap.set("_scaleX",p):this._scaleX=p;const u=t.offsetX;if(o.isFeatureValueFn(u)){const t=(t,e,s)=>i.pt2px(u(t,e,s));this._dynamicPropertyMap.set("xOffset",t)}else this.xOffset=i.pt2px(u)||0;const y=t.offsetY;if(o.isFeatureValueFn(y)){const t=(t,e,s)=>i.pt2px(y(t,e,s));this._dynamicPropertyMap.set("yOffset",t)}else this.yOffset=i.pt2px(y)||0;const _=t.outlineWidth;if(o.isFeatureValueFn(_)){const t=(t,e,s)=>i.pt2px(_(t,e,s));this._dynamicPropertyMap.set("_outlineWidth",t)}else this._outlineWidth=i.pt2px(_)||0;const f=t.rotation;if(o.isFeatureValueFn(f)?this._dynamicPropertyMap.set("_angle",f):this._angle=f||0,null!=t.effects){const e=t.effects;o.isFeatureValueFn(e)?this._dynamicPropertyMap.set("_effects",e):this._effects=e}if(null!=t.markerPlacement){const e=t.markerPlacement;o.isFeatureValueFn(e)?this._dynamicPropertyMap.set("_markerPlacement",e):this._markerPlacement=e}this._scaleFactor=t.scaleFactor??1,this._bitSet=(t.alignment===r.Alignment.MAP?c.bitsetMarkerAlignmentMap:c.bitsetMarkerAlignmentScreen)|(t.colorLocked?c.bitsetGenericLockColor:0)|(t.scaleSymbolsProportionally?c.bitsetMarkerScaleSymbolsProportionally:0),this._materialKey=t.materialKey}static fromCIMMarker(t,e){const[i,s]=m.getMinMaxZoom(t.scaleInfo,e);return new M(t,i,s)}bindFeature(s,a,r){const o=s.readLegacyFeature(),n=s.getObjectId();this._dynamicPropertyMap.forEach(((t,e)=>{this[e]=t(o,a,r)}));const c=this._cimMarkerLayer.materialHash,m="function"==typeof c?c(o,a,r,n):c,p=this._materialCache.get(m);if(!p||!y.ok(p.spriteMosaicItem)||!p.spriteMosaicItem)return void e.getLogger("esri.views.2d.engine.webgl.WGLDynamicMarkerTemplate").error(new t("mapview-cim","Encountered an error when binding feature"));const u=p.spriteMosaicItem,M=this._cimMarkerLayer.sizeRatio,d=u.width/u.height*this._scaleX,F=h.MarkerMaterialKey.load(this._materialKey);F.sdf=u.sdf,F.pattern=!0,F.textureBinding=u.textureBinding,this._materialKey=F.data;const k=this._cimMarkerLayer.rotateClockwise?this._angle:-this._angle,g=this._size,x=g*d,P=this.xOffset,b=this.yOffset;this.xOffset*=this._scaleFactor,this.yOffset*=this._scaleFactor;const L=this._cimMarkerLayer.scaleSymbolsProportionally&&this._cimMarkerLayer.frameHeight?this._size/i.pt2px(this._cimMarkerLayer.frameHeight):1,A=this._outlineWidth*L,z=i.pt2px(this._cimMarkerLayer.referenceSize);let O=0,V=0;const S=this._cimMarkerLayer.anchorPoint;S&&(this._cimMarkerLayer.isAbsoluteAnchorPoint?this._size&&(O=i.pt2px(S.x)/(this._size*d),V=i.pt2px(S.y)/this._size):(O=S.x,V=S.y)),this._anchorX=O,this._anchorY=V,this._sizeOutlineWidth=l.i8888to32(Math.round(Math.min(Math.sqrt(128*x),255)),Math.round(Math.min(Math.sqrt(128*g),255)),Math.round(Math.min(Math.sqrt(128*A),255)),Math.round(Math.min(Math.sqrt(128*z),255))),this.angle=k;const C=Math.round(64*M);this._bitestAndDistRatio=l.i1616to32(this._bitSet,C),this._computeSize(x,g,M,A,this._scaleFactor,u,F.hasSizeVV(),!0),this._applyTransformation(f,_),this.xOffset=P,this.yOffset=b}}return M}));
