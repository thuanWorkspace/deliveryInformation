/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../../../core/BidiEngine","../../../../../core/maybe","../../../../../core/string","../../../../../geometry/support/TileClipper","../enums","../GeometryUtils","../Placement","../TextShaping","./BaseBucket","../style/StyleDefinition","../style/StyleLayer"],(function(e,t,n,i,o,s,a,r,l,h,c){"use strict";const x=10;function y(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class d extends l{constructor(e,t,n,i,s,a,r,l){super(e,t,l.getSpriteItems()),this.type=o.BucketType.SYMBOL,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,this._iconVertexBuffer=n,this._iconIndexBuffer=i,this._textVertexBuffer=s,this._textIndexBuffer=a,this._placementEngine=r,this._workerTileHandler=l}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,t,i){const o=this.layer,s=this.zoom;e&&e.setExtent(this.layerExtent);const a=o.getLayoutProperty("icon-image"),r=o.getLayoutProperty("text-field");let l=o.getLayoutProperty("text-transform"),c=o.getLayoutProperty("text-font");const x=[];let y,g,f,m;a&&!a.isDataDriven&&(y=a.getValue(s)),r&&!r.isDataDriven&&(g=r.getValue(s)),l&&l.isDataDriven||(f=o.getLayoutValue("text-transform",s),l=null),c&&c.isDataDriven||(m=o.getLayoutValue("text-font",s),c=null);for(const u of this._features){const p=u.getGeometry(e);if(!p||0===p.length)continue;let _,P;a&&(_=a.isDataDriven?a.getValue(s,u):this._replaceKeys(y,u.values),_&&t(_));let b=!1;if(r&&(P=r.isDataDriven?r.getValue(s,u):this._replaceKeys(g,u.values),P)){switch(P=P.replaceAll("\\n","\n"),l&&(f=l.getValue(s,u)),f){case h.TextTransform.LOWERCASE:P=P.toLowerCase();break;case h.TextTransform.UPPERCASE:P=P.toUpperCase()}if(d._bidiEngine.hasBidiChar(P)){let e;e="rtl"===d._bidiEngine.checkContextual(P)?"IDNNN":"ICNNN",P=d._bidiEngine.bidiTransform(P,e,"VLYSN"),b=!0}if(P.length>0){c&&(m=c.getValue(s,u));for(const e of m){let t=i[e];t||(t=i[e]=new Set);for(const e of P){const n=e.codePointAt(0);null!=n&&t.add(n)}}}}if(!_&&!P)continue;const M=o.getLayoutValue("symbol-sort-key",s,u),A={feature:u,sprite:_,label:P,rtl:b,geometry:p,hash:(P?n.numericHash(P):0)^(_?n.numericHash(_):0),priority:M,textFont:m};x.push(A)}this._symbolFeatures=x}processFeatures(e){e&&e.setExtent(this.layerExtent);const n=this.layer,o=this.zoom,l=n.getLayoutValue("symbol-placement",o),x=l!==h.SymbolPlacement.POINT,g=n.getLayoutValue("symbol-spacing",o)*a.tilePixelRatio,f=n.getLayoutProperty("icon-image"),m=n.getLayoutProperty("text-field"),u=f?new c.IconLayout(n,o,x):null,p=m?new c.TextLayout(n,o,x):null,_=this._workerTileHandler;let P;f&&(P=_.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const b=[];let M=1;p&&p.size&&(M=p.size/r.sdfGlyphSize);const A=p?p.maxAngle*s.cDegToRad:0,I=p?p.size*a.tilePixelRatio:0;for(const s of this._symbolFeatures){let e;u&&P&&s.sprite&&(e=P[s.sprite],e&&e.sdf&&(this._isIconSDF=!0));let n;!!e&&u.update(o,s.feature);let c=0;const y=s.label;if(y){t.assertIsSome(p),p.update(o,s.feature);const e=x&&p.rotationAlignment===h.RotationAlignment.MAP?p.keepUpright:p.writingMode&&p.writingMode.includes(h.TextWritingMode.VERTICAL);let i=.5;switch(p.anchor){case h.SymbolAnchor.TOP_LEFT:case h.SymbolAnchor.LEFT:case h.SymbolAnchor.BOTTOM_LEFT:i=0;break;case h.SymbolAnchor.TOP_RIGHT:case h.SymbolAnchor.RIGHT:case h.SymbolAnchor.BOTTOM_RIGHT:i=1}let l=.5;switch(p.anchor){case h.SymbolAnchor.TOP_LEFT:case h.SymbolAnchor.TOP:case h.SymbolAnchor.TOP_RIGHT:l=0;break;case h.SymbolAnchor.BOTTOM_LEFT:case h.SymbolAnchor.BOTTOM:case h.SymbolAnchor.BOTTOM_RIGHT:l=1}let d=.5;switch(p.justify){case h.TextJustification.AUTO:d=i;break;case h.TextJustification.LEFT:d=0;break;case h.TextJustification.RIGHT:d=1}const g=p.letterSpacing*r.sdfGlyphSize,f=x?0:p.maxWidth*r.sdfGlyphSize,m=p.lineHeight*r.sdfGlyphSize,u=s.textFont.map((e=>_.getGlyphItems(e)));if(n=new r.TextShaping(u,f,m,g,i,l,d).getShaping(y,s.rtl,e),n&&n.length>0){let e=1e30,t=-1e30;for(const i of n)e=Math.min(e,i.x),t=Math.max(t,i.x);c=(t-e+2*r.sdfGlyphSize)*M*a.tilePixelRatio}}for(let t of s.geometry){const o=[];if(l===h.SymbolPlacement.LINE){if(n?.length&&p?.size){const e=p.size*a.tilePixelRatio*(2+Math.min(2,4*Math.abs(p.offset[1])));t=d._smoothVertices(t,e)}d._pushAnchors(o,t,g,c)}else l===h.SymbolPlacement.LINE_CENTER?d._pushCenterAnchor(o,t):s.feature.type===i.GeometryType.Polygon?d._pushCentroid(o,t):o.push(new a.Anchor(t[0].x,t[0].y));for(const i of o){if(i.x<0||i.x>a.tileCoordSize||i.y<0||i.y>a.tileCoordSize)continue;if(x&&c>0&&p?.rotationAlignment===h.RotationAlignment.MAP&&!d._honorsTextMaxAngle(t,i,c,A,I))continue;const o={shaping:n,line:t,iconMosaicItem:e,anchor:i,symbolFeature:s,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};b.push(o),this._processFeature(o,u,p)}}}b.sort(y),this._addPlacedGlyphs(),this._symbolInstances=b}serialize(){let e=11;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=d._symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;const t=new Uint32Array(e),n=new Int32Array(t.buffer),i=new Float32Array(t.buffer);let o=0;t[o++]=this.type,t[o++]=this.layerUIDs.length;for(let s=0;s<this.layerUIDs.length;s++)t[o++]=this.layerUIDs[s];t[o++]=this._isIconSDF?1:0,t[o++]=this.markerPageMap.size;for(const[s,[a,r]]of this.markerPageMap)t[o++]=s,t[o++]=a,t[o++]=r;t[o++]=this.glyphsPageMap.size;for(const[s,[a,r]]of this.glyphsPageMap)t[o++]=s,t[o++]=a,t[o++]=r;t[o++]=this._iconVertexBuffer.index/4,t[o++]=this._textVertexBuffer.index/4,o=d.serializeSymbols(t,n,i,o,this._symbolInstances),t[o++]=this._iconVertexBuffer.array.length;for(let s=0;s<this._iconVertexBuffer.array.length;s++)n[o++]=this._iconVertexBuffer.array[s];t[o++]=this._iconIndexBuffer.array.length;for(let s=0;s<this._iconIndexBuffer.array.length;s++)t[o++]=this._iconIndexBuffer.array[s];t[o++]=this._textVertexBuffer.array.length;for(let s=0;s<this._textVertexBuffer.array.length;s++)n[o++]=this._textVertexBuffer.array[s];t[o++]=this._textIndexBuffer.array.length;for(let s=0;s<this._textIndexBuffer.array.length;s++)t[o++]=this._textIndexBuffer.array[s];return t.buffer}static _symbolsSerializationLength(e){let t=0;t+=1;for(const n of e||[]){t+=4,t+=1;for(const e of n.textColliders)t+=x;for(const e of n.iconColliders)t+=x;t+=1,t+=2*n.textVertexRanges.length,t+=1,t+=2*n.iconVertexRanges.length}return t}static serializeSymbols(e,t,n,i,o){o=o||[],t[i++]=o.length;for(const s of o){t[i++]=s.anchor.x,t[i++]=s.anchor.y,t[i++]=s.symbolFeature.hash,t[i++]=s.symbolFeature.priority,t[i++]=s.textColliders.length+s.iconColliders.length;for(const e of s.textColliders)t[i++]=e.xTile,t[i++]=e.yTile,t[i++]=e.dxPixels,t[i++]=e.dyPixels,t[i++]=e.hard?1:0,t[i++]=e.partIndex,n[i++]=e.minLod,n[i++]=e.maxLod,t[i++]=e.width,t[i++]=e.height;for(const e of s.iconColliders)t[i++]=e.xTile,t[i++]=e.yTile,t[i++]=e.dxPixels,t[i++]=e.dyPixels,t[i++]=e.hard?1:0,t[i++]=e.partIndex,n[i++]=e.minLod,n[i++]=e.maxLod,t[i++]=e.width,t[i++]=e.height;t[i++]=s.textVertexRanges.length;for(const[e,n]of s.textVertexRanges)t[i++]=e,t[i++]=n;t[i++]=s.iconVertexRanges.length;for(const[e,n]of s.iconVertexRanges)t[i++]=e,t[i++]=n}return i}_replaceKeys(e,t){return e.replaceAll(/{([^{}]+)}/g,((e,n)=>n in t?t[n]:""))}_processFeature(e,t,n){const{line:i,iconMosaicItem:o,shaping:a,anchor:r}=e,l=this.zoom,c=this.layer,x=!!o;let y=!0;x&&(y=t?.optional||!o);const d=a&&a.length>0,g=!d||n?.optional;let f,m;if(x&&(f=this._placementEngine.getIconPlacement(r,o,t)),(f||y)&&(d&&(m=this._placementEngine.getTextPlacement(r,a,i,n)),m||g)){if(f&&m||(g||y?g||m?y||f||(m=null):f=null:(f=null,m=null)),m){const t=c.hasDataDrivenText?c.textMaterial.encodeAttributes(e.symbolFeature.feature,l,c):null;if(this._storePlacedGlyphs(e,m.shapes,l,n.rotationAlignment,t),m.textColliders){e.textColliders=m.textColliders;for(const e of m.textColliders){e.minLod=Math.max(l+s.log2(e.minLod),0),e.maxLod=Math.min(l+s.log2(e.maxLod),25);const t=e.angle;if(t){const n=Math.cos(t),i=Math.sin(t),o=e.dxPixels*n-e.dyPixels*i,s=e.dxPixels*i+e.dyPixels*n,a=(e.dxPixels+e.width)*n-e.dyPixels*i,r=(e.dxPixels+e.width)*i+e.dyPixels*n,l=e.dxPixels*n-(e.dyPixels+e.height)*i,h=e.dxPixels*i+(e.dyPixels+e.height)*n,c=(e.dxPixels+e.width)*n-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*n,y=Math.min(o,a,l,c),d=Math.max(o,a,l,c),g=Math.min(s,r,h,x),f=Math.max(s,r,h,x);e.dxPixels=y,e.dyPixels=g,e.width=d-y,e.height=f-g}}}}if(f){const n=c.hasDataDrivenIcon?c.iconMaterial.encodeAttributes(e.symbolFeature.feature,l,c):null;if(this._addPlacedIcons(e,f.shapes,l,o.page,t.rotationAlignment===h.RotationAlignment.VIEWPORT,n),f.iconColliders){e.iconColliders=f.iconColliders;for(const e of f.iconColliders){e.minLod=Math.max(l+s.log2(e.minLod),0),e.maxLod=Math.min(l+s.log2(e.maxLod),25);const t=e.angle;if(t){const n=Math.cos(t),i=Math.sin(t),o=e.dxPixels*n-e.dyPixels*i,s=e.dxPixels*i+e.dyPixels*n,a=(e.dxPixels+e.width)*n-e.dyPixels*i,r=(e.dxPixels+e.width)*i+e.dyPixels*n,l=e.dxPixels*n-(e.dyPixels+e.height)*i,h=e.dxPixels*i+(e.dyPixels+e.height)*n,c=(e.dxPixels+e.width)*n-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*n,y=Math.min(o,a,l,c),d=Math.max(o,a,l,c),g=Math.min(s,r,h,x),f=Math.max(s,r,h,x);e.dxPixels=y,e.dyPixels=g,e.width=d-y,e.height=f-g}}}}}}_addPlacedIcons(e,t,n,i,o,a){const r=Math.max(n-1,0),l=this._iconVertexBuffer,h=this._iconIndexBuffer,c=this._markerMap;for(const x of t){const t=o?0:Math.max(n+s.log2(x.minzoom),r),y=o?25:Math.min(n+s.log2(x.maxzoom),25);if(y<=t)continue;const d=x.tl,g=x.tr,f=x.bl,m=x.br,u=x.mosaicRect,p=x.labelAngle,_=x.minAngle,P=x.maxAngle,b=x.anchor,M=l.index,A=u.x,I=u.y,T=A+u.width,S=I+u.height,L=l.index;l.add(b.x,b.y,d.x,d.y,A,I,p,_,P,t,y,a),l.add(b.x,b.y,g.x,g.y,T,I,p,_,P,t,y,a),l.add(b.x,b.y,f.x,f.y,A,S,p,_,P,t,y,a),l.add(b.x,b.y,m.x,m.y,T,S,p,_,P,t,y,a),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===L?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([L,4]),h.add(M,M+1,M+2),h.add(M+1,M+2,M+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,n=this._glyphMap;for(const[i,o]of this._glyphBufferDataStorage)for(const s of o){const o=e.index,a=s.symbolInstance,r=s.ddAttributes,l=e.index;e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tl[0],s.tl[1],s.xmin,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tr[0],s.tr[1],s.xmax,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.bl[0],s.bl[1],s.xmin,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.br[0],s.br[1],s.xmax,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===l?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([l,4]),t.add(o,o+1,o+2),t.add(o+1,o+2,o+3),n.has(i)?n.get(i)[1]+=6:n.set(i,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,n,i,o){const a=Math.max(n-1,0),r=i===h.RotationAlignment.VIEWPORT;let l,c,x,y,d,g,f,m,u,p,_;for(const h of t){if(l=r?0:Math.max(n+s.log2(h.minzoom),a),c=r?25:Math.min(n+s.log2(h.maxzoom),25),c<=l)continue;x=h.tl,y=h.tr,d=h.bl,g=h.br,f=h.labelAngle,m=h.minAngle,u=h.maxAngle,p=h.anchor,_=h.mosaicRect,this._glyphBufferDataStorage.has(h.page)||this._glyphBufferDataStorage.set(h.page,[]);this._glyphBufferDataStorage.get(h.page).push({glyphAnchor:[p.x,p.y],tl:[x.x,x.y],tr:[y.x,y.y],bl:[d.x,d.y],br:[g.x,g.y],xmin:_.x,ymin:_.y,xmax:_.x+_.width,ymax:_.y+_.height,labelAngle:f,minAngle:m,maxAngle:u,minLod:l,maxLod:c,placementLod:a,symbolInstance:e,ddAttributes:o})}}static _pushAnchors(e,t,n,o){n+=o;let r=0;const l=t.length-1;for(let s=0;s<l;s++)r+=i.Point.distance(t[s],t[s+1]);let h=o||n;if(h*=.5,r<=h)return;const c=h/r;let x=0,y=-(n=r/Math.max(Math.round(r/n),1))/2;const d=t.length-1;for(let i=0;i<d;i++){const o=t[i],r=t[i+1],l=r.x-o.x,h=r.y-o.y,d=Math.sqrt(l*l+h*h);let g;for(;y+n<x+d;){y+=n;const t=(y-x)/d,f=s.interpolate(o.x,r.x,t),m=s.interpolate(o.y,r.y,t);void 0===g&&(g=Math.atan2(h,l)),e.push(new a.Anchor(f,m,g,i,c))}x+=d}}static _pushCenterAnchor(e,t){let n=0;const o=t.length-1;for(let s=0;s<o;s++)n+=i.Point.distance(t[s],t[s+1]);const r=n/2;let l=0;const h=t.length-1;for(let i=0;i<h;i++){const n=t[i],o=t[i+1],h=o.x-n.x,c=o.y-n.y,x=Math.sqrt(h*h+c*c);if(r<l+x){const t=(r-l)/x,y=s.interpolate(n.x,o.x,t),d=s.interpolate(n.y,o.y,t),g=Math.atan2(c,h);return void e.push(new a.Anchor(y,d,g,i,0))}l+=x}}static _deviation(e,t,n){const i=(t.x-e.x)*(n.x-t.x)+(t.y-e.y)*(n.y-t.y),o=(t.x-e.x)*(n.y-t.y)-(t.y-e.y)*(n.x-t.x);return Math.atan2(o,i)}static _honorsTextMaxAngle(e,t,n,o,s){let a=0;const r=n/2;let l=new i.Point(t.x,t.y),h=t.segment+1;for(;a>-r;){if(--h,h<0)return!1;a-=i.Point.distance(e[h],l),l=e[h]}a+=i.Point.distance(e[h],e[h+1]);const c=[];let x=0;const y=e.length;for(;a<r;){const t=e[h];let n,r=h;do{if(++r,r===y)return!1;n=e[r]}while(n.isEqual(t));let l,d=r;do{if(++d,d===y)return!1;l=e[d]}while(l.isEqual(n));const g=this._deviation(t,n,l);for(c.push({deviation:g,distToAnchor:a}),x+=g;a-c[0].distToAnchor>s;)x-=c.shift().deviation;if(Math.abs(x)>o)return!1;a+=i.Point.distance(n,l),h=r}return!0}static _smoothVertices(e,t){if(t<=0)return e;let n=e.length;if(n<3)return e;const o=[];let s=0,a=0;o.push(0);for(let f=1;f<n;f++){const t=i.Point.distance(e[f],e[f-1]);t>0&&(s+=t,o.push(s),a++,a!==f&&(e[a]=e[f]))}if(n=a+1,n<3)return e;t=Math.min(t,.2*s);const r=e[0].x,l=e[0].y,h=e[n-1].x,c=e[n-1].y,x=i.Point.sub(e[0],e[1]);x.normalize(),e[0].x+=t*x.x,e[0].y+=t*x.y,x.assignSub(e[n-1],e[n-2]),x.normalize(),e[n-1].x+=t*x.x,e[n-1].y+=t*x.y,o[0]-=t,o[n-1]+=t;const y=[];y.push(new i.Point(r,l));const d=1e-6,g=.5*t;for(let f=1;f<n-1;f++){let s=0,a=0,r=0;for(let n=f-1;n>=0;n--){const i=g+o[n+1]-o[f];if(i<0)break;const l=o[n+1]-o[n],h=o[f]-o[n]<g?1:i/l;if(h<d)break;const c=h*h,x=h*i-.5*c*l,y=h*l/t,m=e[n+1],u=e[n].x-m.x,p=e[n].y-m.y;s+=y/x*(m.x*h*i+.5*c*(i*u-l*m.x)-c*h*l*u/3),a+=y/x*(m.y*h*i+.5*c*(i*p-l*m.y)-c*h*l*p/3),r+=y}for(let i=f+1;i<n;i++){const n=g-o[i-1]+o[f];if(n<0)break;const l=o[i]-o[i-1],h=o[i]-o[f]<g?1:n/l;if(h<d)break;const c=h*h,x=h*n-.5*c*l,y=h*l/t,m=e[i-1],u=e[i].x-m.x,p=e[i].y-m.y;s+=y/x*(m.x*h*n+.5*c*(n*u-l*m.x)-c*h*l*u/3),a+=y/x*(m.y*h*n+.5*c*(n*p-l*m.y)-c*h*l*p/3),r+=y}y.push(new i.Point(s/r,a/r))}return y.push(new i.Point(h,c)),e[0].x=r,e[0].y=l,e[n-1].x=h,e[n-1].y=c,y}static _pushCentroid(e,t){const n=0,i=0,o=4096,s=4096,r=t.length-1;let l=0,h=0,c=0,x=t[0].x,y=t[0].y;x>o&&(x=o),x<n&&(x=n),y>s&&(y=s),y<i&&(y=i);for(let a=1;a<r;a++){let e=t[a].x,r=t[a].y,d=t[a+1].x,g=t[a+1].y;e>o&&(e=o),e<n&&(e=n),r>s&&(r=s),r<i&&(r=i),d>o&&(d=o),d<n&&(d=n),g>s&&(g=s),g<i&&(g=i);const f=(e-x)*(g-y)-(d-x)*(r-y);l+=f*(x+e+d),h+=f*(y+r+g),c+=f}l/=3*c,h/=3*c,isNaN(l)||isNaN(h)||e.push(new a.Anchor(l,h))}}return d._bidiEngine=new e,d}));
