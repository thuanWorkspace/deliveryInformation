/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../core/Error","../../../core/has","../../../core/maybe","../../../core/scheduling","../../../core/signal","../../../chunks/mat3f32","../../../symbols/cim/CIMResourceManager","./Container","./ManagedCanvas","./webgl/BufferPool","./webgl/enums","./webgl/Painter","./webgl/Profiler","../support/Timeline","../../support/screenshotUtils","../../webgl/enums","../../webgl/FramebufferObject","../../webgl/RenderbufferDescriptor","../../webgl/RenderingContext","../../webgl/TextureDescriptor","../../webgl/capabilities/isWebGL2Context","../../../core/imageUtils"],(function(e,t,r,s,i,a,n,o,d,h,l,c,u,m,p,g,_,f,b,w,R,P,y){"use strict";const x=2e3;class T extends d.Container{constructor(e,s){super(),this._trash=new Set,this._renderRemainingTime=0,this._lastFrameRenderTime=0,this._renderRequested=a.signal(!1),this.stage=this,this._stationary=!0,this._canvas=new h.ManagedCanvas(e),this.context=new w.RenderingContext(this._canvas.gl,s.contextOptions??{}),this.resourceManager=new o,this.painter=new u(this.context,this,this.resourceManager),r("esri-2d-profiler")&&(this._debugOutput=document.createElement("div"),this._debugOutput.setAttribute("style","margin: 24px 64px; position: absolute; color: red;"),e.appendChild(this._debugOutput));const n=()=>this._highlightGradient;this._renderParameters={drawPhase:0,state:this.state,pixelRatio:window.devicePixelRatio,stationary:!1,globalOpacity:1,blendMode:null,deltaTime:-1,time:0,inFadeTransition:!1,effects:null,context:this.context,painter:this.painter,timeline:s.timeline||new p.Timeline,renderingOptions:s.renderingOptions,requestRender:()=>this.requestRender(),allowDelayedRender:!1,requireFBO:!1,profiler:new m.Profiler(this.context,this._debugOutput),dataUploadCounter:0,get highlightGradient(){return n()},backgroundColor:s.backgroundColor},this._taskHandle=i.addFrameTask({render:e=>this.renderFrame(e)}),this._taskHandle.pause(),this._lostWebGLContextHandle=this._canvas.events.on("webgl-context-lost",(e=>this.emit("webgl-error",{error:new t("webgl-context-lost",e.statusMessage)}))),this._bufferPool=new l.BufferPool}destroy(){this.removeAllChildren(),this._emptyTrash(),this._taskHandle=s.removeMaybe(this._taskHandle),this._lostWebGLContextHandle=s.removeMaybe(this._lostWebGLContextHandle),this._canvas.destroy(),this._debugOutput?.parentNode?.removeChild(this._debugOutput),this._bufferPool.destroy(),this.resourceManager.destroy(),this.painter.dispose(),this.context.dispose(),this._canvas=null}get backgroundColor(){return this._renderParameters.backgroundColor}set backgroundColor(e){this._renderParameters.backgroundColor=e,this.requestRender()}get bufferPool(){return this._bufferPool}get renderingOptions(){return this._renderingOptions}set renderingOptions(e){this._renderingOptions=e,this.requestRender()}get renderRequested(){return this._renderRequested.value}get state(){return this._state}set state(e){this._state=e,this.requestRender()}get stationary(){return this._stationary}set stationary(e){this._stationary!==e&&(this._stationary=e,this.requestRender())}trashDisplayObject(e){this._trash.add(e),this.requestRender()}untrashDisplayObject(e){return this._trash.delete(e)}requestRender(){this._renderRemainingTime=x,this.renderRequested||(this._renderRequested.value=!0,this._taskHandle.resume())}renderFrame(e){const t=this._lastFrameRenderTime?e.time-this._lastFrameRenderTime:0;this._renderRemainingTime-=t,this._renderRemainingTime<=0&&this._taskHandle.pause(),this._lastFrameRenderTime=e.time,this._renderRequested.value=!1,this._renderParameters.state=this._state,this._renderParameters.stationary=this.stationary,this._renderParameters.pixelRatio=window.devicePixelRatio,this._renderParameters.globalOpacity=1,this._renderParameters.time=e.time,this._renderParameters.deltaTime=e.deltaTime,this._renderParameters.effects=null,this.processRender(this._renderParameters),this._emptyTrash()}_createTransforms(){return{dvs:n.create()}}renderChildren(e){for(const t of this.children)t.beforeRender(e);this._canvas.render(e,(()=>this._renderChildren(this.children,e)));for(const t of this.children)t.afterRender(e)}_renderChildren(e,t){const s=this.context;this.painter.textureUploadManager.upload(),s.resetInfo(),t.profiler.recordStart("drawLayers"),t.dataUploadCounter=0,this.painter.beforeRenderPhases(t,t.backgroundColor,this.state.padding),t.drawPhase=c.WGLDrawPhase.MAP;for(const r of e)r.processRender(t);if(this.children.some((e=>e.hasHighlight))){t.drawPhase=c.WGLDrawPhase.HIGHLIGHT;for(const r of e)r.processRender(t)}if(this.children.some((e=>e.hasLabels))){t.drawPhase=c.WGLDrawPhase.LABEL;for(const r of e)r.processRender(t)}if(r("esri-tiles-debug")){t.drawPhase=c.WGLDrawPhase.DEBUG;for(const r of e)r.processRender(t)}this.painter.afterRenderPhases(t),t.profiler.recordEnd("drawLayers"),s.logInfo()}doRender(e){const t=this.context,{state:r,pixelRatio:s}=e;this._canvas.resize(e),t.setViewport(0,0,s*r.size[0],s*r.size[1]),t.setDepthWriteEnabled(!0),t.setStencilWriteMask(255),this.renderChildren(e)}async takeScreenshot(e,t,r,s){const i=Math.round(this.state.size[0]*e.resolutionScale),a=Math.round(this.state.size[1]*e.resolutionScale),n=e.resolutionScale,o=this.context,d=this._state.clone();if(null!=s){const e=d.viewpoint;d.viewpoint.rotation=s,d.viewpoint=e}const h={...this._renderParameters,drawPhase:null,globalOpacity:1,stationary:!0,state:d,pixelRatio:n,time:performance.now(),deltaTime:0,blendMode:null,effects:null,inFadeTransition:!1,backgroundColor:r},l=P(o.gl),c=new R.TextureDescriptor(i,a);c.wrapMode=_.TextureWrapMode.CLAMP_TO_EDGE,c.internalFormat=l?_.SizedPixelFormat.RGBA8:_.PixelFormat.RGBA,c.isImmutable=l;const u=new f.FramebufferObject(o,c,new b.RenderbufferDescriptor(_.RenderbufferFormat.DEPTH_STENCIL,i,a)),m=o.getBoundFramebufferObject(),p=o.getViewport();o.bindFramebuffer(u),o.setViewport(0,0,i,a),this._renderChildren(t??this.children,h);const w=this._readbackScreenshot(u,{...e.cropArea,y:a-(e.cropArea.y+e.cropArea.height)});o.bindFramebuffer(m),o.setViewport(p.x,p.y,p.width,p.height),this.requestRender();const y=await w;let x;return 1===e.outputScale?x=y:(x=new ImageData(Math.round(y.width*e.outputScale),Math.round(y.height*e.outputScale)),g.resampleHermite(y,x,!0)),u.dispose(),x}async _readbackScreenshot(e,t){const r=y.createEmptyImageData(t.width,t.height,document.createElement("canvas"));return await e.readPixelsAsync(t.x,t.y,t.width,t.height,_.PixelFormat.RGBA,_.PixelType.UNSIGNED_BYTE,new Uint8Array(r.data.buffer)),r}_emptyTrash(){for(;this._trash.size>0;){const e=Array.from(this._trash);this._trash.clear();for(const t of e)t.processDetach()}}}e.Stage=T,e.extraRenderTime=x,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
