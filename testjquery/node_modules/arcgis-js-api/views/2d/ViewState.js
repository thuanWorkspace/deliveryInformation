/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../geometry","../../Viewpoint","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../chunks/common","../../chunks/mat2d","../../chunks/mat2df32","../../chunks/mat2df64","../../chunks/mat3","../../chunks/mat3f32","../../chunks/vec2","../../chunks/vec2f32","../../chunks/vec2f64","../../core/libs/gl-matrix-2/types/vec2","../../geometry/support/normalizeUtils","./viewpointUtils","../../geometry/Extent","../../geometry/Point"],(function(t,e,i,s,r,o,n,a,c,p,h,l,d,u,m,f,v,y,w,_,R,x,g){"use strict";var M;const z=[0,0];let S=M=class extends s.JSONSupport{constructor(t){super(t),this._viewpoint2D={center:y.create(),rotation:0,scale:0,spatialReference:void 0},this.center=[0,0],this.extent=new x,this.id=0,this.inverseTransform=d.create(),this.resolution=0,this.rotation=0,this.scale=0,this.transform=d.create(),this.transformNoRotation=d.create(),this.displayMat3=m.create(),this.displayViewMat3=m.create(),this.viewMat3=m.create(),this.viewMat2d=l.create(),this.worldScreenWidth=0,this.size=[0,0]}set pixelRatio(t){this._set("pixelRatio",t),this._update()}set size(t){this._set("size",t),this._update()}set viewpoint(t){if(t){const e=this._viewpoint2D,i=t.targetGeometry;e.center[0]=i.x,e.center[1]=i.y,e.rotation=t.rotation,e.scale=t.scale,e.spatialReference=i.spatialReference}this._update()}copy(t){const e=this.size,i=this.viewpoint;return i&&e?(this.viewpoint=R.copy(i,t.viewpoint),this._set("size",f.copy(e,t.size))):(this.viewpoint=t.viewpoint.clone(),this._set("size",[t.size[0],t.size[1]])),this._set("pixelRatio",t.pixelRatio),this}clone(){return new M({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})}toMap(t,e,i){return w.isVec2(e)?f.transformMat2d(t,e,this.inverseTransform):(z[0]=e,z[1]=i,f.transformMat2d(t,z,this.inverseTransform))}toScreen(t,e,i){return w.isVec2(e)?f.transformMat2d(t,e,this.transform):(z[0]=e,z[1]=i,f.transformMat2d(t,z,this.transform))}toScreenNoRotation(t,e,i){return w.isVec2(e)?f.transformMat2d(t,e,this.transformNoRotation):(z[0]=e,z[1]=i,f.transformMat2d(t,z,this.transformNoRotation))}toScreenClosest(t,e,i){w.isVec2(e)?(z[0]=e[0],z[1]=e[1]):(z[0]=e,z[1]=i);const[s]=z,{center:r,extent:o,spatialReference:n,transform:a}=this;return(s<o.xmin||s>o.xmax)&&(z[0]=_.getClosestDenormalizedXToReference(s,r[0],n)),f.transformMat2d(t,z,a)}getScreenTransform(t,e){const{center:i}=this._viewpoint2D,s=this._get("pixelRatio")||1,r=this._get("size");return R.getMatrix(t,i,r,e,0,s),t}_update(){const{center:t,spatialReference:e,scale:s,rotation:r}=this._viewpoint2D,o=this._get("pixelRatio")||1,n=this._get("size"),a=new i({targetGeometry:new g(t[0],t[1],e),scale:s,rotation:r});if(this._set("viewpoint",a),!n||!e||!s)return;this.resolution=R.getResolution(a),this.rotation=r,this.scale=s,this.spatialReference=e,f.copy(this.center,t);const c=0!==n[0]?2/n[0]:0,l=0!==n[1]?-2/n[1]:0;u.set(this.displayMat3,c,0,0,0,l,0,-1,1,1);const d=u.identity(this.viewMat3),m=v.fromValues(n[0]/2,n[1]/2),y=v.fromValues(-n[0]/2,-n[1]/2),w=p.toRadian(r);u.translate(d,d,m),u.rotate(d,d,w),u.translate(d,d,y),u.multiply(this.displayViewMat3,this.displayMat3,d);const _=h.fromTranslation(this.viewMat2d,m);return h.rotate(_,_,w),h.translate(_,_,y),R.getExtent(this.extent,a,n),R.getTransform(this.transform,a,n,o),h.invert(this.inverseTransform,this.transform),R.getTransformNoRotation(this.transformNoRotation,a,n,o),this.worldScreenWidth=R.getWorldScreenWidth(this.spatialReference,this.resolution),this._set("id",this.id+1),this}};t.__decorate([r.property({readOnly:!0})],S.prototype,"id",void 0),t.__decorate([r.property({value:1,json:{write:!0}})],S.prototype,"pixelRatio",null),t.__decorate([r.property({json:{write:!0}})],S.prototype,"size",null),t.__decorate([r.property()],S.prototype,"spatialReference",void 0),t.__decorate([r.property({type:i,json:{write:!0}})],S.prototype,"viewpoint",null),S=M=t.__decorate([c.subclass("esri.views.2d.ViewState")],S);return S}));
