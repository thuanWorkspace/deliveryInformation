/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/Error","../../core/has","../../core/Logger","../../core/throttle","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/accessorSupport/decorators/subclass","./engine/webgl/collisions/CollisionEngine"],(function(e,t,s,a,i,r,o,l,p,n,d,u){"use strict";const c=32;e.LabelManager=class extends s{constructor(e){super(e),this.collisionEngine=new u.CollisionEngine,this.lastUpdateId=-1,this.updateRequested=!1,this.view=null,this._applyVisibilityPass=o.throttle((e=>{const t=this.view;if(t)try{const s=t.featuresTilingScheme.getClosestInfoForScale(e.state.scale).level;this.collisionEngine.run(t.allLayerViews.items,e,s)}catch(s){}}),c,this),this.addHandles(this._applyVisibilityPass)}get updating(){return i("esri-2d-log-updating")&&console.log(`Updating LabelManager ${this.updateRequested}:\n-> updateRequested: ${this.updateRequested}`),this.updateRequested}update(e){this._applyVisibilityPass(e)}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view?.requestUpdate())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}},t.__decorate([l.property()],e.LabelManager.prototype,"updateRequested",void 0),t.__decorate([l.property()],e.LabelManager.prototype,"updating",null),t.__decorate([l.property()],e.LabelManager.prototype,"view",void 0),e.LabelManager=t.__decorate([d.subclass("esri.views.2d.LabelManager")],e.LabelManager),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
