/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../chunks/tslib.es6","./Accessor","./Logger","./accessorSupport/tracking","./accessorSupport/decorators/property","./accessorSupport/decorators/subclass","./accessorSupport/tracking/SimpleTrackingTarget"],(function(t,e,a,n,s,r,c,d){"use strict";const i=t=>{let a=class extends t{constructor(){super(...arguments),this._numUpdating=0,this._asyncUpdateState=new Map}get updating(){return this._numUpdating>0}autoUpdateAsync(t,e){return o((e=>this._updateAsync(t,e)),e)}async _updateAsync(t,e){if(!this._startAsyncUpdate(t)){try{const a=await e();this._set(t,a)}catch(a){n.getLogger(this).warn(`Async update of "${String(t)}" failed. Async update functions should not throw exceptions.`)}this._endAsyncUpdate(t)&&this._updateAsync(t,e)}}_startAsyncUpdate(t){const e=this._asyncUpdateState.get(t)??p.None;return e&p.Updating?(this._asyncUpdateState.set(t,e|p.Invalidated),!0):(++this._numUpdating,this._asyncUpdateState.set(t,e|p.Updating),!1)}_endAsyncUpdate(t){--this._numUpdating;const e=(this._asyncUpdateState.get(t)??p.None)&~p.Updating;return e&p.Invalidated?(this._asyncUpdateState.set(t,e&~p.Invalidated),!0):(this._asyncUpdateState.set(t,e),!1)}};return e.__decorate([r.property({readOnly:!0})],a.prototype,"updating",null),e.__decorate([r.property()],a.prototype,"_numUpdating",void 0),a=e.__decorate([c.subclass("esri.core.AsyncUpdate")],a),a};var p;function o(t,e){const a=()=>{c&&!i&&t(n)},n=()=>{if(!c||i)return e();c.clear(),i=!0;const t=s.runTracked(c,e);return i=!1,t},r=()=>{c&&(c.destroy(),c=null)};let c=new d.SimpleTrackingTarget(a),i=!1;return t(n),{remove:r}}!function(t){t[t.None=0]="None",t[t.Updating=1]="Updating",t[t.Invalidated=2]="Invalidated"}(p||(p={})),t.AsyncUpdate=class extends(i(a)){},t.AsyncUpdate=e.__decorate([c.subclass("esri.core.AsyncUpdate")],t.AsyncUpdate),t.AsyncUpdateMixin=i,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
