/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../core/lang","../core/string","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/enumeration","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../layers/support/fieldUtils","./Symbol"],(function(e,r,t,o,a,s,c,i,n,p,d){"use strict";var l;let u=l=class extends d{constructor(e){super(e),this.data=null,this.type="cim"}readData(e,r){return r}writeData(e,r){Object.assign(r,e)}async collectRequiredFields(e,r){if("CIMSymbolReference"===this.data?.type){const t=this.data.primitiveOverrides;if(t){const o=t.map((t=>{const o=t.valueExpressionInfo;return p.collectArcadeFieldNames(e,r,o.expression)}));await Promise.all(o)}}}clone(){return new l({data:r.clone(this.data)})}hash(){return t.numericHash(JSON.stringify(this.data)).toString()}};e.__decorate([o.property({json:{write:!1}})],u.prototype,"color",void 0),e.__decorate([o.property({json:{write:!0}})],u.prototype,"data",void 0),e.__decorate([c.reader("data",["symbol"])],u.prototype,"readData",null),e.__decorate([n.writer("data",{})],u.prototype,"writeData",null),e.__decorate([s.enumeration({CIMSymbolReference:"cim"},{readOnly:!0})],u.prototype,"type",void 0),u=l=e.__decorate([i.subclass("esri.symbols.CIMSymbol")],u);return u}));
