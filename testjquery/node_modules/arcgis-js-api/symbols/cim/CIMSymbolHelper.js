/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../Color","../../core/BidiText","../../core/has","../../core/lang","../../core/Logger","../../core/RandomLCG","../../core/screenUtils","../../geometry/support/aaBoundingRect","../../geometry/support/boundsUtils","../../support/arcadeOnDemand","../Font","./CIMPlacements","./CIMSymbolDrawHelper","./enums","./utils","../../views/2d/arcade/callExpressionWithFeature","../../views/2d/engine/vectorTiles/GeometryUtils","../../views/2d/engine/webgl/definitions","../../views/2d/engine/webgl/mesh/templates/shapingUtils"],(function(e,t,r,a,i,o,s,n,l,c,f,m,y,u,p,h,M,d,S,g){"use strict";const b=Math.PI,C=b/2,I=Math.PI/180,k=96/72,x=4,P=o.getLogger("esri.symbols.cim.CIMSymbolHelper");function L(e){if(!e?.type)return null;let t;switch(e.type){case"cim":return e.data;case"web-style":return e;case"simple-marker":{const r=E.fromSimpleMarker(e);if(!r)return null;t=r;break}case"picture-marker":t=E.fromPictureMarker(e);break;case"simple-line":t=E.fromSimpleLineSymbol(e);break;case"simple-fill":t=E.fromSimpleFillSymbol(e);break;case"picture-fill":t=E.fromPictureFillSymbol(e);break;case"text":t=E.fromTextSymbol(e)}return{type:"CIMSymbolReference",symbol:t}}function w(e,t,r){switch(t.type){case"CIMSymbolReference":return w(e,t.symbol,r);case"CIMPointSymbol":null==r&&(r={x:0,y:0}),e.drawSymbol(t,r);break;case"CIMLineSymbol":null==r&&(r={paths:[[[0,0],[10,0]]]}),e.drawSymbol(t,r);break;case"CIMPolygonSymbol":null==r&&(r={rings:[[[0,0],[0,10],[10,10],[10,0],[0,0]]]}),e.drawSymbol(t,r);break;case"CIMTextSymbol":{const r={x:0,y:0};e.drawSymbol(t,r);break}case"CIMVectorMarker":{const r=new y.Placement;e.drawMarker(t,r);break}}return e.envelope()}function v(e){if(!e)return 0;switch(e.type){case"CIMMarkerPlacementAlongLineSameSize":case"CIMMarkerPlacementAlongLineRandomSize":case"CIMMarkerPlacementAtExtremities":case"CIMMarkerPlacementAtMeasuredUnits":case"CIMMarkerPlacementAtRatioPositions":case"CIMMarkerPlacementOnLine":case"CIMMarkerPlacementOnVertices":return Math.abs(e.offset);default:return 0}}function F(e){if(!e)return 0;switch(e.type){case"CIMGeometricEffectArrow":return Math.abs(.5*e.width);case"CIMGeometricEffectBuffer":return Math.abs(e.size);case"CIMGeometricEffectExtension":case"CIMGeometricEffectRadial":return Math.abs(e.length);case"CIMGeometricEffectJog":return Math.abs(.5*e.length);case"CIMGeometricEffectMove":return Math.max(Math.abs(h.getValue(e.offsetX)),Math.abs(h.getValue(e.offsetY)));case"CIMGeometricEffectOffset":case"CIMGeometricEffectOffsetTangent":return Math.abs(e.offset);case"CIMGeometricEffectRegularPolygon":return Math.abs(e.radius);case"CIMGeometricEffectRotate":case"CIMGeometricEffectScale":default:return 0;case"CIMGeometricEffectTaperedPolygon":return.5*Math.max(Math.abs(e.fromWidth),Math.abs(e.toWidth));case"CIMGeometricEffectWave":return Math.abs(e.amplitude);case"CIMGeometricEffectDonut":return Math.abs(e.width)}}function T(e){if(!e)return 0;let t=0;for(const r of e)t+=F(r);return t}class D{getSymbolInflateSize(e,t,r,a,i){return e||(e=[0,0,0,0]),t?this._getInflateSize(e,t,r,a,i):e}static safeSize(e){const t=Math.max(Math.abs(e[0]),Math.abs(e[2])),r=Math.max(Math.abs(e[1]),Math.abs(e[3]));return Math.sqrt(t*t+r*r)}_vectorMarkerBounds(e,t,r,a){let i=!0;const o=l.create();if(t?.markerGraphics)for(const s of t.markerGraphics){const t=[0,0,0,0];s.geometry&&(c.getBoundsXY(o,s.geometry),t[0]=0,t[1]=0,t[2]=0,t[3]=0,this.getSymbolInflateSize(t,s.symbol,r,0,a),o[0]+=t[0],o[1]+=t[1],o[2]+=t[2],o[3]+=t[3],i?(e[0]=o[0],e[1]=o[1],e[2]=o[2],e[3]=o[3],i=!1):(e[0]=Math.min(e[0],o[0]),e[1]=Math.min(e[1],o[1]),e[2]=Math.max(e[2],o[2]),e[3]=Math.max(e[3],o[3])))}return e}_getInflateSize(e,t,r,a,i){if(Y(t)){const o=this._getLayersInflateSize(e,t.symbolLayers,r,a,i),s=T(t.effects);return s>0&&(o[0]-=s,o[1]-=s,o[2]+=s,o[3]+=s),o}return this._getTextInflatedSize(e,t,i)}_getLayersInflateSize(e,t,r,a,i){let o=!0;if(!t)return e;for(const s of t){if(!s)continue;let t=[0,0,0,0];switch(s.type){case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{const e=s;let r=e.width;null!=r&&(e.capStyle===p.LineCapStyle.Square||e.joinStyle===p.LineJoinStyle.Miter?r/=1.4142135623730951:r/=2,t[0]=-r,t[1]=-r,t[2]=r,t[3]=r);break}case"CIMCharacterMarker":case"CIMVectorMarker":case"CIMPictureMarker":{const e=s;if("CIMVectorMarker"===s.type){const e=s;if(t=this._vectorMarkerBounds(t,e,r,i),e.frame){const r=(e.frame.xmin+e.frame.xmax)/2,a=(e.frame.ymin+e.frame.ymax)/2;if(t[0]-=r,t[1]-=a,t[2]-=r,t[3]-=a,null!=e.size){const r=e.size/(e.frame.ymax-e.frame.ymin);t[0]*=r,t[1]*=r,t[2]*=r,t[3]*=r}}}else if("CIMPictureMarker"===s.type){const a=s,i=r.getResource(a.url);let o=1;if(null!=i&&i.height&&(o=i.width/i.height),null!=e.size){const r=e.size/2,i=e.size*o*a.scaleX/2;t=[-i,-r,i,r]}}else if(null!=e.size){const r=e.size/2;t=[-r,-r,r,r]}if(e.anchorPoint){let r,a;"Absolute"===e.anchorPointUnits?(r=e.anchorPoint.x,a=e.anchorPoint.y):(r=e.anchorPoint.x*(t[2]-t[0]),a=e.anchorPoint.y*(t[3]-t[1])),t[0]-=r,t[1]-=a,t[2]-=r,t[3]-=a}let o=h.getValue(e.rotation);if(e.rotateClockwise&&(o=-o),a&&(o-=a),o){const e=I*o,r=Math.cos(e),a=Math.sin(e),i=l.create([d.cInfinity,d.cInfinity,-d.cInfinity,-d.cInfinity]);l.expandPointInPlace(i,[t[0]*r-t[1]*a,t[0]*a+t[1]*r]),l.expandPointInPlace(i,[t[0]*r-t[3]*a,t[0]*a+t[3]*r]),l.expandPointInPlace(i,[t[2]*r-t[1]*a,t[2]*a+t[1]*r]),l.expandPointInPlace(i,[t[2]*r-t[3]*a,t[2]*a+t[3]*r]),t=i}let n=h.getValue(e.offsetX),c=h.getValue(e.offsetY);if(a){const e=I*a,t=Math.cos(e),r=Math.sin(e),i=n*r+c*t;n=n*t-c*r,c=i}t[0]+=n,t[1]+=c,t[2]+=n,t[3]+=c;const f=v(e.markerPlacement);f>0&&(t[0]-=f,t[1]-=f,t[2]+=f,t[3]+=f);break}}const n=T(s.effects);n>0&&(t[0]-=n,t[1]-=n,t[2]+=n,t[3]+=n),o?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],o=!1):(e[0]=Math.min(e[0],t[0]),e[1]=Math.min(e[1],t[1]),e[2]=Math.max(e[2],t[2]),e[3]=Math.max(e[3],t[3]))}return e}_getTextInflatedSize(e,t,a){const i=t.height??u.defaultTextHeight;if(e[0]=-i/2,e[1]=-i/2,e[2]=i/2,e[3]=i/2,!a)return e;const o=a.get(t);if(!o)return e;const{text:s,mosaicItem:n}=o;if(!n?.glyphMosaicItems?.length)return e;const{lineGapType:l,lineGap:c}=t,f=l?u.lineGapType2LineHeight(l,c??0,i):0,m=r.bidiText(s)[1],y=n.glyphMosaicItems,p="CIMBackgroundCallout"===t.callout?.type,M=g.shapeGlyphs(y,m,{scale:i/S.glyphSize,angle:h.getValue(t.angle),xOffset:h.getValue(t.offsetX),yOffset:h.getValue(t.offsetY),hAlign:u.horizontalAlignment2HAlign(t.horizontalAlignment),vAlign:u.verticalAlignment2VAlign(t.verticalAlignment),maxLineWidth:512,lineHeight:S.magicLabelLineHeight*Math.max(.25,Math.min(f||1,4)),decoration:t.font.decoration||"none",isCIM:!0,hasBackground:p}).boundsT;return e[0]=M.x-M.halfWidth,e[1]=-M.y-M.halfHeight,e[2]=M.x+M.halfWidth,e[3]=-M.y+M.halfHeight,e}}class E{static getEnvelope(e,t,r){if(!e)return null;const a=new u.EnvDrawHelper(r);if(Array.isArray(e)){let r;for(const i of e)r?r.union(w(a,i,t)):r=w(a,i,t);return r}return w(a,e,t)}static getTextureAnchor(e,t){const r=this.getEnvelope(e,null,t);if(!r)return[0,0,0];const a=(r.x+.5*r.width)*k,i=(r.y+.5*r.height)*k,o=r.width*k+2,s=r.height*k+2;return[-a/o,-i/s,s]}static rasterize(e,t,r,a,i=!0){const o=r||this.getEnvelope(t,null,a);if(!o)return[null,0,0,0,0];const s=(o.x+.5*o.width)*k,n=(o.y+.5*o.height)*k;e.width=o.width*k,e.height=o.height*k,r||(e.width+=2,e.height+=2);const l=e.getContext("2d"),c=u.Transformation.createScale(k,-k);c.translate(.5*e.width-s,.5*e.height+n);const f=new u.CanvasDrawHelper(l,a,c);switch(t.type){case"CIMPointSymbol":{const e={type:"point",x:0,y:0};f.drawSymbol(t,e);break}case"CIMVectorMarker":{const e=new y.Placement;f.drawMarker(t,e);break}}const m=l.getImageData(0,0,e.width,e.height),p=new Uint8Array(m.data);if(i){let e;for(let t=0;t<p.length;t+=4)e=p[t+3]/255,p[t]=p[t]*e,p[t+1]=p[t+1]*e,p[t+2]=p[t+2]*e}return[p,e.width,e.height,-s/e.width,-n/e.height]}static fromTextSymbol(e){const{angle:t,color:a,font:i,haloColor:o,haloSize:s,horizontalAlignment:n,kerning:l,text:c,verticalAlignment:f,xoffset:m,yoffset:y,backgroundColor:u,borderLineColor:M,borderLineSize:d}=e;let S,g,b,C,I,k;i&&(S=i.family,g=i.style,b=i.weight,C=i.size,I=i.decoration);let x=!1;if(c){x=r.bidiText(c)[1]}return(u||d)&&(k={type:"CIMBackgroundCallout",margin:null,backgroundSymbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",color:N(u)},{type:"CIMSolidStroke",color:N(M),width:d}]},accentBarSymbol:null,gap:null,leaderLineSymbol:null,lineStyle:null}),{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,anchorPointUnits:"Relative",dominantSizeAxis3D:"Y",size:10,billboardMode3D:"FaceNearPlane",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:{type:"CIMTextSymbol",angle:t,blockProgression:p.BlockProgression.BTT,depth3D:1,extrapolateBaselines:!0,fontEffects:p.FontEffects.Normal,fontEncoding:p.FontEncoding.Unicode,fontFamilyName:S||"Arial",fontStyleName:R(g,b),fontType:p.FontType.Unspecified,haloSize:s,height:C,hinting:p.GlyphHinting.Default,horizontalAlignment:A(n??"center"),kerning:l,letterWidth:100,ligatures:!0,lineGapType:"Multiple",offsetX:h.getValue(m),offsetY:h.getValue(y),strikethrough:"line-through"===I,underline:"underline"===I,symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:N(a)}]},haloSymbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:N(o)}]},shadowColor:[0,0,0,255],shadowOffsetX:1,shadowOffsetY:1,textCase:"Normal",textDirection:x?p.TextReadingDirection.RTL:p.TextReadingDirection.LTR,verticalAlignment:O(f??"baseline"),verticalGlyphOrientation:p.VerticalGlyphOrientation.Right,wordSpacing:100,billboardMode3D:p.BillBoardMode.FaceNearPlane,callout:k},textString:c}],scaleSymbolsProportionally:!0,respectFrame:!0}],scaleX:1,angleAlignment:"Display"}}static fromPictureFillSymbol(e){const{height:t,outline:r,width:a,xoffset:i,xscale:o,yoffset:s,yscale:n}=e,l=[],c={type:"CIMPolygonSymbol",symbolLayers:l};if(r){const e=q(r);e&&l.push(e)}let f=e.url;"esriPFS"===e.type&&e.imageData&&(f=e.imageData);const m="angle"in e?e.angle??0:0,y=(a??0)*(o||1),u=(t??0)*(n||1);return l.push({type:"CIMPictureFill",invertBackfaceTexture:!1,scaleX:1,textureFilter:p.TextureFilter.Picture,tintColor:null,url:f,height:u,width:y,offsetX:h.getValue(i),offsetY:h.getValue(s),rotation:h.getValue(-m),colorSubstitutions:null}),c}static fromSimpleFillSymbol(e){const{color:t,style:r,outline:a}=e,o=[],s={type:"CIMPolygonSymbol",symbolLayers:o};if(a){const e=q(a);e&&o.push(e)}if(r&&"solid"!==r&&"none"!==r&&"esriSFSSolid"!==r&&"esriSFSNull"!==r){const e={type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",color:N(t),capStyle:p.LineCapStyle.Butt,joinStyle:p.LineJoinStyle.Miter,width:.75}]};let a=0;const s=n.px2pt($(r)?8:10);switch(r){case"vertical":case"esriSFSVertical":a=90;break;case"forward-diagonal":case"esriSFSForwardDiagonal":case"diagonal-cross":case"esriSFSDiagonalCross":a=-45;break;case"backward-diagonal":case"esriSFSBackwardDiagonal":a=45;break;case"cross":case"esriSFSCross":a=0}o.push({type:"CIMHatchFill",lineSymbol:e,offsetX:0,offsetY:0,rotation:a,separation:s}),"cross"===r||"esriSFSCross"===r?o.push({type:"CIMHatchFill",lineSymbol:i.clone(e),offsetX:0,offsetY:0,rotation:90,separation:s}):"diagonal-cross"!==r&&"esriSFSDiagonalCross"!==r||o.push({type:"CIMHatchFill",lineSymbol:i.clone(e),offsetX:0,offsetY:0,rotation:45,separation:s})}else!r||"solid"!==r&&"esriSFSSolid"!==r||o.push({type:"CIMSolidFill",enable:!0,color:N(t)});return s}static fromSimpleLineSymbol(e){const{cap:t,color:r,join:a,marker:i,miterLimit:o,style:s,width:n}=e;let l=null;"solid"!==s&&"none"!==s&&"esriSLSSolid"!==s&&"esriSLSNull"!==s&&(l=[{type:"CIMGeometricEffectDashes",dashTemplate:X(s,t),lineDashEnding:"NoConstraint",scaleDash:!0,offsetAlongLine:null}]);const c=[];if(i){let e;switch(i.placement){case"begin-end":e=p.ExtremityPlacement.Both;break;case"begin":e=p.ExtremityPlacement.JustBegin;break;case"end":e=p.ExtremityPlacement.JustEnd;break;default:e=p.ExtremityPlacement.None}const t=E.fromSimpleMarker(i,n,r).symbolLayers[0];t.markerPlacement={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:e,offsetAlongLine:0},c.push(t)}return c.push({type:"CIMSolidStroke",color:"none"!==s&&"esriSLSNull"!==s?N(r):[0,0,0,0],capStyle:z(t),joinStyle:V(a),miterLimit:o,width:n,effects:l}),{type:"CIMLineSymbol",symbolLayers:c}}static fromPictureMarker(e){const{angle:t,height:r,width:a,xoffset:i,yoffset:o}=e;let s=e.url;return"esriPMS"===e.type&&e.imageData&&(s=e.imageData),{type:"CIMPointSymbol",symbolLayers:[{type:"CIMPictureMarker",invertBackfaceTexture:!1,scaleX:1,textureFilter:p.TextureFilter.Picture,tintColor:null,url:s,size:r,width:a,offsetX:h.getValue(i),offsetY:h.getValue(o),rotation:h.getValue(-t)}]}}static fromSimpleMarker(e,t,r){const{style:a}=e,i=e.color??r;if("path"===a){const t=[];if("outline"in e&&e.outline){const r=e.outline;t.push({type:"CIMSolidStroke",enable:!0,width:n.pt2px(Math.round(n.px2pt(r.width))),color:N(r.color),path:e.path})}t.push({type:"CIMSolidFill",enable:!0,color:N(i),path:e.path});const[r,a]=_("square");return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:h.getValue(-e.angle),size:h.getValue(e.size||6),offsetX:h.getValue(e.xoffset),offsetY:h.getValue(e.yoffset),frame:r,markerGraphics:[{type:"CIMMarkerGraphic",geometry:a,symbol:{type:"CIMPolygonSymbol",symbolLayers:t}}]}]}}const o=[];let s,l;if("outline"in e&&e.outline&&"none"!==e.outline.style&&"esriSLSNull"!==e.outline.style){const t=e.outline,r="solid"!==t.style&&"esriSLSSolid"!==t.style;[s,l]=r?_(a,e.size):_(a);const i="cross"!==e.style&&"x"!==e.style||"dot"===e?.outline.style||"short-dot"===e?.outline.style?p.LineDashEnding.HalfGap:p.LineDashEnding.FullPattern,c=r?[{type:"CIMGeometricEffectAddControlPoints"},{type:"CIMGeometricEffectDashes",dashTemplate:X(t.style,null).map((e=>t.width&&t.width>0?e*t.width:e)),lineDashEnding:i,controlPointEnding:p.LineDashEnding.FullPattern}]:void 0;o.push({type:"CIMSolidStroke",capStyle:r?p.LineCapStyle.Round:p.LineCapStyle.Butt,enable:!0,width:null!=t.width&&t.width>.667?n.pt2px(Math.round(n.px2pt(t.width))):t.width,color:N(t.color),effects:c})}else!t||"line-marker"!==e.type||"cross"!==e.style&&"x"!==e.style?[s,l]=_(a):([s,l]=_(a),o.push({type:"CIMSolidStroke",enable:!0,width:t,color:N(i)}));o.push({type:"CIMSolidFill",enable:!0,color:N(i)});const c={type:"CIMPolygonSymbol",symbolLayers:o};return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:h.getValue(-e.angle),size:h.getValue(e.size||6*t),offsetX:h.getValue(e.xoffset),offsetY:h.getValue(e.yoffset),frame:s,markerGraphics:[{type:"CIMMarkerGraphic",geometry:l,symbol:c}]}]}}static fromCIMHatchFill(e,t){const r=t*(e.separation??u.defaultHatchFillSeparation),a=r/2,o=i.clone(e.lineSymbol);o.symbolLayers?.forEach((e=>{switch(e.type){case"CIMSolidStroke":null!=e.width&&(e.width*=t),e.effects?.forEach((e=>{"CIMGeometricEffectDashes"===e.type&&(e.dashTemplate=e.dashTemplate.map((e=>e*t)))}));break;case"CIMVectorMarker":{null!=e.size&&(e.size*=t);const r=e.markerPlacement;null!=r&&"placementTemplate"in r&&(r.placementTemplate=r.placementTemplate.map((e=>e*t)));break}}}));let s=this._getLineSymbolPeriod(o)||x;for(;s<x;)s*=2;const n=s/2;return{type:"CIMVectorMarker",frame:{xmin:-n,xmax:n,ymin:-a,ymax:a},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{paths:[[[-n,0],[n,0]]]},symbol:o}],size:r}}static fetchResources(e,t,r){if(e&&t)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const a=e.symbolLayers;if(!a)return;for(const e of a)switch(j(e,t,r),e.type){case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMCharacterMarker":case"CIMPictureMarker":"url"in e&&e.url&&r.push(t.fetchResource(e.url,null));break;case"CIMVectorMarker":{const a=e.markerGraphics;if(!a)continue;for(const e of a)if(e){const a=e.symbol;a&&E.fetchResources(a,t,r)}}}break}}}static fetchFonts(e,t,r){if(e&&t)if("symbolLayers"in e&&e.symbolLayers){for(const a of e.symbolLayers)if("CIMVectorMarker"===a.type&&a.markerGraphics)for(const e of a.markerGraphics)e?.symbol&&E.fetchFonts(e.symbol,t,r)}else if("CIMTextSymbol"===e.type){const{fontFamilyName:a,fontStyleName:i}=e;if(!a||"calcitewebcoreicons"===a.toLowerCase())return;const{style:o,weight:s}=h.fromCIMFontStyle(i),n=h.fromCIMFontDecoration(e),l=new m({family:a,style:o,weight:s,decoration:n});r.push(t.loadFont(l).catch((()=>{P.error(`Unsupported font ${a} in CIM symbol`)})))}}static _getLineSymbolPeriod(e){if(e){const t=this._getEffectsRepeat(e.effects);if(t)return t;if(e.symbolLayers)for(const r of e.symbolLayers)if(r){const e=this._getEffectsRepeat(r.effects);if(e)return e;switch(r.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{const e=this._getPlacementRepeat(r.markerPlacement);if(e)return e}}}}return 0}static _getEffectsRepeat(e){if(e)for(const t of e)if(t)switch(t.type){case"CIMGeometricEffectDashes":{const e=t.dashTemplate;if(e&&e.length){let t=0;for(const r of e)t+=r;return 1&e.length&&(t*=2),t}break}case"CIMGeometricEffectWave":return t.period;default:P.error(`unsupported geometric effect type ${t.type}`)}return 0}static _getPlacementRepeat(e){if(e)switch(e.type){case"CIMMarkerPlacementAlongLineSameSize":case"CIMMarkerPlacementAlongLineRandomSize":case"CIMMarkerPlacementAlongLineVariableSize":{const t=e.placementTemplate;if(t&&t.length){let e=0;for(const r of t)e+=+r;return 1&t.length&&(e*=2),e}break}}return 0}static fromCIMInsidePolygon(e){const t=e.markerPlacement,r={...e};r.markerPlacement=null,r.anchorPoint=null;const a=Math.abs(t.stepX),i=Math.abs(t.stepY),o=(t.randomness??100)/100;let l,c,f,m;if("Random"===t.gridType){const e=n.px2pt(S.randomInsidePolygonTextureSize),r=Math.max(Math.floor(e/a),1),y=Math.max(Math.floor(e/i),1);l=r*a/2,c=y*i/2,f=2*c;const u=new s(t.seed),p=o*a/1.5,h=o*i/1.5;m=[];for(let t=0;t<r;t++)for(let e=0;e<y;e++){const r=t*a-l+p*(.5-u.getFloat()),o=e*i-c+h*(.5-u.getFloat());m.push({x:r,y:o}),0===t&&m.push({x:r+2*l,y:o}),0===e&&m.push({x:r,y:o+2*c})}}else!0===t.shiftOddRows?(l=a/2,c=i,f=2*i,m=[{x:-l,y:0},{x:l,y:0},{x:0,y:c},{x:0,y:-c}]):(l=a/2,c=i/2,f=i,m=[{x:-a,y:0},{x:0,y:-i},{x:-a,y:-i},{x:0,y:0},{x:a,y:0},{x:0,y:i},{x:a,y:i},{x:-a,y:i},{x:a,y:-i}]);return{type:"CIMVectorMarker",frame:{xmin:-l,xmax:l,ymin:-c,ymax:c},markerGraphics:m.map((e=>({type:"CIMMarkerGraphic",geometry:e,symbol:{type:"CIMPointSymbol",symbolLayers:[r]}}))),size:f}}static getSize(e){if(e)switch(e.type){case"CIMTextSymbol":return e.height;case"CIMPointSymbol":{let t=0;if(e.symbolLayers)for(const r of e.symbolLayers)if(r)switch(r.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{const e=r.size;null!=e&&e>t&&(t=e);break}}return t}case"CIMLineSymbol":case"CIMPolygonSymbol":{let t=0;if(e.symbolLayers)for(const r of e.symbolLayers)if(r)switch(r.type){case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{const e=r.width;null!=e&&e>t&&(t=e);break}case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":if(r.markerPlacement&&h.isCIMMarkerStrokePlacement(r.markerPlacement)){const e=r.size;null!=e&&e>t&&(t=e)}}return t}}}static getMarkerScaleRatio(e){if(e&&"CIMVectorMarker"===e.type)if(!1!==e.scaleSymbolsProportionally&&e.frame&&null!=e.size){const t=e.frame.ymax-e.frame.ymin;return e.size/t}return 1}}class G{static findApplicableOverrides(e,t,r){if(e&&t){if(e.primitiveName){let a=!1;for(const t of r)if(t.primitiveName===e.primitiveName){a=!0;break}if(!a)for(const i of t)i.primitiveName===e.primitiveName&&r.push(i)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const a of e.effects)G.findApplicableOverrides(a,t,r);if(e.symbolLayers)for(const a of e.symbolLayers)G.findApplicableOverrides(a,t,r);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const a of e.effects)G.findApplicableOverrides(a,t,r);if(e.markerPlacement&&G.findApplicableOverrides(e.markerPlacement,t,r),"CIMVectorMarker"===e.type){if(e.markerGraphics)for(const a of e.markerGraphics)G.findApplicableOverrides(a,t,r),G.findApplicableOverrides(a.symbol,t,r)}else"CIMCharacterMarker"===e.type?G.findApplicableOverrides(e.symbol,t,r):"CIMHatchFill"===e.type?G.findApplicableOverrides(e.lineSymbol,t,r):"CIMPictureMarker"===e.type&&G.findApplicableOverrides(e.animatedSymbolProperties,t,r)}}}static findEffectOverrides(e,t,r){if(!t||!e)return;const a=e.length;for(let i=0;i<a;i++){const a=e[i],o=a?.primitiveName;if(o){let e=!1;for(const t of r)if(t.primitiveName===o){e=!0;break}if(!e)for(const a of t)a.primitiveName===o&&r.push(a)}}}static async resolveSymbolOverrides(e,t,r,a,o,s,n){if(!e?.symbol)return null;let{symbol:l,primitiveOverrides:c}=e;const f=!!c;if(!f&&!a)return l;l=i.clone(l);let m=!0;if(t||(t={attributes:{}},m=!1),f){if(m||(c=c.filter((e=>!e.valueExpressionInfo?.expression.includes("$feature")))),n||(c=c.filter((e=>!e.valueExpressionInfo?.expression.includes("$view")))),c.length>0){const e=h.attributesToFields(t.attributes);await G.evaluateOverrides(c,t,{spatialReference:r,fields:e,geometryType:o},s,n)}G.applyOverrides(l,c)}return a&&G.applyDictionaryTextOverrides(l,t,a),l}static async evaluateOverrides(e,t,r,a,i){if(!t)return;let o;for(const s of e){const e=s.valueExpressionInfo;if(e&&r?.geometryType){o||(o=[]),s.value=void 0;const n=f.createRendererExpression(e.expression,r.spatialReference,r.fields).then((e=>{s.value=M(e,t,{$view:i},r.geometryType,a)}));o.push(n)}}void 0!==o&&o.length>0&&await Promise.all(o)}static applyDictionaryTextOverrides(e,t,r,a="Normal"){if(e?.type)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":case"CIMTextSymbol":{const i=e.symbolLayers;if(!i)return;for(const o of i)o&&"CIMVectorMarker"===o.type&&G.applyDictionaryTextOverrides(o,t,r,"CIMTextSymbol"===e.type?e.textCase:a)}break;case"CIMVectorMarker":{const a=e.markerGraphics;if(!a)return;for(const e of a)e&&G.applyDictionaryTextOverrides(e,t,r)}break;case"CIMMarkerGraphic":{const i=e.textString;if(i&&i.includes("[")){const o=h.analyzeTextParts(i,r);e.textString=h.assignTextValuesFromFeature(t,o,a)}}}}static applyOverrides(e,t,r,a){if(e.primitiveName)for(const i of t)if(i.primitiveName===e.primitiveName){const t=U(i.propertyName);if(a&&a.push({cim:e,nocapPropertyName:t,value:e[t]}),i.expression&&(i.value=G.toValue(i.propertyName,i.expression)),r){let t=!1;for(const a of r)a.primitiveName===e.primitiveName&&(t=!0);t||r.push(i)}null!=i.value&&(e[t]=i.value)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const i of e.effects)G.applyOverrides(i,t,r,a);if(e.symbolLayers)for(const i of e.symbolLayers)G.applyOverrides(i,t,r,a);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const i of e.effects)G.applyOverrides(i,t,r,a);if("CIMVectorMarker"===e.type&&e.markerGraphics)for(const i of e.markerGraphics)G.applyOverrides(i,t,r,a),G.applyOverrides(i.symbol,t,r,a)}}static restoreOverrides(e){for(const t of e)t.cim[t.nocapPropertyName]=t.value}static buildOverrideKey(e){let t="";for(const r of e)void 0!==r.value&&(t+=`${r.primitiveName}${r.propertyName}${JSON.stringify(r.value)}`);return t}static toValue(e,r){if("DashTemplate"===e)return r.split(" ").map((e=>Number(e)));if("Color"===e){const e=new t(r).toRgba();return e[3]*=255,e}return r}}const z=e=>{if(!e)return p.LineCapStyle.Butt;switch(e){case"butt":return p.LineCapStyle.Butt;case"square":return p.LineCapStyle.Square;case"round":return p.LineCapStyle.Round}},V=e=>{if(!e)return p.LineJoinStyle.Miter;switch(e){case"miter":return p.LineJoinStyle.Miter;case"round":return p.LineJoinStyle.Round;case"bevel":return p.LineJoinStyle.Bevel}},A=e=>{if(null==e)return"Center";switch(e){case"left":return"Left";case"right":return"Right";case"center":return"Center"}},O=e=>{if(null==e)return"Center";switch(e){case"baseline":return"Baseline";case"top":return"Top";case"middle":return"Center";case"bottom":return"Bottom"}},N=e=>{if(!e)return[0,0,0,0];const{r:t,g:r,b:a,a:i}=e;return[t,r,a,255*i]},R=(e,t)=>{const r=B(t),a=H(e);return r&&a?`${r}-${a}`:`${r}${a}`},B=e=>{if(!e)return"";switch(e.toLowerCase()){case"bold":case"bolder":return"bold"}return""},H=e=>{if(!e)return"";switch(e.toLowerCase()){case"italic":case"oblique":return"italic"}return""},X=(e,t)=>{const r=a("safari")?.001:0,i="butt"===t;switch(e){case"dash":case"esriSLSDash":return i?[4,3]:[3,4];case"dash-dot":case"esriSLSDashDot":return i?[4,3,1,3]:[3,4,r,4];case"dot":case"esriSLSDot":return i?[1,3]:[r,4];case"long-dash":case"esriSLSLongDash":return i?[8,3]:[7,4];case"long-dash-dot":case"esriSLSLongDashDot":return i?[8,3,1,3]:[7,4,r,4];case"long-dash-dot-dot":case"esriSLSDashDotDot":return i?[8,3,1,3,1,3]:[7,4,r,4,r,4];case"short-dash":case"esriSLSShortDash":return i?[4,1]:[3,2];case"short-dash-dot":case"esriSLSShortDashDot":return i?[4,1,1,1]:[3,2,r,2];case"short-dash-dot-dot":case"esriSLSShortDashDotDot":return i?[4,1,1,1,1,1]:[3,2,r,2,r,2];case"short-dot":case"esriSLSShortDot":return i?[1,1]:[r,2];case"solid":case"esriSLSSolid":case"none":return P.error("Unexpected: style does not require rasterization"),[0,0];default:return P.error(`Tried to rasterize SLS, but found an unexpected style: ${e}!`),[0,0]}};function Y(e){return void 0!==e.symbolLayers}const _=(e,t=100)=>{const r=t/2;let a,i;const o=e;if("circle"===o||"esriSMSCircle"===o){const e=.25;let t=Math.acos(1-e/r),o=Math.ceil(b/t/4);0===o&&(o=1),t=C/o,o*=4;const s=[];s.push([r,0]);for(let a=1;a<o;a++)s.push([r*Math.cos(a*t),-r*Math.sin(a*t)]);s.push([r,0]),a={rings:[s]},i={xmin:-r,ymin:-r,xmax:r,ymax:r}}else if("cross"===o||"esriSMSCross"===o){const e=0;a={paths:[[[e,r],[e,-r]],[[r,e],[-r,e]]]},i={xmin:-r,ymin:-r,xmax:r,ymax:r}}else if("diamond"===o||"esriSMSDiamond"===o)a={rings:[[[-r,0],[0,r],[r,0],[0,-r],[-r,0]]]},i={xmin:-r,ymin:-r,xmax:r,ymax:r};else if("square"===o||"esriSMSSquare"===o)a={rings:[[[-r,-r],[-r,r],[r,r],[r,-r],[-r,-r]]]},i={xmin:-r,ymin:-r,xmax:r,ymax:r};else if("x"===o||"esriSMSX"===o)a={paths:[[[r,r],[-r,-r]],[[r,-r],[-r,r]]]},i={xmin:-r,ymin:-r,xmax:r,ymax:r};else if("triangle"===o||"esriSMSTriangle"===o){const e=t*.5773502691896257,r=-e,o=2/3*t,s=o-t;a={rings:[[[r,s],[0,o],[e,s],[r,s]]]},i={xmin:r,ymin:s,xmax:e,ymax:o}}else"arrow"===o&&(a={rings:[[[-50,50],[50,0],[-50,-50],[-33,-20],[-33,20],[-50,50]]]},i={xmin:-r,ymin:-r,xmax:r,ymax:r});return[i,a]},$=e=>"vertical"===e||"horizontal"===e||"cross"===e||"esriSFSCross"===e||"esriSFSVertical"===e||"esriSFSHorizontal"===e,U=e=>e?e.charAt(0).toLowerCase()+e.substr(1):e;function j(e,t,r){if(!e.effects||null!=t.geometryEngine)return;if(t.geometryEnginePromise)return void r.push(t.geometryEnginePromise);h.isGeometryEngineRequired(e.effects)&&(t.geometryEnginePromise=h.importGeometryEngine(),r.push(t.geometryEnginePromise),t.geometryEnginePromise.then((e=>t.geometryEngine=e)))}function q(e){if(!e)return null;let t=null;const{cap:r,color:a,join:i,miterLimit:o,style:s,width:n}=e;return"solid"!==s&&"none"!==s&&"esriSLSSolid"!==s&&"esriSLSNull"!==s&&(t=[{type:"CIMGeometricEffectDashes",dashTemplate:X(s,r),lineDashEnding:"NoConstraint",scaleDash:!0,offsetAlongLine:null}]),{type:"CIMSolidStroke",color:"esriSLSNull"!==s&&"none"!==s?N(a):[0,0,0,0],capStyle:z(r),joinStyle:V(i),miterLimit:o,width:n,effects:t}}e.CIMSymbolHelper=E,e.CIMSymbolInflatedSizeHelper=D,e.OverrideHelper=G,e.getEffectsInflateSize=T,e.slsDashToTemplateArray=X,e.symbolToCIM=L,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
