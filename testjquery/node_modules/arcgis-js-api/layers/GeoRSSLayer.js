/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../config","../request","../symbols","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../geometry/Extent","../geometry/support/spatialReferenceUtils","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/commonProperties","../symbols/Symbol","../symbols/SimpleLineSymbol","../symbols/PictureMarkerSymbol","../symbols/SimpleMarkerSymbol","../symbols/SimpleFillSymbol"],(function(e,r,t,o,s,i,l,a,n,p,y,c,u,d,m,h,S,_,g,b,f,v,L,x,C,P,R){"use strict";const G=["atom","xml"],k={base:L,key:"type",typeMap:{"simple-line":x},errorContext:"symbol"},M={base:L,key:"type",typeMap:{"picture-marker":C,"simple-marker":P},errorContext:"symbol"},w={base:L,key:"type",typeMap:{"simple-fill":R},errorContext:"symbol"};let E=class extends(S.BlendLayer(b.RefreshableLayer(_.OperationalLayer(g.PortalLayer(f.ScaleRangeLayer(s.MultiOriginJSONMixin(h))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}readFeatureCollections(e,r){return r.featureCollection.layers.forEach((e=>{const r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&r.outline?.style.includes("esriSFS")&&(r.outline.style="esriSLSSolid")})),r.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?l.getFilename(this.url,G)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(i.throwIfAbortError).then((()=>this._fetchService(r))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){const o=this.spatialReference,{data:s}=await t(r.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:m.isWGS84(o)?void 0:o.wkid??JSON.stringify(o)},signal:e});return s}_hasGeometry(e){return this.featureCollections?.some((r=>r.featureSet?.geometryType===e&&r.featureSet.features?.length>0))??!1}};e.__decorate([a.property()],E.prototype,"description",void 0),e.__decorate([a.property()],E.prototype,"featureCollections",void 0),e.__decorate([c.reader("service","featureCollections",["featureCollection.layers"])],E.prototype,"readFeatureCollections",null),e.__decorate([a.property({type:d,json:{name:"lookAtExtent"}})],E.prototype,"fullExtent",void 0),e.__decorate([a.property(v.id)],E.prototype,"id",void 0),e.__decorate([a.property(v.legendEnabled)],E.prototype,"legendEnabled",void 0),e.__decorate([a.property({types:k,json:{write:!0}})],E.prototype,"lineSymbol",void 0),e.__decorate([a.property({type:["show","hide"]})],E.prototype,"listMode",void 0),e.__decorate([a.property({types:M,json:{write:!0}})],E.prototype,"pointSymbol",void 0),e.__decorate([a.property({types:w,json:{write:!0}})],E.prototype,"polygonSymbol",void 0),e.__decorate([a.property({type:["GeoRSS"]})],E.prototype,"operationalLayerType",void 0),e.__decorate([a.property(v.url)],E.prototype,"url",void 0),e.__decorate([a.property({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],E.prototype,"title",null),e.__decorate([a.property({readOnly:!0,json:{read:!1},value:"geo-rss"})],E.prototype,"type",void 0),E=e.__decorate([u.subclass("esri.layers.GeoRSSLayer")],E);return E}));
