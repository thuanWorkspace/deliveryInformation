/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../config","../Graphic","../PopupTemplate","../request","../core/Collection","../core/CollectionFlattener","../core/jsonMap","../core/lang","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/write","../geometry/Extent","../geometry/SpatialReference","../geometry/support/scaleUtils","../geometry/support/spatialReferenceUtils","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./ogc/crsUtils","./support/arcgisLayerUrl","./support/commonProperties","./support/ExportWMSImageParameters","./support/imageBitmapUtils","./support/WMSSublayer","./support/wmsUtils"],(function(e,t,r,o,a,s,i,n,l,p,u,c,y,d,m,h,f,g,_,b,w,x,S,v,I,F,P,O,E,R,L,M,U,j,T,W,C){"use strict";const $=new n.JSONMap({bmp:"image/bmp",gif:"image/gif",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml"},{ignoreUnknown:!1});function q(e){return"text/html"===e}function N(e){return"text/plain"===e}let B=class extends(I.BlendLayer(R.TemporalLayer(O.RefreshableLayer(E.ScaleRangeLayer(F.OperationalLayer(P.PortalLayer(p.MultiOriginJSONMixin(v)))))))){constructor(...e){super(...e),this.allSublayers=new i({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.customParameters=null,this.customLayerParameters=null,this.copyright=null,this.description=null,this.dimensions=null,this.fullExtent=null,this.fullExtents=null,this.featureInfoFormats=null,this.featureInfoUrl=null,this.fetchFeatureInfoFunction=null,this.imageFormat=null,this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.legendEnabled=!0,this.mapUrl=null,this.isReference=null,this.operationalLayerType="WMS",this.spatialReference=null,this.spatialReferences=null,this.sublayers=null,this.type="wms",this.version=null,this.addHandles([c.on((()=>this.sublayers),"after-add",(({item:e})=>{e.parent=e.layer=this}),c.sync),c.on((()=>this.sublayers),"after-remove",(({item:e})=>{e.layer=e.parent=null}),c.sync),c.watch((()=>this.sublayers),((e,t)=>{if(t)for(const r of t)r.layer=r.parent=null;if(e)for(const r of e)r.parent=r.layer=this}),c.sync)])}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this.allSublayers.destroy()}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]},e).catch(u.throwIfAbortError).then((()=>this._fetchService(t)))),Promise.resolve(this)}readFullExtentFromItemOrMap(e,t){const r=t.extent;return r?new b({xmin:r[0][0],ymin:r[0][1],xmax:r[1][0],ymax:r[1][1]}):null}writeFullExtent(e,t){t.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]}get featureInfoFormat(){return null==this.featureInfoFormats?null:this.featureInfoFormats.find(q)??this.featureInfoFormats.find(N)??null}set featureInfoFormat(e){null==e?(this.revert("featureInfoFormat","service"),this._clearOverride("featureInfoFormat")):(q(e)||N(e))&&this._override("featureInfoFormat",e)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.includes("image/png")?"image/png":r&&r[0]}readSpatialReferenceFromItemOrDocument(e,t){return new w(t.spatialReferences[0])}writeSpatialReferences(e,t){const r=this.spatialReference?.wkid;e&&r?(t.spatialReferences=e.filter((e=>e!==r)),t.spatialReferences.unshift(r)):t.spatialReferences=e}readSublayersFromItemOrMap(e,t,r){return A(t.layers,r,t.visibleLayers)}readSublayers(e,t,r){return A(t.layers,r)}writeSublayers(e,t,r,o){t.layers=[];const a=new Map,s=e.flatten((({sublayers:e})=>e??[]));for(const i of s)if("number"==typeof i.parent?.id){const e=a.get(i.parent.id);null!=e?e.push(i.id):a.set(i.parent.id,[i.id])}for(const i of s){const e={sublayer:i,...o},r=i.write({parentLayerId:"number"==typeof i.parent?.id?i.parent.id:-1},e);if(a.has(i.id)&&(r.sublayerIds=a.get(i.id)),!i.sublayers&&i.name){const r=i.write({},e);delete r.id,t.layers.push(r)}}t.visibleLayers=s.filter((({visible:e,sublayers:t})=>e&&!t)).map((({name:e})=>e)).toArray()}set url(e){if(!e)return void this._set("url",e);const{path:t,query:r}=y.urlToObject(e);for(const a in r)/^(request|service)$/i.test(a)&&delete r[a];const o=y.addQueryParameters(t,r??{});this._set("url",o)}createExportImageParameters(e,t,r,o){const a=o?.pixelRatio??1,s=x.getScale({extent:e,width:t})*a,i=new j.ExportWMSImageParameters({layer:this,scale:s}),{xmin:n,ymin:l,xmax:p,ymax:u,spatialReference:c}=e,y=C.normalizeWKID(c,this.spatialReferences),d="1.3.0"===this.version&&L.isAxesOrderReversedForWkid(y)?`${l},${n},${u},${p}`:`${n},${l},${p},${u}`,m=i.toJSON();return{bbox:d,["1.3.0"===this.version?"crs":"srs"]:null==y||isNaN(y)?void 0:"EPSG:"+y,...m}}async fetchImage(e,t,r,o){const s=this.mapUrl,i=this.createExportImageParameters(e,t,r,o);if(!i.layers){const e=document.createElement("canvas");return e.width=t,e.height=r,e}const n=o?.timeExtent?.start,l=o?.timeExtent?.end,p=null!=n&&null!=l?n.getTime()===l.getTime()?C.toISOString(n):`${C.toISOString(n)}/${C.toISOString(l)}`:void 0,u={responseType:"image",query:this._mixCustomParameters({width:t,height:r,...i,time:p,...this.refreshParameters}),signal:o?.signal};return a(s??"",u).then((e=>e.data))}async fetchImageBitmap(e,t,r,o){const s=this.mapUrl??"",i=this.createExportImageParameters(e,t,r,o);if(!i.layers){const e=document.createElement("canvas");return e.width=t,e.height=r,e}const n=o?.timeExtent?.start,l=o?.timeExtent?.end,p=null!=n&&null!=l?n.getTime()===l.getTime()?C.toISOString(n):`${C.toISOString(n)}/${C.toISOString(l)}`:void 0,u={responseType:"blob",query:this._mixCustomParameters({width:t,height:r,...i,time:p,...this.refreshParameters}),signal:o?.signal},{data:c}=await a(s,u);return T.createBitmap(c,s,o?.signal)}fetchFeatureInfo(e,t,r,o,a){const s=x.getScale({extent:e,width:t}),i=new j.ExportWMSImageParameters({layer:this,scale:s}),n=C.getPopupLayers(i.visibleSublayers);if(null==this.featureInfoUrl||null==n)return Promise.resolve([]);if(null==this.fetchFeatureInfoFunction&&null==this.featureInfoFormat)return Promise.resolve([]);const l="1.3.0"===this.version?{I:o,J:a}:{x:o,y:a},p={query_layers:n,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:t,height:r,...l},u={...this.createExportImageParameters(e,t,r),...p},c=this._mixCustomParameters(u);return null!=this.fetchFeatureInfoFunction?this.fetchFeatureInfoFunction(c):this._defaultFetchFeatureInfoFunction(y.addQueryParameters(this.featureInfoUrl,c))}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}findSublayerByName(e){return this.allSublayers.find((t=>t.name===e))}serviceSupportsSpatialReference(e){return M.isWmsServer(this.url)||null!=this.spatialReferences&&this.spatialReferences.some((t=>{const r=900913===t?w.WebMercator:new w({wkid:t});return S.equals(r,e)}))}_defaultFetchFeatureInfoFunction(e){const t=document.createElement("iframe");t.src=y.addProxy(e),t.style.border="none",t.style.margin="0",t.style.width="100%",t.setAttribute("sandbox","");const a=new o({title:this.title,content:t}),s=new r({sourceLayer:this,popupTemplate:a});return Promise.resolve([s])}async _fetchService(e){if(!this.resourceInfo&&this.parsedUrl?.path){const{path:t,query:r}=this.parsedUrl,{data:o}=await a(t,{query:{SERVICE:"WMS",REQUEST:"GetCapabilities",...r,...this.customParameters},responseType:"xml",signal:e});this.resourceInfo=C.parseCapabilities(o)}if(this.parsedUrl){const e=new y.Url(this.parsedUrl.path),{httpsDomains:r}=t.request;"https"!==e.scheme||e.port&&"443"!==e.port||!e.host||r.includes(e.host)||r.push(e.host)}this.read(this.resourceInfo,{origin:"service"})}_mixCustomParameters(e){if(!this.customLayerParameters&&!this.customParameters)return e;const t={...this.customParameters,...this.customLayerParameters};for(const r in t)e[r.toLowerCase()]=t[r];return e}};function k(e,t){return e.some((e=>{for(const r in e)if(_.willPropertyWrite(e,r,null,t))return!0;return!1}))}function A(e,t,r){e=e??[];const o=new Map;e.every((e=>null==e.id))&&(e=l.clone(e)).forEach(((e,t)=>e.id=t));for(const s of e){const e=new W;e.read(s,t),r&&!r.includes(e.name)&&(e.visible=!1),o.set(e.id,e)}const a=[];for(const i of e){const e=null!=i.id?o.get(i.id):null;if(e)if(null!=i.parentLayerId&&i.parentLayerId>=0){const t=o.get(i.parentLayerId);if(!t)continue;t.sublayers||(t.sublayers=new s),t.sublayers.push(e)}else a.push(e)}return a}e.__decorate([d.property({readOnly:!0})],B.prototype,"allSublayers",void 0),e.__decorate([d.property({json:{type:Object,write:!0}})],B.prototype,"customParameters",void 0),e.__decorate([d.property({json:{type:Object,write:!0}})],B.prototype,"customLayerParameters",void 0),e.__decorate([d.property({type:String,json:{write:!0}})],B.prototype,"copyright",void 0),e.__decorate([d.property()],B.prototype,"description",void 0),e.__decorate([d.property({readOnly:!0})],B.prototype,"dimensions",void 0),e.__decorate([d.property({json:{type:[[Number]],read:{source:"extent"},write:{target:"extent"},origins:{"web-document":{write:{ignoreOrigin:!0}},"portal-item":{write:{ignoreOrigin:!0}}}}})],B.prototype,"fullExtent",void 0),e.__decorate([h.reader(["web-document","portal-item"],"fullExtent",["extent"])],B.prototype,"readFullExtentFromItemOrMap",null),e.__decorate([g.writer(["web-document","portal-item"],"fullExtent",{extent:{type:[[Number]]}})],B.prototype,"writeFullExtent",null),e.__decorate([d.property()],B.prototype,"fullExtents",void 0),e.__decorate([d.property({type:String,json:{write:{ignoreOrigin:!0}}})],B.prototype,"featureInfoFormat",null),e.__decorate([d.property({type:[String],readOnly:!0})],B.prototype,"featureInfoFormats",void 0),e.__decorate([d.property({type:String,json:{write:{ignoreOrigin:!0}}})],B.prototype,"featureInfoUrl",void 0),e.__decorate([d.property()],B.prototype,"fetchFeatureInfoFunction",void 0),e.__decorate([d.property({type:String,json:{origins:{"web-document":{default:"image/png",type:$.jsonValues,read:{reader:$.read,source:"format"},write:{writer:$.write,target:"format"}}}}})],B.prototype,"imageFormat",void 0),e.__decorate([h.reader("imageFormat",["supportedImageFormatTypes"])],B.prototype,"readImageFormat",null),e.__decorate([d.property({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],B.prototype,"imageMaxHeight",void 0),e.__decorate([d.property({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],B.prototype,"imageMaxWidth",void 0),e.__decorate([d.property()],B.prototype,"imageTransparency",void 0),e.__decorate([d.property(U.legendEnabled)],B.prototype,"legendEnabled",void 0),e.__decorate([d.property({type:["show","hide","hide-children"]})],B.prototype,"listMode",void 0),e.__decorate([d.property({type:String,json:{write:{ignoreOrigin:!0}}})],B.prototype,"mapUrl",void 0),e.__decorate([d.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),e.__decorate([d.property({type:["WMS"]})],B.prototype,"operationalLayerType",void 0),e.__decorate([d.property()],B.prototype,"resourceInfo",void 0),e.__decorate([d.property({type:w,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],B.prototype,"spatialReference",void 0),e.__decorate([h.reader(["web-document","portal-item"],"spatialReference",["spatialReferences"])],B.prototype,"readSpatialReferenceFromItemOrDocument",null),e.__decorate([d.property({type:[m.Integer],json:{read:!1,origins:{service:{read:!0},"web-document":{read:!1,write:{ignoreOrigin:!0}},"portal-item":{read:!1,write:{ignoreOrigin:!0}}}}})],B.prototype,"spatialReferences",void 0),e.__decorate([g.writer(["web-document","portal-item"],"spatialReferences")],B.prototype,"writeSpatialReferences",null),e.__decorate([d.property({type:s.ofType(W),json:{write:{target:"layers",overridePolicy(e,t,r){if(k(this.allSublayers,r))return{ignoreOrigin:!0}}}}})],B.prototype,"sublayers",void 0),e.__decorate([h.reader(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],B.prototype,"readSublayersFromItemOrMap",null),e.__decorate([h.reader("service","sublayers",["layers"])],B.prototype,"readSublayers",null),e.__decorate([g.writer("sublayers",{layers:{type:[W]},visibleLayers:{type:[String]}})],B.prototype,"writeSublayers",null),e.__decorate([d.property({json:{read:!1},readOnly:!0,value:"wms"})],B.prototype,"type",void 0),e.__decorate([d.property(U.url)],B.prototype,"url",null),e.__decorate([d.property({type:String,json:{write:{ignoreOrigin:!0}}})],B.prototype,"version",void 0),B=e.__decorate([f.subclass("esri.layers.WMSLayer")],B);return B}));
