/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../geometry","../core/Error","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","./FeatureLayer","./graphics/sources/CSVSource","./graphics/sources/support/clientSideDefaults","../rest/support/Query","../chunks/persistableUrlUtils","../geometry/SpatialReference"],(function(e,r,t,o,i,s,a,l,n,d,c,u,p,y,h,g,f){"use strict";function m(e,r){throw new t(r,`CSVLayer (title: ${e.title}, id: ${e.id}) cannot be saved to a portal item`)}let _=class extends u{constructor(...e){super(...e),this.geometryType="point",this.capabilities=y.createCapabilities(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=f.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},e).catch(o.throwIfAbortError).then((async()=>this.initLayerProperties(await this.createGraphicsSource(r))));return this.addResolvingPromise(t),Promise.resolve(this)}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,r){return null!=r.showLabels?r.showLabels:!!r.layerDefinition?.drawingInfo?.labelingInfo}set url(e){if(!e)return void this._set("url",e);const r=i.urlToObject(e);this._set("url",r.path),r.query&&(this.customParameters={...this.customParameters,...r.query})}async createGraphicsSource(e){const r=new p.CSVSource({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",r),await r.load({signal:e}),this.read({locationInfo:r.locationInfo,columnDelimiter:r.delimiter},{origin:"service",url:this.parsedUrl}),r}queryFeatures(e,r){return this.load().then((()=>this.source.queryFeatures(h.from(e)||this.createQuery()))).then((e=>{if(e?.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryObjectIds(e,r){return this.load().then((()=>this.source.queryObjectIds(h.from(e)||this.createQuery())))}queryFeatureCount(e,r){return this.load().then((()=>this.source.queryFeatureCount(h.from(e)||this.createQuery())))}queryExtent(e,r){return this.load().then((()=>this.source.queryExtent(h.from(e)||this.createQuery())))}read(e,r){super.read(e,r),r&&"service"===r.origin&&this.revert(["latitudeField","longitudeField"],"service")}write(e,r){return super.write(e,{...r,writeLayerSchema:!0})}clone(){throw new t("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(e){return m(this,"csv-layer:save")}async saveAs(e,r){return m(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:e,updates:r}=await this.source.refresh(this.customParameters);return null!=r&&this.read(r,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};e.__decorate([s.property({readOnly:!0,json:{read:!1,write:!1}})],_.prototype,"capabilities",void 0),e.__decorate([s.property({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],_.prototype,"delimiter",void 0),e.__decorate([s.property({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],_.prototype,"editingEnabled",void 0),e.__decorate([s.property({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],_.prototype,"fields",void 0),e.__decorate([s.property({type:Boolean,readOnly:!0})],_.prototype,"isTable",null),e.__decorate([d.reader("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],_.prototype,"readWebMapLabelsVisible",null),e.__decorate([s.property({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],_.prototype,"latitudeField",void 0),e.__decorate([s.property({type:["show","hide"]})],_.prototype,"listMode",void 0),e.__decorate([s.property({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],_.prototype,"locationType",void 0),e.__decorate([s.property({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],_.prototype,"longitudeField",void 0),e.__decorate([s.property({type:["CSV"]})],_.prototype,"operationalLayerType",void 0),e.__decorate([s.property()],_.prototype,"outFields",void 0),e.__decorate([s.property({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],_.prototype,"path",void 0),e.__decorate([s.property({json:{read:!1},cast:null,type:p.CSVSource,readOnly:!0})],_.prototype,"source",void 0),e.__decorate([s.property({json:{read:!1},value:"csv",readOnly:!0})],_.prototype,"type",void 0),e.__decorate([s.property({json:{read:g.read,write:{isRequired:!0,ignoreOrigin:!0,writer:g.write}}})],_.prototype,"url",null),_=e.__decorate([c.subclass("esri.layers.CSVLayer")],_);return _}));
