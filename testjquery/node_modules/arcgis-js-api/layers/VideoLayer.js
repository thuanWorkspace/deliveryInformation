/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../geometry","../request","../core/mathUtils","../core/MultiOriginJSONSupport","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../geometry/Polyline","../geometry/SpatialReference","./Layer","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/ScaleRangeLayer","./support/commonProperties","./support/PlaybackInfo","./support/serviceCapabilitiesUtils","./support/TelemetryData","./support/TelemetryDisplay","./support/VideoFrame","./video/VideoController","./video/videoUtils","../geometry/Polygon","../geometry/Extent"],(function(e,t,r,o,i,l,p,n,a,s,c,y,d,u,h,_,m,g,v,f,S,O,b,T,C,U,x,I){"use strict";let P=class extends(_.BlendLayer(g.ScaleRangeLayer(i.MultiOriginJSONMixin(m.CustomParametersMixin(h))))){constructor(e){super(e),this._trailPoints=[],this.capabilities=null,this.connectionInfo=null,this.controller=new C,this.copyright=null,this.coverage=null,this.description=null,this.frame=null,this.frameCount=null,this.initialExtent=null,this.playbackInfo=null,this.posterUrl=null,this.protocol="hls",this.qualities=null,this.serviceItemId=null,this.sourceJSON=null,this.spatialReference=u.WGS84,this.telemetryDisplay=null,this.videoTimeExtent=null,this.title=null,this.type="video",this.url=null}initialize(){this.telemetryDisplay=new b({frameCenter:!0,frameOutline:!0,lineOfSight:!0,sensorLocation:!0,sensorTrail:!0}),this.addHandles([l.watch((()=>this.metadata),(()=>this.notifyChange("telemetry"))),l.watch((()=>this.telemetry?.sensorLocation),(e=>this._setSensorTrail(e)),l.initial)])}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._fetchService(t)),Promise.resolve(this)}get buffered(){return this.controller.buffered}readCapabilitiesFromService(e,t){return S.getVideoLayerCapabilities(t)}readConnectionInfo(e,t){const r=t.connectionUrl;return this.controller.playerUrl=r&&this.protocol?r[this.protocol]:"",r}get currentTime(){return this.controller.currentTime}get duration(){return this.controller.duration}get ended(){return this.controller.ended}get loop(){return this.controller.loop}set loop(e){this.controller.loop=e}get metadata(){return this.controller?.currentMetadata}get muted(){return this.controller.muted}set muted(e){this.controller.muted=e}get playbackRate(){return this.controller.rate}set playbackRate(e){this.controller.rate=e}get playerUrl(){return this.controller.playerUrl}get playing(){return this.controller.playing}get state(){return this.controller.state}get telemetry(){return U.getTelemetryData(this.metadata)}get videoElement(){return this.controller?.element}get videoHeight(){return this.controller?.videoHeight}get videoWidth(){return this.controller?.videoWidth}get waiting(){return this.controller.waiting}play(){this.controller.play()}pause(){this.controller.pause()}reset(){this.controller.reset()}setCurrentTime(e){if(!this.duration)return;const t=o.clamp(e,0,this.duration);this.controller.setCurrentTime(t)}getCurrentFrame(){}toGround(e,t){return this.controller?.sensorModel?.metadataSupportsTransforms?this.controller.sensorModel.transformImageToGeo(e,t):null}toVideo(e){if(!this.controller?.sensorModel?.metadataSupportsTransforms)return null;const t=this.controller.sensorModel.transformGeoToImage(e.x,e.y,e.z);return{x:t[0],y:t[1]}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:o}=await r(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:e});o&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}_setSensorTrail(e){if(!e)return;const t=U.getSensorTrailPoints(e,this._trailPoints);this._trailPoints=[...t];const r=this._trailPoints.map((e=>e.toArray())),o=new d({hasZ:e.hasZ,paths:[r]});this.telemetry.sensorTrail=o.clone()}};e.__decorate([p.property({readOnly:!0})],P.prototype,"buffered",null),e.__decorate([p.property({readOnly:!0,json:{read:!1}})],P.prototype,"capabilities",void 0),e.__decorate([c.reader("service","capabilities",["supportsCoverageQuery","supportsExportClip","supportsMensuration"])],P.prototype,"readCapabilitiesFromService",null),e.__decorate([p.property({readOnly:!0})],P.prototype,"connectionInfo",void 0),e.__decorate([c.reader("connectionInfo",["connectionUrl"])],P.prototype,"readConnectionInfo",null),e.__decorate([p.property()],P.prototype,"controller",void 0),e.__decorate([p.property({type:String})],P.prototype,"copyright",void 0),e.__decorate([p.property({type:x})],P.prototype,"coverage",void 0),e.__decorate([p.property({type:Number})],P.prototype,"currentTime",null),e.__decorate([p.property({type:String})],P.prototype,"description",void 0),e.__decorate([p.property({type:Number})],P.prototype,"duration",null),e.__decorate([p.property({type:Boolean})],P.prototype,"ended",null),e.__decorate([p.property({type:T})],P.prototype,"frame",void 0),e.__decorate([p.property({type:Number})],P.prototype,"frameCount",void 0),e.__decorate([p.property({type:I})],P.prototype,"initialExtent",void 0),e.__decorate([p.property({type:Boolean})],P.prototype,"loop",null),e.__decorate([p.property({readOnly:!0})],P.prototype,"metadata",null),e.__decorate([p.property({type:Boolean})],P.prototype,"muted",null),e.__decorate([p.property({type:f})],P.prototype,"playbackInfo",void 0),e.__decorate([p.property({type:Number})],P.prototype,"playbackRate",null),e.__decorate([p.property({type:String})],P.prototype,"playerUrl",null),e.__decorate([p.property({readOnly:!0})],P.prototype,"playing",null),e.__decorate([p.property({readOnly:!0,json:{read:{source:"poster"}}})],P.prototype,"posterUrl",void 0),e.__decorate([p.property({type:String})],P.prototype,"protocol",void 0),e.__decorate([p.property({readOnly:!0})],P.prototype,"qualities",void 0),e.__decorate([p.property({readOnly:!0})],P.prototype,"serviceItemId",void 0),e.__decorate([p.property()],P.prototype,"sourceJSON",void 0),e.__decorate([p.property()],P.prototype,"spatialReference",void 0),e.__decorate([p.property({type:String})],P.prototype,"state",null),e.__decorate([p.property({type:O})],P.prototype,"telemetry",null),e.__decorate([p.property({type:b})],P.prototype,"telemetryDisplay",void 0),e.__decorate([p.property({readOnly:!0,nonNullable:!1,json:{read:{reader:U.readVideoTimeExtent,source:"time"}}})],P.prototype,"videoTimeExtent",void 0),e.__decorate([p.property({readOnly:!0,json:{read:{source:"name"}}})],P.prototype,"title",void 0),e.__decorate([p.property({readOnly:!0})],P.prototype,"type",void 0),e.__decorate([p.property(v.url)],P.prototype,"url",void 0),e.__decorate([p.property({readOnly:!0})],P.prototype,"videoElement",null),e.__decorate([p.property({readOnly:!0})],P.prototype,"videoHeight",null),e.__decorate([p.property({readOnly:!0})],P.prototype,"videoWidth",null),e.__decorate([p.property({readOnly:!0})],P.prototype,"waiting",null),P=e.__decorate([y.subclass("esri.layers.VideoLayer")],P);return P}));
