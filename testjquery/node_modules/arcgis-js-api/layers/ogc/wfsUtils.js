/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../geometry","../../request","../../core/Error","../../core/iteratorUtils","../../core/urlUtils","../../geometry/projection","../../geometry/support/spatialReferenceUtils","../../geometry/support/typeUtils","../graphics/sources/geojson/geojson","./xmlUtils","../support/arcgisLayerUrl","../support/Field","../support/fieldUtils","../../geometry/SpatialReference","../../geometry/Extent"],(function(e,t,r,a,n,i,s,o,u,l,p,c,y,d,f,m){"use strict";const g="xlink:href",w="2.0.0",b="__esri_wfs_id__",F="wfs-layer:getWFSLayerTypeInfo-error",T="wfs-layer:empty-service",S="wfs-layer:feature-type-not-found",h="wfs-layer:geojson-not-supported",x="wfs-layer:kvp-encoding-not-supported",C="wfs-layer:malformed-json",R="wfs-layer:unknown-geometry-type",E="wfs-layer:unknown-field-type",P="wfs-layer:unsupported-spatial-reference",k="wfs-layer:unsupported-wfs-version";async function G(e,t){const a=N((await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:w,...t?.customParameters},signal:t?.signal})).data);return L(e,a),a}function N(e){const t=J(e);B(t),Z(t);const r=t.firstElementChild,a=n.cache(M(r));return{operations:A(r),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const v=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function A(e){let t=!1;const r={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(p.visitXML(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{r.GetCapabilities.url=e.getAttribute(g)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{r.DescribeFeatureType.url=e.getAttribute(g)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{r.GetFeature.url=e.getAttribute(g)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;t&&v.has(t.toLowerCase())&&(r.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{r.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!t)throw new a(x,"WFS service doesn't support key/value pair (KVP) encoding");if(null==r.GetFeature.outputFormat)throw new a(h,"WFS service doesn't support GeoJSON output format");return r}function L(e,t){i.isHTTPSProtocol(e)&&(i.hasSameOrigin(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=i.toHTTPS(t.operations.DescribeFeatureType.url)),i.hasSameOrigin(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=i.toHTTPS(t.operations.GetFeature.url)))}function U(e){const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function M(e){return p.iterateXML(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},r=new Set;return p.visitXML(e,{Name:e=>{const{name:r,prefix:a}=K(e.textContent);t.typeName=`${a}:${r}`,t.name=r,t.namespacePrefix=a,t.namespaceUri=e.lookupNamespaceURI(a)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=D(e)},DefaultCRS:e=>{const a=U(e);a&&(t.defaultSpatialReference=a,r.add(a))},OtherCRS:e=>{const t=U(e);t&&r.add(t)}}),t.title||(t.title=t.name),r.add(4326),t.supportedSpatialReferences.push(...r),t}}})}function D(e){let t,r,a,n;for(const i of e.children)switch(i.localName){case"LowerCorner":[t,r]=i.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[a,n]=i.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:a,ymax:n,spatialReference:o.WGS84}}function j(e,t,r){return n.find(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function I(e,t,r,a={}){const{featureType:n,extent:i}=await O(e,t,r,a),{spatialReference:s}=ee(e.operations.GetFeature.url,n,a.spatialReference),{fields:o,geometryType:u,swapXY:l,objectIdField:p,geometryField:c}=await X(e,n,s,a);return{url:e.operations.GetCapabilities.url,name:n.name,namespaceUri:n.namespaceUri,fields:o,geometryField:c,geometryType:u,objectIdField:p,spatialReference:a.spatialReference??new f({wkid:n.defaultSpatialReference}),extent:i,swapXY:l,wfsCapabilities:e,customParameters:a.customParameters}}async function O(e,t,r,n={}){const i=e.readFeatureTypes(),u=t?j(i,t,r):i.next().value,{spatialReference:l=new f({wkid:u?.defaultSpatialReference})}=n;if(null==u)throw t?new a(S,`The type '${t}' could not be found in the service`):new a(T,"The service is empty");let p=new m({...u.extent,spatialReference:f.WGS84});if(!o.equals(p.spatialReference,l))try{await s.initializeProjection(p.spatialReference,l,void 0,n),p=s.project(p,l)}catch{throw new a(P,"Projection not supported")}return{extent:p,spatialReference:l,featureType:u}}async function X(e,t,r,n={}){const{typeName:i}=t,[s,o]=await Promise.allSettled([W(e.operations.DescribeFeatureType.url,i,n),V(e,i,r,n)]),u=e=>new a(F,`An error occurred while getting info about the feature type '${i}'`,{error:e});if("rejected"===s.status)throw u(s.reason);if("rejected"===o.status)throw u(o.reason);const{fields:l,errors:p}=s.value??{},c=s.value?.geometryType||o.value?.geometryType,y=o.value?.swapXY??!1;if(null==c)throw new a(R,`The geometry type could not be determined for type '${i}`,{typeName:i,geometryType:c,fields:l,errors:p});return{...$(l??[]),geometryType:c,swapXY:y}}function $(e){const t=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new y({name:b,type:"oid",alias:b}),e.unshift(r)),{geometryField:t?.name??null,objectIdField:r.name,fields:e}}async function V(e,t,a,n={}){let i,s=!1;const[o,p]=await Promise.all([H(e.operations.GetFeature.url,t,a,e.operations.GetFeature.outputFormat,{...n,count:1}),r(e.operations.GetFeature.url,{responseType:"text",query:_(t,a,void 0,{...n,count:1}),signal:n?.signal})]),c="FeatureCollection"===o.type&&o.features[0]?.geometry;if(c){let e;switch(i=u.featureGeometryTypeKebabDictionary.fromJSON(l.getGeometryType(c.type)),c.type){case"Point":e=c.coordinates;break;case"LineString":case"MultiPoint":e=c.coordinates[0];break;case"MultiLineString":case"Polygon":e=c.coordinates[0][0];break;case"MultiPolygon":e=c.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(p.data);if(t){const r=e[0].toFixed(3),a=e[1].toFixed(3),n=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&a===n&&(s=!0)}}return{geometryType:i,swapXY:s}}async function W(e,t,a){return q(t,(await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:w,TYPENAME:t,...a?.customParameters},signal:a?.signal})).data)}function q(e,t){const{name:r}=K(e),i=J(t);Z(i);const s=n.find(p.iterateXML(i.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:K(e.getAttribute("type")).name})}),(({name:e})=>e===r));if(null!=s){const e=n.find(p.iterateXML(i.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===s.typeName));if(null!=e)return z(e)}throw new a(S,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(i)})}const Y=new Set(["objectid","fid"]);function z(e){const t=[],r=[];let n;const i=p.iterateXML(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const s of i){const i=s.getAttribute("name");if(!i)continue;let o,u;if(s.hasAttribute("type")?o=K(s.getAttribute("type")).name:p.visitXML(s,{simpleType:{restriction:e=>(o=K(e.getAttribute("base")).name,{maxLength:e=>{u=+e.getAttribute("value")}})}}),!o)continue;const l="true"===s.getAttribute("nillable");let c=!1;switch(o.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":r.push(new y({name:i,alias:i,type:"integer",nullable:l,length:d.getFieldDefaultLength("integer")}));break;case"float":case"double":case"decimal":r.push(new y({name:i,alias:i,type:"double",nullable:l,length:d.getFieldDefaultLength("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":r.push(new y({name:i,alias:i,type:"string",nullable:l,length:u??d.getFieldDefaultLength("string")}));break;case"datetime":case"date":r.push(new y({name:i,alias:i,type:"date",nullable:l,length:u??d.getFieldDefaultLength("date")}));break;case"pointpropertytype":n="point",c=!0;break;case"multipointpropertytype":n="multipoint",c=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":n="polyline",c=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":n="polygon",c=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":c=!0,t.push(new a(R,`geometry type '${o}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:t.push(new a(E,`Unknown field type '${o}'`,{type:(new XMLSerializer).serializeToString(e)}))}c&&r.push(new y({name:i,alias:i,type:"geometry",nullable:l}))}for(const a of r)if("integer"===a.type&&!a.nullable&&Y.has(a.name.toLowerCase())){a.type="oid";break}return{geometryType:n,fields:r,errors:t}}async function H(e,t,n,i,s){let{data:o}=await r(e,{responseType:"text",query:_(t,n,i,s),signal:s?.signal});o=o.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(o)}catch(u){throw new a(C,"Error while parsing the response",{response:o,error:u})}}function _(e,t,r,a){const n="number"==typeof t?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:e,OUTPUTFORMAT:r,SRSNAME:"EPSG:"+n,STARTINDEX:a?.startIndex,COUNT:a?.count,...a?.customParameters}}async function Q(e,t,a){const n=J((await r(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:t,RESULTTYPE:"hits",...a?.customParameters},signal:a?.signal})).data);Z(n);const i=Number.parseFloat(n.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(i)?0:i}function J(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function K(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:r??t}}function B(e){const t=e.firstElementChild?.getAttribute("version");if(t&&t!==w)throw new a(k,`Unsupported WFS version ${t}. Supported version: ${w}`)}function Z(e){let t="",r="";if(p.visitXML(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{r=e.textContent}})}),t)throw new a(`wfs-layer:${t}`,r)}function ee(e,t,r){const a={wkid:t.defaultSpatialReference},n=null!=r?.wkid?{wkid:r.wkid}:a;return{spatialReference:n,getFeatureSpatialReference:c.isArcGISUrl(e)||n.wkid&&t.supportedSpatialReferences.includes(n.wkid)?{wkid:n.wkid}:{wkid:t.defaultSpatialReference}}}e.describeFeatureType=W,e.findFeatureType=j,e.getCapabilities=G,e.getFeature=H,e.getFeatureCount=Q,e.getFeatureTypeInfo=O,e.getGetFeatureSpatialReference=ee,e.getWFSLayerInfo=I,e.parseDescribeFeatureTypeResponse=q,e.parseGetCapabilitiesResponse=N,e.prepareWFSLayerFields=$,e.wfsOidFieldName=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
