/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../core/Accessor","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../chunks/mat3f64","../../chunks/vec3f64","../../chunks/mat3","../../chunks/vec3","../../geometry/Point","../../geometry/SpatialReference","../../geometry/spatialReferenceEllipsoidUtils","../../geometry/projection/projectBuffer","../../geometry/support/Ellipsoid","./videoUtils"],(function(t,e,a,o,r,i,s,n,l,d,h,c,u,p,g,m,_){"use strict";const f=Math.PI/180;let y=class extends e{constructor(t){super(),this.averageElevation=0,this.imageHeight=0,this.imageWidth=0,this.metadataSupportsTransforms=!1,this.platformHeadingAngle=0,this.platformPitchAngle=0,this.platformRollAngle=0,this.sensorHeadingAngle=0,this.sensorAltitude=0,this.sensorHorizontalFieldOfView=0,this.sensorLatitude=0,this.sensorLongitude=0,this.sensorPitchAngle=0,this.sensorRollAngle=0,this.sensorVerticalFieldOfView=0,this.vttMetadata=new Map,this._createMat3FromValues=t=>{const e=t[0],a=t[1],o=t[2];return n.fromValues(e[0],a[0],o[0],e[1],a[1],o[1],e[2],a[2],o[2])},this._multiplyMat3=(t,e)=>{const a=n.create();return d.multiply(a,t,e),a},this._transposeMat3=t=>{const e=n.create();return d.transpose(e,t),e},this._calculateCameraFovForward=()=>this._createMat3FromValues([[0,0,1],[Math.tan(.5*this.sensorHorizontalFieldOfView*f),0,0],[0,Math.tan(.5*this.sensorVerticalFieldOfView*f),0]]),this._calculateCameraFovReverse=()=>this._createMat3FromValues([[0,1/Math.tan(.5*this.sensorHorizontalFieldOfView*f),0],[0,0,1/Math.tan(.5*this.sensorVerticalFieldOfView*f)],[1,0,0]]),this._calculateCameraLook=()=>this._getRotationMatrixZYX(this.sensorHeadingAngle*f,this.sensorPitchAngle*f,this.sensorRollAngle*f),this._calculateImageDimensionsForward=()=>this._createMat3FromValues([[2/this.imageWidth,0,-1],[0,-2/this.imageHeight,-1],[0,0,1]]),this._calculateImageDimensionsReverse=()=>this._createMat3FromValues([[this.imageWidth/2,0,this.imageWidth/2],[0,-this.imageHeight/2,-this.imageHeight/2],[0,0,1]]),this._calculatePlatformPositionMatrix=()=>{const t=Math.sin(this.sensorLatitude*f),e=Math.cos(this.sensorLatitude*f),a=Math.sin(this.sensorLongitude*f),o=Math.cos(this.sensorLongitude*f);return this._createMat3FromValues([[-t*o,-a,-e*o],[-t*a,o,-e*a],[e,0,-t]])},this._calculatePlatformOrientation=()=>this._getRotationMatrixZYX(this.platformHeadingAngle*f,this.platformPitchAngle*f,this.platformRollAngle*f),this._extractValues=t=>{this.imageWidth=t.get(_.VideoMetadataEntryId.EsriVideoWidth)?.value,this.imageHeight=t.get(_.VideoMetadataEntryId.EsriVideoHeight)?.value;const e=t.get(_.VideoMetadataEntryId.SensorEllipsoidHeight)?.value;this.sensorAltitude=e??t.get(_.VideoMetadataEntryId.SensorTrueAltitude)?.value,this.sensorLatitude=t.get(_.VideoMetadataEntryId.SensorLatitude)?.value,this.sensorLongitude=t.get(_.VideoMetadataEntryId.SensorLongitude)?.value,this.sensorHeadingAngle=t.get(_.VideoMetadataEntryId.SensorAzimuthAngle)?.value,this.sensorPitchAngle=t.get(_.VideoMetadataEntryId.SensorElevationAngle)?.value,this.sensorRollAngle=t.get(_.VideoMetadataEntryId.SensorRollAngle)?.value,this.sensorHorizontalFieldOfView=t.get(_.VideoMetadataEntryId.SensorHorizontalFOV)?.value,this.sensorVerticalFieldOfView=t.get(_.VideoMetadataEntryId.SensorVerticalFOV)?.value,this.platformHeadingAngle=t.get(_.VideoMetadataEntryId.PlatformHeadingAngle)?.value,this.platformPitchAngle=t.get(_.VideoMetadataEntryId.PlatformPitchAngle)?.value,this.platformRollAngle=t.get(_.VideoMetadataEntryId.PlatformRollAngle)?.value,this.averageElevation=t.get(_.VideoMetadataEntryId.FrameCenterElevation)?.value||0},this._getRotationMatrixZYX=(t,e,a)=>{const o=Math.cos(t),r=Math.sin(t),i=Math.cos(e),s=Math.sin(e),n=Math.cos(a),l=Math.sin(a);return this._createMat3FromValues([[o*i,o*s*l-n*r,r*l+o*n*s],[i*r,o*n+r*s*l,n*r*s-o*l],[-s,i*l,i*n]])},this._initCameraSensor=()=>{const t=this._calculateCameraFovForward(),e=this._calculateCameraFovReverse(),a=this._calculateCameraLook(),o=this._calculateImageDimensionsForward(),r=this._calculateImageDimensionsReverse(),i=this._calculatePlatformPositionMatrix(),s=this._calculatePlatformOrientation(),n=this._multiplyMat3(this._multiplyMat3(i,s),a);this._imageToEarthTransform=this._multiplyMat3(this._multiplyMat3(n,t),o);const l=this._multiplyMat3(r,e);this._earthToImageTransform=this._multiplyMat3(l,this._transposeMat3(n)),this._platformPositionEcef=this._projectPointToECEF(this.sensorLongitude,this.sensorLatitude,this.sensorAltitude||this.averageElevation)},this._metadataSupportsTransforms=t=>{if(!t?.size)return!1;const e=t.get(_.VideoMetadataEntryId.EsriVideoWidth)?.value??0,a=t.get(_.VideoMetadataEntryId.EsriVideoHeight)?.value??0;if(e<=0||a<=0)return!1;const o=t.get(_.VideoMetadataEntryId.SensorEllipsoidHeight)?.value,r=t.get(_.VideoMetadataEntryId.SensorTrueAltitude)?.value,i=t.get(_.VideoMetadataEntryId.SensorLatitude)?.value,s=t.get(_.VideoMetadataEntryId.SensorLongitude)?.value;if(null==o&&null==r||null==i||null==s)return!1;const n=t.get(_.VideoMetadataEntryId.PlatformHeadingAngle)?.value,l=t.get(_.VideoMetadataEntryId.PlatformPitchAngle)?.value,d=t.get(_.VideoMetadataEntryId.PlatformRollAngle)?.value;if(null==n||null==l||null==d)return!1;const h=t.get(_.VideoMetadataEntryId.SensorHorizontalFOV)?.value,c=t.get(_.VideoMetadataEntryId.SensorVerticalFOV)?.value;if(null==h||null==c)return!1;const u=t.get(_.VideoMetadataEntryId.SensorAzimuthAngle)?.value,p=t.get(_.VideoMetadataEntryId.SensorElevationAngle)?.value,g=t.get(_.VideoMetadataEntryId.SensorRollAngle)?.value;return null!=u&&null!=p&&null!=g},this._projectPointToECEF=(t,e,a)=>{const o=[];return g.projectBuffer([t,e,a],u.WGS84,0,o,p.WGS84ECEFSpatialReference,0,1),new c({x:o[0],y:o[1],z:o[2],spatialReference:p.WGS84ECEFSpatialReference})},this._projectImageVectorToEllipsoid=(t,e)=>{const a=m.earth.semiMajorAxis+e,o=m.earth.semiMinorAxis+e,r=o/a,i=a/o,{x:s,y:n,z:d}=this._platformPositionEcef,c=d??this.averageElevation,u=l.fromValues(s,n,i*c),p=h.dot(t,t),g=h.dot(t,u),_=h.dot(u,u)-a*a,f=(-g-Math.sqrt(g*g-p*_))/p;if(f<0)return[NaN,NaN,NaN];const y=l.create();return h.scaleAndAdd(y,u,t,f),y[2]=y[2]*r,y};const e=t?.videoMetadata;this._set("metadataSupportsTransforms",this._metadataSupportsTransforms(e)),this.metadataSupportsTransforms&&(this._extractValues(e),this._initCameraSensor())}transformGeoToImage(t,e,a){const o=this._platformPositionEcef;if(!o)return[0,0];const{x:r,y:i,z:s}=o,n=l.fromValues(r,i,s),d=this._projectPointToECEF(t,e,a||this.averageElevation),c=l.create(),u=l.fromValues(d.x,d.y,d.z);h.subtract(c,u,n),h.transformMat3(c,c,this._earthToImageTransform);const p=c[0],g=c[1],m=c[2];let _=l.fromValues(NaN,NaN,NaN);return isNaN(m)||(_=l.fromValues(p/m,g/m,m/m)),[_[0],_[1]]}transformImageToGeo(t,e){const a=l.fromValues(t,e,1),o=l.create();h.transformMat3(o,a,this._imageToEarthTransform);const r=this._projectImageVectorToEllipsoid(o,this.averageElevation);let i;if(!isNaN(r[0])){const t=[];g.projectBuffer([r[0],r[1],r[2]],p.WGS84ECEFSpatialReference,0,t,u.WGS84,0,1),i=new c({x:t[0],y:t[1],z:t[2],spatialReference:u.WGS84})}return i}};t.__decorate([a.property()],y.prototype,"averageElevation",void 0),t.__decorate([a.property()],y.prototype,"imageHeight",void 0),t.__decorate([a.property()],y.prototype,"imageWidth",void 0),t.__decorate([a.property({readOnly:!0})],y.prototype,"metadataSupportsTransforms",void 0),t.__decorate([a.property()],y.prototype,"platformHeadingAngle",void 0),t.__decorate([a.property()],y.prototype,"platformPitchAngle",void 0),t.__decorate([a.property()],y.prototype,"platformRollAngle",void 0),t.__decorate([a.property()],y.prototype,"sensorHeadingAngle",void 0),t.__decorate([a.property()],y.prototype,"sensorAltitude",void 0),t.__decorate([a.property()],y.prototype,"sensorHorizontalFieldOfView",void 0),t.__decorate([a.property()],y.prototype,"sensorLatitude",void 0),t.__decorate([a.property()],y.prototype,"sensorLongitude",void 0),t.__decorate([a.property()],y.prototype,"sensorPitchAngle",void 0),t.__decorate([a.property()],y.prototype,"sensorRollAngle",void 0),t.__decorate([a.property()],y.prototype,"sensorVerticalFieldOfView",void 0),t.__decorate([a.property()],y.prototype,"vttMetadata",void 0),y=t.__decorate([s.subclass("esri.layers.video.VideoCameraSensorModel")],y);return y}));
