/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../core/Error","../core/Logger","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/persistable","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./support/commonProperties","./support/I3SLayerDefinitions","./support/SceneModifications","../support/elevationInfoUtils","../chunks/persistableUrlUtils"],(function(e,t,r,i,o,s,a,n,p,d,c,y,l,h,u,v,f,g,m,S,_,I,w,L,T){"use strict";let x=class extends(S.SceneService(v.ArcGISService(f.OperationalLayer(g.PortalLayer(m.ScaleRangeLayer(i.MultiOriginJSONMixin(u.APIKeyMixin(h)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(s.on((()=>this.modifications),"after-changes",(()=>this.modifications=this.modifications),s.sync))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readModifications(e,t,r){this._modificationsSource={url:T.fromJSON(e,r),context:r}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){o.throwIfAbortError(r)}if(await this._fetchService(t),null!=this._modificationsSource){const t=await w.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",t,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(null!=this._modificationsSource)return this.load().then((()=>{}),(()=>{}))}async saveAs(e,t){return this._debouncedSaveOperations(S.SaveOperationType.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(S.SaveOperationType.SAVE,e)}validateLayer(e){if(e.layerType&&"IntegratedMesh"!==e.layerType)throw new t("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new t("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new t("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";L.logInvalidElevationInfoWarning(r.getLogger(this),L.elevationModeRequiredMessage(t,"absolute-height",e)),L.logInvalidElevationInfoWarning(r.getLogger(this),L.featureExpressionUnsupportedMessage(t,e))}};e.__decorate([a.property({type:String,readOnly:!0})],x.prototype,"geometryType",void 0),e.__decorate([a.property({type:["show","hide"]})],x.prototype,"listMode",void 0),e.__decorate([a.property({type:["IntegratedMeshLayer"]})],x.prototype,"operationalLayerType",void 0),e.__decorate([a.property({json:{read:!1},readOnly:!0})],x.prototype,"type",void 0),e.__decorate([a.property({type:I.I3SNodePageDefinition,readOnly:!0})],x.prototype,"nodePages",void 0),e.__decorate([a.property({type:[I.I3SMaterialDefinition],readOnly:!0})],x.prototype,"materialDefinitions",void 0),e.__decorate([a.property({type:[I.I3STextureSetDefinition],readOnly:!0})],x.prototype,"textureSetDefinitions",void 0),e.__decorate([a.property({type:[I.I3SGeometryDefinition],readOnly:!0})],x.prototype,"geometryDefinitions",void 0),e.__decorate([a.property({readOnly:!0})],x.prototype,"serviceUpdateTimeStamp",void 0),e.__decorate([a.property({type:w}),l.persistable({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],x.prototype,"modifications",void 0),e.__decorate([c.reader(["web-scene","portal-item"],"modifications")],x.prototype,"readModifications",null),e.__decorate([a.property(_.elevationInfo)],x.prototype,"elevationInfo",null),e.__decorate([a.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],x.prototype,"path",void 0),x=e.__decorate([y.subclass("esri.layers.IntegratedMeshLayer")],x);return x}));
