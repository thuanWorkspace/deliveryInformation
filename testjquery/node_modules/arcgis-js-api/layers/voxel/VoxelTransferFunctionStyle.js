/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../Color","../../core/Clonable","../../core/Collection","../../core/collectionUtils","../../core/JSONSupport","../../core/mathUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","./VoxelColorStop","./VoxelOpacityStop","./VoxelRangeFilter"],(function(o,t,e,r,s,i,p,n,l,c,a,h,u,y,f){"use strict";var S;!function(o){o[o.Color=1]="Color",o[o.Alpha=2]="Alpha",o[o.Both=3]="Both"}(S||(S={}));let d=class extends(e.ClonableMixin(i.JSONSupport)){constructor(o){super(o),this.interpolation=null,this.stretchRange=null,this.rangeFilter=null,this._colorMapSize=256,this.colorStops=new(r.ofType(u)),this.opacityStops=new(r.ofType(y))}set colorStops(o){this._set("colorStops",s.referenceSetter(o,this._get("colorStops"),r.ofType(u)))}set opacityStops(o){this._set("opacityStops",s.referenceSetter(o,this._get("opacityStops"),r.ofType(y)))}getPreviousNext(o,t,e){let r=o;for(;--r>0&&t[r].type!==e&&t[r].type!==S.Both;);let s=o;const i=t.length;for(;++s<i&&t[s].type!==e&&t[s].type!==S.Both;);return[r,s]}get rasterizedTransferFunction(){const o=[];if(this.colorStops.length<2)return o;const e=[],r=[],s=1e-5;for(const t of this.colorStops){if(!t.color)return o;r.push({color:{r:t.color.r,g:t.color.g,b:t.color.b,a:Math.round(255*(1-t.color.a))},position:t.position,type:S.Color})}if(0===this.opacityStops.length)for(const t of r)e.push({color:t.color,position:t.position});else{for(const t of this.opacityStops){const o=p.clamp(t.position,0,1),e=Math.round(255*p.clamp(1-t.opacity,0,1));let i=!1;for(const t of r)if(t.type===S.Color&&Math.abs(t.position-o)<s){t.color.a=e,t.type=S.Both,i=!0;break}i||r.push({color:{r:0,g:0,b:0,a:e},position:t.position,type:S.Alpha})}r.sort(((o,t)=>o.position<t.position?-1:1));const o=r.length;for(let t=0;t<o;++t){const e=r[t];if(e.type!==S.Both)if(e.type===S.Color){const[s,i]=this.getPreviousNext(t,r,S.Alpha);if(-1!==s&&i!==o){const o=(e.position-r[s].position)/(r[i].position-r[s].position);e.color.a=Math.round(p.lerp(r[s].color.a,r[i].color.a,o))}else e.color.a=-1!==s?r[s].color.a:r[i].color.a}else{const[s,i]=this.getPreviousNext(t,r,S.Color);if(-1!==s&&i!==o){const o=(e.position-r[s].position)/(r[i].position-r[s].position),t=r[s].color,n=r[i].color;g.forEach((r=>{e.color[r]=Math.round(p.lerp(t[r],n[r],o))}))}else-1!==s?g.forEach((o=>{e.color[o]=r[s].color[o]})):g.forEach((o=>{e.color[o]=r[i].color[o]}))}}for(const t of r)e.push({color:t.color,position:t.position})}e[0].position=0,e[e.length-1].position=1;let i=0,n=1;for(let l=0;l<this._colorMapSize;++l){const r=l/this._colorMapSize;for(;r>e[n].position;)i=n++;const s=(r-e[i].position)/(e[n].position-e[i].position),c=e[i].color,a=e[n].color,h=new t;g.forEach((o=>{h[o]=Math.round(p.lerp(c[o],a[o],s))})),h.a=p.clamp(1-p.lerp(c.a,a.a,s)/255,0,1),o.push(h)}return o}getColorForContinuousDataValue(o,t){const e=this.rasterizedTransferFunction;if(this.colorStops.length<2||!Array.isArray(this.stretchRange)||this.stretchRange.length<2||e.length<256)return null;let r=this.stretchRange[0],s=this.stretchRange[1];if(r>s){const o=r;r=s,s=o}o=p.clamp(o,r,s);const i=e[Math.round((o-r)/(s-r)*(this._colorMapSize-1))].clone();return t||(i.a=1),i}};o.__decorate([n.property({type:["linear","nearest"],json:{write:!0}})],d.prototype,"interpolation",void 0),o.__decorate([n.property({type:[Number],json:{write:{enabled:!0,isRequired:!0}}})],d.prototype,"stretchRange",void 0),o.__decorate([n.property({type:r.ofType(u),json:{write:{enabled:!0,overridePolicy(){return{enabled:!!this.colorStops&&this.colorStops.length>0}}}}})],d.prototype,"colorStops",null),o.__decorate([n.property({type:r.ofType(y),json:{read:{source:"alphaStops"},write:{enabled:!0,target:"alphaStops",overridePolicy(){return{enabled:!!this.opacityStops&&this.opacityStops.length>0}}}}})],d.prototype,"opacityStops",null),o.__decorate([n.property({type:f,json:{write:!0}})],d.prototype,"rangeFilter",void 0),o.__decorate([n.property({type:[t],clonable:!1,json:{read:!1}})],d.prototype,"rasterizedTransferFunction",null),d=o.__decorate([h.subclass("esri.layers.voxel.VoxelTransferFunctionStyle")],d);const g=["r","g","b"];return d}));
