/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../config","../geometry","../Graphic","../PopupTemplate","../renderers/ClassBreaksRenderer","../renderers/DictionaryRenderer","../renderers/DotDensityRenderer","../renderers/HeatmapRenderer","../renderers/PieChartRenderer","../renderers/Renderer","../renderers/SimpleRenderer","../renderers/UniqueValueRenderer","../renderers/support/jsonUtils","../core/Logger","../core/Collection","../core/Error","../core/MultiOriginJSONSupport","../core/object","../core/promiseUtils","../core/reactiveUtils","../core/unitUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/originUtils","../geometry/Extent","../geometry/projection","../geometry/support/spatialReferenceUtils","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./support/arcgisLayerUrl","./support/RouteSymbols","../portal/Portal","../portal/PortalItem","../portal/support/portalItemUtils","../rest/networkService","../rest/route","../rest/support/DirectionLine","../rest/support/DirectionPoint","../rest/support/PointBarrier","../rest/support/PolygonBarrier","../rest/support/PolylineBarrier","../rest/support/RouteInfo","../rest/support/RouteParameters","../rest/support/RouteSettings","../rest/support/Stop","../geometry/SpatialReference","../geometry/Multipoint"],(function(e,t,r,o,i,s,n,a,l,u,p,c,y,d,m,f,h,S,w,g,_,b,v,B,P,N,I,R,L,D,C,O,F,T,x,k,A,G,J,U,M,j,q,W,E,V,z,K,H,Q,Y,Z,$,X,ee,te,re){"use strict";function oe(e){return e.length?e:null}function ie(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:ie("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:ie("esriGeometryPolyline")}}}function se(e){return"layers"in e}function ne(e){return"esri.rest.support.FeatureSet"===e.declaredClass}function ae(e){return"esri.rest.support.NetworkFeatureSet"===e.declaredClass}function le(e,t,r){const o=t.networkDataset?.networkAttributes,i=o?.filter((({usageType:e})=>"cost"===e))??[],s=r.travelMode??t.defaultTravelMode;if(null==s)return void _e.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:n,distanceAttributeName:a}=s,l=i.find((({name:e})=>e===n)),u=i.find((({name:e})=>e===a)),p=r.travelMode?.impedanceAttributeName??r.impedanceAttribute??t.impedance,c=l?.units,y=u?.units;if(!c||!y)throw new h("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const d=r.directionsLanguage??t.directionsLanguage,m=r.accumulateAttributes??t.accumulateAttributeNames??[],f=new Set(i.filter((({name:e})=>e===n||e===a||e===p||null!=e&&m.includes(e))).map((({name:e})=>e))),S=e=>{for(const t in e)f.has(t)||delete e[t]};for(const h of e.pointBarriers)null!=h.costs&&(h.addedCost=h.costs[p]??0,S(h.costs));for(const h of e.polygonBarriers)null!=h.costs&&(h.scaleFactor=h.costs[p]??1,S(h.costs));for(const h of e.polylineBarriers)null!=h.costs&&(h.scaleFactor=h.costs[p]??1,S(h.costs));const{routeInfo:w}=e,{findBestSequence:g,preserveFirstStop:_,preserveLastStop:b,startTimeIsUTC:v,timeWindowsAreUTC:B}=r;w.analysisSettings=new X({accumulateAttributes:m,directionsLanguage:d,findBestSequence:g,preserveFirstStop:_,preserveLastStop:b,startTimeIsUTC:v,timeWindowsAreUTC:B,travelMode:s}),w.totalDuration=pe(w.totalCosts?.[n]??0,c),w.totalDistance=ce(w.totalCosts?.[a]??0,y),w.totalLateDuration=pe(w.totalViolations?.[n]??0,c),w.totalWaitDuration=pe(w.totalWait?.[n]??0,c),null!=w.totalCosts&&S(w.totalCosts),null!=w.totalViolations&&S(w.totalViolations),null!=w.totalWait&&S(w.totalWait);for(const h of e.stops)null!=h.serviceCosts&&(h.serviceDuration=pe(h.serviceCosts[n]??0,c),h.serviceDistance=ce(h.serviceCosts[a]??0,y),S(h.serviceCosts)),null!=h.cumulativeCosts&&(h.cumulativeDuration=pe(h.cumulativeCosts[n]??0,c),h.cumulativeDistance=ce(h.cumulativeCosts[a]??0,y),S(h.cumulativeCosts)),null!=h.violations&&(h.lateDuration=pe(h.violations[n]??0,c),S(h.violations)),null!=h.wait&&(h.waitDuration=pe(h.wait[n]??0,c),S(h.wait))}async function ue(e){const t=te.WGS84;return await F.initializeProjection(e.spatialReference,t),F.project(e,t)}function pe(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function ce(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:b.convertUnit(e,t,"meters")}function ye(e){const{attributes:t,geometry:r,popupTemplate:o,symbol:i}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:o,symbol:i}}const de=f.ofType(z),me=f.ofType(K),fe=f.ofType(H),he=f.ofType(Q),Se=f.ofType(Y),we=f.ofType(ee),ge="esri.layers.RouteLayer",_e=m.getLogger(ge);let be=class extends(k.BlendLayer(J.ScaleRangeLayer(A.OperationalLayer(G.PortalLayer(S.MultiOriginJSONMixin(x)))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new M,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new fe,this.polygonBarriers=new he,this.polylineBarriers=new Se,this.routeInfo=null,this.spatialReference=te.WGS84,this.stops=new we,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(_.on((()=>this.stops),"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,o){const i=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),s=i.map(((e,t)=>t)),n="web-map"===o.origin?"featureCollection.layers":"layers";w.setDeepValue(n,i,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=s}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>z.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>K.fromGraphic(e)))}get fullExtent(){const e=new O({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:te.WGS84});if(null!=this.routeInfo?.geometry)return this.routeInfo.geometry.extent??e;if(null==this.stops)return e;const t=this.stops.filter((e=>null!=e.geometry));if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(null==r)return e;const o=t.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new re({points:o,spatialReference:r}).extent}readMaxScale(e,t){const r=se(t)?t.layers:t.featureCollection?.layers,o=r?.find((e=>null!=e.layerDefinition.maxScale));return o?.layerDefinition.maxScale??0}readMinScale(e,t){const r=se(t)?t.layers:t.featureCollection?.layers,o=r?.find((e=>null!=e.layerDefinition.minScale));return o?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>H.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>Q.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>Y.fromGraphic(e)))}readRouteInfo(e,t){const r=this._getNetworkFeatures(t,"RouteInfo",(e=>Z.fromGraphic(e)));return r.length>0?r.at(0):null}readSpatialReference(e,t){const r=se(t)?t.layers:t.featureCollection?.layers;if(!r?.length)return te.WGS84;const{layerDefinition:o,featureSet:i}=r[0],s=i.features[0],n=s?.geometry?.spatialReference??i.spatialReference??o.spatialReference??o.extent.spatialReference??T.WGS84;return te.fromJSON(n)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>ee.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return null!=this.routeInfo?.name?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return t.routeServiceUrl}set url(e){null!=e?this._set("url",U.sanitizeUrl(e,_e)):this._set("url",t.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null)),null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),null!=this.routeInfo&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new h("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new h("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new h("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(null==this.routeInfo)throw new h("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:o,itemControl:i}=t;if("admin"!==i&&"update"!==i)throw new h("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const s={messages:[],origin:"portal-item",portal:r,url:o?v.urlToObject(o):void 0,writtenProperties:[]},n=this.write(void 0,s);return t.extent=await ue(e),t.title=this.title,await t.update({data:n}),t}async saveAs(e,t={}){if(await this.load(),null==this.routeInfo)throw new h("routelayer:route-unsolved","saveAs() requires a solved route");const r=q.from(e).clone();r.extent??(r.extent=await ue(this.fullExtent)),r.id=null,r.portal??(r.portal=j.getDefault()),r.title??(r.title=this.title),r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",W.TypeKeyword.MULTI_LAYER,"Route Layer"];const{portal:o}=r,i={messages:[],origin:"portal-item",portal:o,url:null,writtenProperties:[]};await o.signIn();const s=t?.folder,n=this.write(void 0,i);return await(o.user?.addItem({item:r,folder:s,data:n})),this.portalItem=r,C.updateOrigins(i),i.portalItem=r,r}async solve(e,t){const r=e?.stops??this.stops,o=e?.pointBarriers??oe(this.pointBarriers),i=e?.polylineBarriers??oe(this.polylineBarriers),s=e?.polygonBarriers??oe(this.polygonBarriers);if(null==r)throw new h("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((ne(r)||ae(r))&&r.features.length<2||f.isCollection(r)&&r.length<2)throw new h("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(f.isCollection(r))for(const f of r)f.routeName=null;const n=e?.apiKey,a=this.url,l=await this._getServiceDescription(a,n,t),u=e?.travelMode??l.defaultTravelMode,p=e?.accumulateAttributes??[];null!=u&&(p.push(u.distanceAttributeName),u.timeAttributeName&&p.push(u.timeAttributeName));const c={startTime:new Date},y={accumulateAttributes:p,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:o,polylineBarriers:i,polygonBarriers:s,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!o,returnDirections:!0,returnPolygonBarriers:!!s,returnPolylineBarriers:!!i,returnRoutes:!0,returnStops:!0,stops:r},d=e?$.from(e):new $;for(const f in c)null==d[f]&&(d[f]=c[f]);let m;d.set(y);try{m=await V.solve(a,d,t)}catch(w){throw g.isAbortError(w)?w:new h("routelayer:failed-route-request","the routing request failed",{error:w})}const S=this._toRouteLayerSolution(m);return this._isOverridden("title")||(this.title=S.routeInfo.name??"Route"),le(S,l,d),S}update(e){const{stops:t,directionLines:r,directionPoints:o,pointBarriers:i,polylineBarriers:s,polygonBarriers:n,routeInfo:a}=e;this.set({stops:t,pointBarriers:i,polylineBarriers:s,polygonBarriers:n}),this._set("directionLines",r),this._set("directionPoints",o),this._set("routeInfo",a),null!=a.geometry&&(this.spatialReference=a.geometry.spatialReference)}_getNetworkFeatures(e,t,r,s){const n=se(e)?e.layers:e.featureCollection?.layers,a=n?.find((e=>e.layerDefinition.name===t));if(null==a)return new f;const{layerDefinition:l,popupInfo:u,featureSet:p}=a,c=l.drawingInfo.renderer,{features:y}=p,m=p.spatialReference??l.spatialReference??l.extent.spatialReference??T.WGS84,h=c&&d.read(c),S=te.fromJSON(m),w=y.map((e=>{const s=o.fromJSON(e);null!=s.geometry&&null!=e.geometry&&null==e.geometry.spatialReference&&(s.geometry.spatialReference=S);const n=r(s);return n.symbol??(n.symbol=h?.getSymbol(s)??this._getNetworkSymbol(t)),n.popupTemplate??(n.popupTemplate=u&&i.fromJSON(u)),n}));return s&&w.some((e=>!e.symbol))&&s(w),new f(w)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const o=await E.fetchServiceDescription(e,t,r);return this._cachedServiceDescription={serviceDescription:o,url:e},o}_setStopSymbol(e){if(!e||0===e.length)return;if(null==this.defaultSymbols.stops)return;if(e.every((({symbol:e})=>null!=e)))return;const{first:t,last:r,middle:o,unlocated:i,waypoint:s,break:n}=this.defaultSymbols.stops;if(null==this.routeInfo||1===e.length)return void e.forEach(((i,s)=>{switch(s){case 0:i.symbol=t;break;case e.length-1:i.symbol=r;break;default:i.symbol=o}}));const a=e.map((({sequence:e})=>e)).filter((e=>null!=e)),l=Math.min(...a),u=Math.max(...a);for(const p of e)p.sequence!==l?p.sequence!==u?"ok"===p.status||"not-located-on-closest"===p.status?"waypoint"!==p.locationType?"break"!==p.locationType?p.symbol=o:p.symbol=n:p.symbol=s:p.symbol=i:p.symbol=r:p.symbol=t}_toRouteLayerSolution(e){const t=e.routeResults[0].stops?.map((e=>ee.fromJSON(e.toJSON())));this._setStopSymbol(t);const r=new we(t),o=new he(e.polygonBarriers?.map((e=>{const t=Q.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),i=new Se(e.polylineBarriers?.map((e=>{const t=Y.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),s=new fe(e.pointBarriers?.map((e=>{const t=H.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),n=e.routeResults[0].route?.toJSON(),a=Z.fromJSON(n);a.symbol=this.defaultSymbols.routeInfo;const l=new me(e.routeResults[0].directionPoints?.features.map((e=>{const t=K.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new de(e.routeResults[0].directionLines?.features.map((e=>{const t=z.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:l,pointBarriers:s,polygonBarriers:o,polylineBarriers:i,routeInfo:a,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",z.fields,z.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",K.fields,K.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,o,i,s,n){if(!e?.length)return null;const a=this.spatialReference.toJSON(),{fullExtent:l,maxScale:u,minScale:p}=this;return{featureSet:{features:e.toArray().map((e=>ye(e))),geometryType:r,spatialReference:a},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=t?t.toJSON():ie(r)}},extent:l.toJSON(),fields:o,geometryType:r,hasM:!1,hasZ:!1,maxScale:u,minScale:p,name:s,objectIdField:"ObjectID",spatialReference:a,title:n,type:"Feature Layer",typeIdField:""},popupInfo:i}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",H.fields,H.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",Q.fields,Q.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",Y.fields,Y.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(null!=this.routeInfo?new f([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Z.fields,Z.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",ee.fields,ee.popupInfo,"Stops","Stops");if(null==e)return null;const{stops:t}=this.defaultSymbols,r=t?.first?.toJSON(),o=t?.middle?.toJSON(),i=t?.last?.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:o,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:i,label:"Last Stop"}]},e}};e.__decorate([B.property({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],be.prototype,"_featureCollection",void 0),e.__decorate([D.writer(["web-map","portal-item"],"_featureCollection")],be.prototype,"writeFeatureCollectionWebmap",null),e.__decorate([B.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],be.prototype,"_type",void 0),e.__decorate([B.property({nonNullable:!0,type:M})],be.prototype,"defaultSymbols",void 0),e.__decorate([B.property({readOnly:!0})],be.prototype,"directionLines",void 0),e.__decorate([R.reader(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],be.prototype,"readDirectionLines",null),e.__decorate([B.property({readOnly:!0})],be.prototype,"directionPoints",void 0),e.__decorate([R.reader(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],be.prototype,"readDirectionPoints",null),e.__decorate([B.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],be.prototype,"featureCollectionType",void 0),e.__decorate([B.property({readOnly:!0})],be.prototype,"fullExtent",null),e.__decorate([B.property({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],be.prototype,"legendEnabled",void 0),e.__decorate([B.property({type:["show","hide"]})],be.prototype,"listMode",void 0),e.__decorate([B.property({type:Number,nonNullable:!0,json:{write:!1}})],be.prototype,"maxScale",void 0),e.__decorate([R.reader(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],be.prototype,"readMaxScale",null),e.__decorate([B.property({type:Number,nonNullable:!0,json:{write:!1}})],be.prototype,"minScale",void 0),e.__decorate([R.reader(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],be.prototype,"readMinScale",null),e.__decorate([B.property({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],be.prototype,"operationalLayerType",void 0),e.__decorate([B.property({nonNullable:!0,type:f.ofType(H)})],be.prototype,"pointBarriers",void 0),e.__decorate([R.reader(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],be.prototype,"readPointBarriers",null),e.__decorate([B.property({nonNullable:!0,type:f.ofType(Q)})],be.prototype,"polygonBarriers",void 0),e.__decorate([R.reader(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],be.prototype,"readPolygonBarriers",null),e.__decorate([B.property({nonNullable:!0,type:f.ofType(Y)})],be.prototype,"polylineBarriers",void 0),e.__decorate([R.reader(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],be.prototype,"readPolylineBarriers",null),e.__decorate([B.property({readOnly:!0})],be.prototype,"routeInfo",void 0),e.__decorate([R.reader(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],be.prototype,"readRouteInfo",null),e.__decorate([B.property({type:te})],be.prototype,"spatialReference",void 0),e.__decorate([R.reader(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],be.prototype,"readSpatialReference",null),e.__decorate([B.property({nonNullable:!0,type:f.ofType(ee)})],be.prototype,"stops",void 0),e.__decorate([R.reader(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],be.prototype,"readStops",null),e.__decorate([B.property()],be.prototype,"title",null),e.__decorate([B.property({readOnly:!0,json:{read:!1}})],be.prototype,"type",void 0),e.__decorate([B.property()],be.prototype,"url",null),be=e.__decorate([L.subclass(ge)],be);return be}));
