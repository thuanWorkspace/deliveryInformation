/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../geometry","../../../chunks/vec3f64","../../../chunks/vec3","../../../geometry/Circle","../../../geometry/Mesh","../../../geometry/support/Ellipsoid","../../../geometry/support/MeshVertexAttributes","../../../geometry/support/spatialReferenceUtils","../transformations/utils","../../../geometry/Polygon","../../../geometry/SpatialReference"],(function(e,t,a,r,s,c,n,o,i,l,h,d){"use strict";const f=Math.PI/180;function u(e){const{attributes:t}=e,{horizontalFieldOfView:o,geometry:d,verticalFieldOfView:u}=t;let y,g=1,x=null;if(d&&i.isWebMercator(d?.spatialReference)&&(g=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*d.y/n.earth.radius)))),t.isSpherical){if(y=new s({center:d,radius:t.farDistance*g}),t.nearDistance){const e=new s({center:d,radius:t.nearDistance*g});y.addRing(e.rings[0])}const e=y.center;e&&(e.z=t.cameraHeight,x=c.createSphere(e,{size:2*t.farDistance}),x.centerAt(e))}else{let s=t.cameraPitch,c=t.cameraRoll,n=150;const i=[];o>150&&(s=90,c=0,n=5);const p=Math.ceil(o/n);if(p%2==0)for(let e=0;e<p/2;e++)i.push(t.cameraHeading-o/p*(e+.5),t.cameraHeading+o/p*(e+.5));else{i.push(t.cameraHeading);for(let e=1;e<p/2;e++)i.push(t.cameraHeading-o/p*e,t.cameraHeading+o/p*e)}i.sort();let z=t.farDistance?t.farDistance*g:t.cameraHeight*g/Math.cos(s*f);t.cameraPitch+u/2>=90&&(z=(t.farDistance||20)*g),y=new h({spatialReference:d?.spatialReference});for(const h of i){const n=l.calculateRotationMatrix("HPR",[h,s,c]);x=m(e,n);const i=l.transformMat3([0,0,-1],n),{x:F,y:W}=d,b=l.scaleAndAddWithFactor([F,W,t.cameraHeight],i,z,g),R=2*Math.tan(u*f/2)*z,P=2*Math.tan(o/p*f/2)*z,H=l.transformMat3([0,1,0],n),w=l.transformMat3([1,0,0],n),A=l.scaleWithFactor(H,R/2,g),D=l.scaleWithFactor(w,P/2,g),v=r.sub(a.zeros(),A,D),O=r.add(a.zeros(),A,D),V=[r.add(a.zeros(),b,v),r.add(a.zeros(),b,O),r.sub(a.zeros(),b,v),r.sub(a.zeros(),b,O)].map((e=>M(e,t.cameraHeight,d,g)));V.push(V[0]),y.addRing(V)}}return{polygon:y,frustum:x}}function y(e,t){return e.contains(t)}function g(e,t){return Math.sign(e)!==Math.sign(t)}function m(e,t,s){const n=e.attributes,i=n.geometry,h=i.spatialReference??e.spatialReference;i.spatialReference=h instanceof d?h:d.fromJSON(h);const u=p(i),y=n.nearDistance<0?0:n.nearDistance*u;let g=n.cameraHeight*u/Math.cos(n.cameraPitch*f),m=!0;n.cameraPitch+n.verticalFieldOfView/2>=90&&(g=(n.farDistance??20)*u,m=!1);const M=2*Math.tan(n.verticalFieldOfView*f/2)*y,x=2*Math.tan(n.horizontalFieldOfView*f/2)*y,z=2*Math.tan(n.verticalFieldOfView*f/2)*g,F=2*Math.tan(n.horizontalFieldOfView*f/2)*g;let W,b;s?(W=s,b=l.scaleWithFactor(r.sub(a.zeros(),W,[i.x,i.y,n.cameraHeight]),1/g,1/u)):(b=[0,0,-1],b=l.transformMat3(b,t),W=l.scaleAndAddWithFactor([i.x,i.y,n.cameraHeight],b,g,u),m&&(W[2]=0));const R=l.scaleAndAddWithFactor([i.x,i.y,n.cameraHeight],b,y,u);let P=[0,1,0];P=l.transformMat3(P,t);let H=[1,0,0];H=l.transformMat3(H,t);let w=[],A=[];y?(A=[{faces:[4,0,3,4,7,3]},{faces:[5,1,2,5,6,2]},{faces:[4,0,1,4,5,1]},{faces:[6,2,3,6,7,3]}],w=w.concat(r.add(a.zeros(),R,r.sub(a.zeros(),l.scaleWithFactor(P,M/2,u),l.scaleWithFactor(H,x/2,u)))),w=w.concat(r.add(a.zeros(),R,r.add(a.zeros(),l.scaleWithFactor(P,M/2,u),l.scaleWithFactor(H,x/2,u)))),w=w.concat(r.sub(a.zeros(),R,r.sub(a.zeros(),l.scaleWithFactor(P,M/2,u),l.scaleWithFactor(H,x/2,u)))),w=w.concat(r.sub(a.zeros(),R,r.add(a.zeros(),l.scaleWithFactor(P,M/2,u),l.scaleWithFactor(H,x/2,u))))):(w=[i.x,i.y,n.cameraHeight],A=[{faces:[0,1,2,0,2,3,0,3,4,0,4,1]}]),w=w.concat(r.add(a.zeros(),W,r.sub(a.zeros(),l.scaleWithFactor(P,z/2,u),l.scaleWithFactor(H,F/2,u)))),w=w.concat(r.add(a.zeros(),W,r.add(a.zeros(),l.scaleWithFactor(P,z/2,u),l.scaleWithFactor(H,F/2,u)))),w=w.concat(r.sub(a.zeros(),W,r.sub(a.zeros(),l.scaleWithFactor(P,z/2,u),l.scaleWithFactor(H,F/2,u)))),w=w.concat(r.sub(a.zeros(),W,r.add(a.zeros(),l.scaleWithFactor(P,z/2,u),l.scaleWithFactor(H,F/2,u))));const D=new o.MeshVertexAttributes({position:Float64Array.from(w)});return new c({vertexAttributes:D,components:A,spatialReference:i.spatialReference})}function M(e,t,s,c){{const n=Math.sqrt((e[2]-t)**2+(Math.sqrt((e[0]-s.x)**2+(e[1]-s.y)**2)/c)**2)*c,o=l.scaleWithFactor(r.sub(a.zeros(),[e[0],e[1],e[2]],[s.x,s.y,t]),1/n,1/c),i=t/(t-e[2]),h={x:(1-i)*s.x+i*e[0],y:(1-i)*s.y+i*e[1],z:(1-i)*t+i*e[2]},d=Math.sqrt((h.z-t)**2+(Math.sqrt((h.x-s.x)**2+(h.y-s.y)**2)/c)**2)*c,f=l.scaleWithFactor(r.sub(a.zeros(),[h.x,h.y,h.z],[s.x,s.y,t]),1/d,1/c);return g(o[0],f[0])&&g(o[1],f[1])&&g(o[2],f[2])||e[2]>=0?[e[0],e[1],0]:[h.x,h.y,h.z]}}function x(e){const{spatialReference:t,x:a,y:r}=e.geometry,{cameraHeading:s,cameraPitch:c,farDistance:n,nearDistance:o}=e,i=p(e.geometry),l=new h({spatialReference:t}),d=Math.abs(1.44*n*i);let u=Math.abs(1.44*o*i);(c<20||null==s)&&(u=d);const y=[];return y[0]={x:a+d*Math.sin((s-45)*f),y:r+d*Math.cos((s-45)*f)},y[1]={x:a+d*Math.sin((s+45)*f),y:r+d*Math.cos((s+45)*f)},y[2]={x:a+u*Math.sin((s+135)*f),y:r+u*Math.cos((s+135)*f)},y[3]={x:a+u*Math.sin((s+225)*f),y:r+u*Math.cos((s+225)*f)},l.addRing([[y[0].x,y[0].y,0],[y[1].x,y[1].y,0],[y[2].x,y[2].y,0],[y[3].x,y[3].y,0],[y[0].x,y[0].y,0]]),l}function p(e){return e&&i.isWebMercator(e?.spatialReference)?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e.y/n.earth.radius))):1}function z(e,t){const c=1+t/100;if("esri.geometry.Circle"===e.declaredClass){const{radius:t,center:a}=e,r=new s({radius:t*c,center:a});return e.rings.length>1&&r.addRing(e.rings[1]),r}if("esri.geometry.Polygon"===e.declaredClass){const t=new h({spatialReference:e.spatialReference}),s=e.centroid;if(s){const n=[];for(let t=0;t<e.rings[0].length;t++){const o=Math.sqrt((s.x-e.rings[0][t][0])**2+(s.y-e.rings[0][t][1])**2),i=l.scaleWithFactor(r.sub(a.zeros(),[e.rings[0][t][0],e.rings[0][t][1],0],[s.x,s.y,0]),1/o,1),h=l.scaleAndAddWithFactor([s.x,s.y,0],i,o*c,1);n.push({x:h[0],y:h[1]})}t.addRing([[n[0].x,n[0].y,0],[n[1].x,n[1].y,0],[n[2].x,n[2].y,0],[n[3].x,n[3].y,0],[n[0].x,n[0].y,0]])}return t}return e}e.checkIfPolygonContainsSelectedPoint=y,e.computePolygonForInspection=x,e.createCoveragePolygon=u,e.resizePolygon=z,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
