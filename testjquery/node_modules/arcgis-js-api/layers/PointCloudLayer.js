/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../chunks/tslib.es6","../PopupTemplate","../request","../core/Error","../core/lang","../core/Logger","../core/MultiOriginJSONSupport","../core/object","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./pointCloudFilters/typeUtils","./support/commonProperties","./support/Field","./support/fieldProperties","../popup/ExpressionInfo","../renderers/support/pointCloud/typeUtils","../support/elevationInfoUtils","../support/popupUtils"],(function(e,r,t,o,i,n,s,a,p,l,d,c,u,y,f,g,h,v,m,_,I,S,w,b,T,x,P,F,L,E){"use strict";const A=x.defineFieldProperties();let O=class extends(S.SceneService(v.ArcGISService(m.OperationalLayer(_.PortalLayer(I.ScaleRangeLayer(s.MultiOriginJSONMixin(h.APIKeyMixin(g)))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.fieldsIndex=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}getFieldDomain(e){const r=this.fieldsIndex.get(e);return r?.domain?r.domain:null}readServiceFields(e,r,t){return Array.isArray(e)?e.map((e=>{const r=new T;return"FieldTypeInteger"===e.type&&((e=i.clone(e)).type="esriFieldTypeInteger"),r.read(e,t),r})):Array.isArray(r.attributeStorageInfo)?r.attributeStorageInfo.map((e=>new T({name:e.name,type:"ELEVATION"===e.name?"double":"integer"}))):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,r,t,o){a.setDeepValue("layerDefinition.drawingInfo.renderer",e.write({},o),r)}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(p.throwIfAbortError).then((()=>this._fetchService(r)));return this.addResolvingPromise(t),Promise.resolve(this)}createPopupTemplate(e){const r=E.createPopupTemplate(this,e);return r&&(this._formatPopupTemplateReturnsField(r),this._formatPopupTemplateRGBField(r)),r}_formatPopupTemplateReturnsField(e){const r=this.fieldsIndex.get("RETURNS");if(!r)return;const t=e.fieldInfos?.find((e=>e.fieldName===r.name));if(!t)return;const o=new P({name:"pcl-returns-decoded",title:r.alias||r.name,expression:`\n        var returnValue = $feature.${r.name};\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      `});e.expressionInfos=[...e.expressionInfos||[],o],t.fieldName="expression/pcl-returns-decoded"}_formatPopupTemplateRGBField(e){const r=this.fieldsIndex.get("RGB");if(!r)return;const t=e.fieldInfos?.find((e=>e.fieldName===r.name));if(!t)return;const o=new P({name:"pcl-rgb-decoded",title:r.alias||r.name,expression:`\n        var rgb = $feature.${r.name};\n        var red = Floor(rgb / 65536, 0);\n        var green = Floor((rgb - (red * 65536)) / 256,0);\n        var blue = rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      `});e.expressionInfos=[...e.expressionInfos||[],o],t.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,r){if(await this.load(r),!this.attributeStorageInfo)throw new o("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const i=this.fieldsIndex.get(e);if(!i)throw new o("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.attributeStorageInfo)if(o.name===i.name){const e=l.join(this.parsedUrl.path,`./statistics/${o.key}`);return t(e,{query:{f:"json",token:this.apiKey},responseType:"json",signal:r?r.signal:null}).then((e=>e.data))}throw new o("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,r){return this._debouncedSaveOperations(S.SaveOperationType.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(S.SaveOperationType.SAVE,e)}validateLayer(e){if(e.layerType&&"PointCloud"!==e.layerType)throw new o("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new o("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new o("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some((r=>r.name===e))}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;L.logInvalidElevationInfoWarning(n.getLogger(this),L.elevationModeRequiredMessage("Point cloud layers","absolute-height",e)),L.logInvalidElevationInfoWarning(n.getLogger(this),L.featureExpressionUnsupportedMessage("Point cloud layers",e))}};e.__decorate([d.property({type:["PointCloudLayer"]})],O.prototype,"operationalLayerType",void 0),e.__decorate([d.property(b.popupEnabled)],O.prototype,"popupEnabled",void 0),e.__decorate([d.property({type:r,json:{name:"popupInfo",write:!0}})],O.prototype,"popupTemplate",void 0),e.__decorate([d.property({readOnly:!0,json:{read:!1}})],O.prototype,"defaultPopupTemplate",null),e.__decorate([d.property({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],O.prototype,"opacity",void 0),e.__decorate([d.property({type:["show","hide"]})],O.prototype,"listMode",void 0),e.__decorate([d.property({types:[w.types],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],O.prototype,"filters",void 0),e.__decorate([d.property({type:[T]})],O.prototype,"fields",void 0),e.__decorate([d.property(A.fieldsIndex)],O.prototype,"fieldsIndex",void 0),e.__decorate([u.reader("service","fields",["fields","attributeStorageInfo"])],O.prototype,"readServiceFields",null),e.__decorate([d.property(A.outFields)],O.prototype,"outFields",void 0),e.__decorate([d.property({readOnly:!0})],O.prototype,"attributeStorageInfo",void 0),e.__decorate([d.property(b.elevationInfo)],O.prototype,"elevationInfo",null),e.__decorate([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],O.prototype,"path",void 0),e.__decorate([d.property(b.legendEnabled)],O.prototype,"legendEnabled",void 0),e.__decorate([d.property({types:F.types,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:F.types},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],O.prototype,"renderer",void 0),e.__decorate([f.writer("renderer")],O.prototype,"writeRenderer",null),e.__decorate([d.property({json:{read:!1},readOnly:!0})],O.prototype,"type",void 0),O=e.__decorate([y.subclass("esri.layers.PointCloudLayer")],O);return O}));
