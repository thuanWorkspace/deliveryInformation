/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../request","../../core/Error","../../core/Logger","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/originUtils","../../geometry/Extent","../../geometry/HeightModelInfo","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../support/I3SIndexInfo","../support/schemaValidatorLoader","../../portal/Portal","../../portal/PortalItem","../../webdoc/saveAPIKeyUtils","../../webdoc/support/saveUtils"],(function(e,t,r,o,a,i,s,n,l,p,d,c,u,y,h,m,v,f,S,g,_,w,I,x,b,T){"use strict";const O="esri.layers.mixins.SceneService",A=a.getLogger(O),R=a=>{let l=class extends a{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=i.debounce((async(t,r,o)=>{switch(t){case e.SaveOperationType.SAVE:return this._save(r);case e.SaveOperationType.SAVE_AS:return this._saveAs(o,r)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return f.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,o=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=o?new f(o):null}}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e){const o=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return m.fromJSON(o,r)}const o=t.store,a=this._readSpatialReference(t);return null==a||null==o?.extent||!Array.isArray(o.extent)||o.extent.some((e=>e<U))?null:new m({xmin:o.extent[0],ymin:o.extent[1],xmax:o.extent[2],ymax:o.extent[3],spatialReference:a})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t}readVersion(e,t){const r=t.store,o=null!=r.version?r.version.toString():"";return this.parseVersionString(o)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return S.titleFromUrlAndName(this.url,t.name);let o=t.name;if(!o&&this.url){const e=S.parse(this.url);null!=e&&(o=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(o=r+" - "+o),S.cleanTitle(o)}set url(e){const t=S.sanitizeUrlWithLayerId({layer:this,url:e,nonStandardUrlAllowed:!1,logger:A});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,o){S.writeUrlWithLayerId(this,e,"layers",t,o)}get parsedUrl(){const e=this._get("url"),t=s.urlToObject(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=_.fetchIndexInfo(this.parsedUrl.path,this.rootNode,e,this.apiKey,A,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===e?.type){const t=e.rootIndex%e.pageSize,r=e.rootPage?.nodes?.[t];if(null==r?.obb?.center||null==r.obb.halfSize)throw new o("sceneservice:invalid-node-page","Invalid node page.");if(r.obb.center[0]<U||null==this.fullExtent||this.fullExtent.hasZ)return;const a=r.obb.halfSize,i=r.obb.center[2],s=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);this.fullExtent.zmin=i-s,this.fullExtent.zmax=i+s}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<U)return;const r=t[2],o=t[3],{fullExtent:a}=this;a&&(a.zmin=r-o,a.zmax=r+o)}}async _fetchService(e){if(null==this.url)throw new o("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await r(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await r(this.parsedUrl?.path??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let o=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(o=!0),o)return this._fetchVoxelServiceLayer();const a=t.data;this.read(a,this._getServiceContext()),this.validateLayer(a)}async _fetchVoxelServiceLayer(e){const t=(await r(this.parsedUrl?.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const o=t.getTypeKeywords();for(const a of o)e.typeKeywords.push(a);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===N.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...K,...t};let a=x.from(e);if(!a)throw new o("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");b.validateSaveAPIKey(a),a.id&&(a=a.clone(),a.id=null);const i=a.portal||I.getDefault();await this._ensureLoadBeforeSave(),a.type=E,a.portal=i;const s={origin:"portal-item",url:null,messages:[],portal:i,portalItem:a,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write({},s)]};return await Promise.all(s.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(n,s,r),a.url=this.url,a.title||(a.title=this.title),this._updateTypeKeywords(a,r,N.newItem),await i.signIn(),await(i.user?.addItem({item:a,folder:r?.folder,data:n})),await T.saveResources(this.resourceReferences,s,null),this.portalItem=a,h.updateOrigins(s),s.portalItem=a,a}async _save(e){const t={...K,...e};if(!this.portalItem)throw new o("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(b.validateSaveAPIKey(this.portalItem),this.portalItem.type!==E)throw new o("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${E}"`);await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&s.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||I.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},a={layers:[this.write({},r)]};return await Promise.all(r.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(a,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,N.existingItem),await T.updateItemWithResources(this.portalItem,a,this.resourceReferences,r,null),h.updateOrigins(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let a=t.messages?.filter((e=>"error"===e.type)).map((e=>new o(e.name,e.message,e.details)))??[];r?.validationOptions?.ignoreUnsupported&&(a=a.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name)));const i=r?.validationOptions,s=i?.enabled,n=w.getLoader();if(s&&n){const t=(await n()).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(A.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===i.failPolicy){const e=t.map((e=>new o("sceneservice:schema-validation",e))).concat(a);throw new o("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(a.length>0)throw new o("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:a})}};return t.__decorate([n.property(g.id)],l.prototype,"id",void 0),t.__decorate([n.property({type:f})],l.prototype,"spatialReference",void 0),t.__decorate([c.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],l.prototype,"readSpatialReference",null),t.__decorate([n.property({type:m})],l.prototype,"fullExtent",void 0),t.__decorate([c.reader("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],l.prototype,"readFullExtent",null),t.__decorate([n.property({readOnly:!0,type:v})],l.prototype,"heightModelInfo",void 0),t.__decorate([n.property({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],l.prototype,"minScale",void 0),t.__decorate([n.property({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],l.prototype,"maxScale",void 0),t.__decorate([n.property({readOnly:!0})],l.prototype,"version",void 0),t.__decorate([c.reader("version",["store.version"])],l.prototype,"readVersion",null),t.__decorate([n.property({type:String,json:{read:{source:"copyrightText"}}})],l.prototype,"copyright",void 0),t.__decorate([n.property({type:String,json:{read:!1}})],l.prototype,"sublayerTitleMode",void 0),t.__decorate([n.property({type:String})],l.prototype,"title",void 0),t.__decorate([c.reader("portal-item","title")],l.prototype,"readTitlePortalItem",null),t.__decorate([c.reader("service","title",["name"])],l.prototype,"readTitleService",null),t.__decorate([n.property({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],l.prototype,"layerId",void 0),t.__decorate([n.property(g.url)],l.prototype,"url",null),t.__decorate([y.writer("url")],l.prototype,"writeUrl",null),t.__decorate([n.property()],l.prototype,"parsedUrl",null),t.__decorate([n.property({readOnly:!0})],l.prototype,"store",void 0),t.__decorate([n.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],l.prototype,"rootNode",void 0),l=t.__decorate([u.subclass(O)],l),l},U=-1e38;var N;!function(e){e[e.existingItem=0]="existingItem",e[e.newItem=1]="newItem"}(N||(N={}));const E="Scene Service",K={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var L;e.SaveOperationType=void 0,(L=e.SaveOperationType||(e.SaveOperationType={}))[L.SAVE=0]="SAVE",L[L.SAVE_AS=1]="SAVE_AS",e.SceneService=R,e.sceneServiceItemType=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
