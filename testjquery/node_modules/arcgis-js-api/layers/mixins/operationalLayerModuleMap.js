/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports"],(function(e,a){"use strict";const r=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),i={ArcGISAnnotationLayer:()=>Promise.resolve(null),ArcGISDimensionLayer:async()=>(await new Promise(((a,i)=>e(["../DimensionLayer"],(e=>a(r(e))),i)))).default,ArcGISFeatureLayer:async()=>(await new Promise(((a,i)=>e(["../FeatureLayer"],(e=>a(r(e))),i)))).default,ArcGISImageServiceLayer:async()=>(await new Promise(((a,i)=>e(["../ImageryLayer"],(e=>a(r(e))),i)))).default,ArcGISImageServiceVectorLayer:()=>Promise.resolve(null),ArcGISMapServiceLayer:async()=>(await new Promise(((a,i)=>e(["../MapImageLayer"],(e=>a(r(e))),i)))).default,ArcGISSceneServiceLayer:async()=>(await new Promise(((a,i)=>e(["../SceneLayer"],(e=>a(r(e))),i)))).default,ArcGISStreamLayer:async()=>(await new Promise(((a,i)=>e(["../StreamLayer"],(e=>a(r(e))),i)))).default,ArcGISTiledElevationServiceLayer:async()=>(await new Promise(((a,i)=>e(["../ElevationLayer"],(e=>a(r(e))),i)))).default,ArcGISTiledImageServiceLayer:async()=>(await new Promise(((a,i)=>e(["../ImageryTileLayer"],(e=>a(r(e))),i)))).default,ArcGISTiledMapServiceLayer:async()=>(await new Promise(((a,i)=>e(["../TileLayer"],(e=>a(r(e))),i)))).default,BingMapsAerial:async()=>(await new Promise(((a,i)=>e(["../BingMapsLayer"],(e=>a(r(e))),i)))).default,BingMapsRoad:async()=>(await new Promise(((a,i)=>e(["../BingMapsLayer"],(e=>a(r(e))),i)))).default,BingMapsHybrid:async()=>(await new Promise(((a,i)=>e(["../BingMapsLayer"],(e=>a(r(e))),i)))).default,BuildingSceneLayer:async()=>(await new Promise(((a,i)=>e(["../BuildingSceneLayer"],(e=>a(r(e))),i)))).default,CSV:async()=>(await new Promise(((a,i)=>e(["../CSVLayer"],(e=>a(r(e))),i)))).default,GeoRSS:async()=>(await new Promise(((a,i)=>e(["../GeoRSSLayer"],(e=>a(r(e))),i)))).default,GeoJSON:async()=>(await new Promise(((a,i)=>e(["../GeoJSONLayer"],(e=>a(r(e))),i)))).default,GroupLayer:async()=>(await new Promise(((a,i)=>e(["../GroupLayer"],(e=>a(r(e))),i)))).default,IntegratedMeshLayer:async()=>(await new Promise(((a,i)=>e(["../IntegratedMeshLayer"],(e=>a(r(e))),i)))).default,KML:async()=>(await new Promise(((a,i)=>e(["../KMLLayer"],(e=>a(r(e))),i)))).default,MediaLayer:async()=>(await new Promise(((a,i)=>e(["../MediaLayer"],(e=>a(r(e))),i)))).default,LineOfSightLayer:async()=>(await new Promise(((a,i)=>e(["../LineOfSightLayer"],(e=>a(r(e))),i)))).default,OGCFeatureLayer:async()=>(await new Promise(((a,i)=>e(["../OGCFeatureLayer"],(e=>a(r(e))),i)))).default,OpenStreetMap:async()=>(await new Promise(((a,i)=>e(["../OpenStreetMapLayer"],(e=>a(r(e))),i)))).default,OrientedImageryLayer:async()=>(await new Promise(((a,i)=>e(["../OrientedImageryLayer"],(e=>a(r(e))),i)))).default,PointCloudLayer:async()=>(await new Promise(((a,i)=>e(["../PointCloudLayer"],(e=>a(r(e))),i)))).default,VectorTileLayer:async()=>(await new Promise(((a,i)=>e(["../VectorTileLayer"],(e=>a(r(e))),i)))).default,Voxel:async()=>(await new Promise(((a,i)=>e(["../VoxelLayer"],(e=>a(r(e))),i)))).default,WebTiledLayer:async()=>(await new Promise(((a,i)=>e(["../WebTileLayer"],(e=>a(r(e))),i)))).default,WFS:async()=>(await new Promise(((a,i)=>e(["../WFSLayer"],(e=>a(r(e))),i)))).default,SubtypeGroupLayer:async()=>(await new Promise(((a,i)=>e(["../SubtypeGroupLayer"],(e=>a(r(e))),i)))).default,WMS:async()=>(await new Promise(((a,i)=>e(["../WMSLayer"],(e=>a(r(e))),i)))).default,RasterDataLayer:()=>Promise.resolve(null),RasterDataElevationLayer:()=>Promise.resolve(null)};a.typeModuleMap=i,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})}));
