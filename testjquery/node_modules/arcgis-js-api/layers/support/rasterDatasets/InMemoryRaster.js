/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/promiseUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../RasterInfo","./BaseRaster","../rasterFunctions/pixelUtils","../rasterFunctions/stretchUtils","../../../geometry/Extent","../../../geometry/SpatialReference"],(function(e,t,s,r,i,a,o,n,l,c,h,p,m,u,d){"use strict";let y=class extends h{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const t=this.data,{pixelBlock:s,statistics:r,histograms:i,name:a,keyProperties:o,nativeExtent:n,transform:l}=this.data,{width:h,height:p,pixelType:m}=s,y=t.extent??new u({xmin:-.5,ymin:.5,xmax:h-.5,ymax:p-.5,spatialReference:new d({wkid:3857})}),x=t.isPseudoSpatialReference??!t.extent,f={x:y.width/h,y:y.height/p},g=new c({width:h,height:p,pixelType:m,extent:y,nativeExtent:n,transform:l,pixelSize:f,spatialReference:y.spatialReference,bandCount:s.pixels.length,keyProperties:o||{},statistics:r,isPseudoSpatialReference:x,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},e),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(e,t,s,r={}){const i=this._pixelBlockTiles.get(`${e}/${t}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(e,t,i){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,o=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:a},i):Promise.resolve(p.split(e,t,a)),n=null!=this.rasterInfo.statistics,l=null!=this.rasterInfo.histograms,c=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(m.estimateStatisticsHistograms(e)),h=await r.eachAlways([o,c]);if(!h[0].value&&h[1].value)throw new s("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=h[0].value,n||(this.rasterInfo.statistics=h[1].value?.statistics),l||(this.rasterInfo.histograms=h[1].value?.histograms)}};e.__decorate([i.property({type:String,json:{write:!0}})],y.prototype,"datasetFormat",void 0),e.__decorate([i.property()],y.prototype,"data",void 0),y=e.__decorate([l.subclass("esri.layers.support.rasterDatasets.InMemoryRaster")],y);return y}));
