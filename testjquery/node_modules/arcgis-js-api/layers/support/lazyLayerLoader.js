/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports"],(function(e,a){"use strict";const r=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),t={BingMapsLayer:async()=>(await new Promise(((a,t)=>e(["../BingMapsLayer"],(e=>a(r(e))),t)))).default,BuildingSceneLayer:async()=>(await new Promise(((a,t)=>e(["../BuildingSceneLayer"],(e=>a(r(e))),t)))).default,CSVLayer:async()=>(await new Promise(((a,t)=>e(["../CSVLayer"],(e=>a(r(e))),t)))).default,DimensionLayer:async()=>(await new Promise(((a,t)=>e(["../DimensionLayer"],(e=>a(r(e))),t)))).default,ElevationLayer:async()=>(await new Promise(((a,t)=>e(["../ElevationLayer"],(e=>a(r(e))),t)))).default,FeatureLayer:async()=>(await new Promise(((a,t)=>e(["../FeatureLayer"],(e=>a(r(e))),t)))).default,GeoJSONLayer:async()=>(await new Promise(((a,t)=>e(["../GeoJSONLayer"],(e=>a(r(e))),t)))).default,GeoRSSLayer:async()=>(await new Promise(((a,t)=>e(["../GeoRSSLayer"],(e=>a(r(e))),t)))).default,GroupLayer:async()=>(await new Promise(((a,t)=>e(["../GroupLayer"],(e=>a(r(e))),t)))).default,ImageryLayer:async()=>(await new Promise(((a,t)=>e(["../ImageryLayer"],(e=>a(r(e))),t)))).default,ImageryTileLayer:async()=>(await new Promise(((a,t)=>e(["../ImageryTileLayer"],(e=>a(r(e))),t)))).default,IntegratedMeshLayer:async()=>(await new Promise(((a,t)=>e(["../IntegratedMeshLayer"],(e=>a(r(e))),t)))).default,KMLLayer:async()=>(await new Promise(((a,t)=>e(["../KMLLayer"],(e=>a(r(e))),t)))).default,LineOfSightLayer:async()=>(await new Promise(((a,t)=>e(["../LineOfSightLayer"],(e=>a(r(e))),t)))).default,LinkChartLayer:async()=>(await new Promise(((a,t)=>e(["../LinkChartLayer"],(e=>a(r(e))),t)))).default,MapImageLayer:async()=>(await new Promise(((a,t)=>e(["../MapImageLayer"],(e=>a(r(e))),t)))).default,MapNotesLayer:async()=>(await new Promise(((a,t)=>e(["../MapNotesLayer"],(e=>a(r(e))),t)))).default,MediaLayer:async()=>(await new Promise(((a,t)=>e(["../MediaLayer"],(e=>a(r(e))),t)))).default,OGCFeatureLayer:async()=>(await new Promise(((a,t)=>e(["../OGCFeatureLayer"],(e=>a(r(e))),t)))).default,OpenStreetMapLayer:async()=>(await new Promise(((a,t)=>e(["../OpenStreetMapLayer"],(e=>a(r(e))),t)))).default,OrientedImageryLayer:async()=>(await new Promise(((a,t)=>e(["../OrientedImageryLayer"],(e=>a(r(e))),t)))).default,PointCloudLayer:async()=>(await new Promise(((a,t)=>e(["../PointCloudLayer"],(e=>a(r(e))),t)))).default,RouteLayer:async()=>(await new Promise(((a,t)=>e(["../RouteLayer"],(e=>a(r(e))),t)))).default,SceneLayer:async()=>(await new Promise(((a,t)=>e(["../SceneLayer"],(e=>a(r(e))),t)))).default,StreamLayer:async()=>(await new Promise(((a,t)=>e(["../StreamLayer"],(e=>a(r(e))),t)))).default,SubtypeGroupLayer:async()=>(await new Promise(((a,t)=>e(["../SubtypeGroupLayer"],(e=>a(r(e))),t)))).default,TileLayer:async()=>(await new Promise(((a,t)=>e(["../TileLayer"],(e=>a(r(e))),t)))).default,UnknownLayer:async()=>(await new Promise(((a,t)=>e(["../UnknownLayer"],(e=>a(r(e))),t)))).default,UnsupportedLayer:async()=>(await new Promise(((a,t)=>e(["../UnsupportedLayer"],(e=>a(r(e))),t)))).default,VectorTileLayer:async()=>(await new Promise(((a,t)=>e(["../VectorTileLayer"],(e=>a(r(e))),t)))).default,VoxelLayer:async()=>(await new Promise(((a,t)=>e(["../VoxelLayer"],(e=>a(r(e))),t)))).default,WFSLayer:async()=>(await new Promise(((a,t)=>e(["../WFSLayer"],(e=>a(r(e))),t)))).default,WMSLayer:async()=>(await new Promise(((a,t)=>e(["../WMSLayer"],(e=>a(r(e))),t)))).default,WMTSLayer:async()=>(await new Promise(((a,t)=>e(["../WMTSLayer"],(e=>a(r(e))),t)))).default,WebTileLayer:async()=>(await new Promise(((a,t)=>e(["../WebTileLayer"],(e=>a(r(e))),t)))).default};a.layerLookupMap=t,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})}));
