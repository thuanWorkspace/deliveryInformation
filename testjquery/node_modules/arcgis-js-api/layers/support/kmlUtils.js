/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../config","../../kernel","../../PopupTemplate","../../request","../../core/lang","../../core/urlUtils","../../geometry/SpatialReference","../../geometry/support/aaBoundingBox","../../geometry/support/boundsUtils","../../renderers/support/jsonUtils","../../rest/support/FeatureSet"],(function(e,t,o,r,n,s,i,a,f,l,u,y){"use strict";const c={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function p(e){const t=e.folders||[],o=t.slice(),r=new Map,n=new Map,i=new Map,a=new Map,f=new Map,l={esriGeometryPoint:n,esriGeometryPolyline:i,esriGeometryPolygon:a};(e.featureCollection?.layers||[]).forEach((e=>{const t=s.clone(e);t.featureSet.features=[];const o=e.featureSet.geometryType;r.set(o,t);const f=e.layerDefinition.objectIdField;"esriGeometryPoint"===o?g(n,f,e.featureSet.features):"esriGeometryPolyline"===o?g(i,f,e.featureSet.features):"esriGeometryPolygon"===o&&g(a,f,e.featureSet.features)})),e.groundOverlays&&e.groundOverlays.forEach((e=>{f.set(e.id,e)})),t.forEach((t=>{t.networkLinkIds.forEach((r=>{const n=h(r,t.id,e.networkLinks);n&&o.push(n)}))})),o.forEach((e=>{if(e.featureInfos){e.points=s.clone(r.get("esriGeometryPoint")),e.polylines=s.clone(r.get("esriGeometryPolyline")),e.polygons=s.clone(r.get("esriGeometryPolygon")),e.mapImages=[];for(const t of e.featureInfos)switch(t.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const o=l[t.type].get(t.id);o&&e[c[t.type]]?.featureSet.features.push(o);break}case"GroundOverlay":{const o=f.get(t.id);o&&e.mapImages.push(o);break}}e.fullExtent=P([e])}}));const u=P(o);return{folders:t,sublayers:o,extent:u}}function d(e,r,s,a){const f=o.id?.findCredential(e);e=i.addQueryParameters(e,{token:f?.token});const l=t.kmlServiceUrl;return n(l,{query:{url:e,model:"simple",folders:"",refresh:0!==s||void 0,outSR:JSON.stringify(r)},responseType:"json",signal:a})}function m(e,t,o=null,r=[]){const n=[],s={},i=t.sublayers,a=new Set(t.folders.map((e=>e.id)));return i.forEach((t=>{const i=new e;if(o?i.read(t,o):i.read(t),r.length&&a.has(i.id)&&(i.visible=r.includes(i.id)),s[t.id]=i,null!=t.parentFolderId&&-1!==t.parentFolderId){const e=s[t.parentFolderId];e.sublayers||(e.sublayers=[]),e.sublayers?.unshift(i)}else n.unshift(i)})),n}function g(e,t,o){o.forEach((o=>{e.set(o.attributes[t],o)}))}function S(e,t){let o;return t.some((t=>t.id===e&&(o=t,!0))),o}function h(e,t,o){const r=S(e,o);return r&&(r.parentFolderId=t,r.networkLink=r),r}async function G(e){const t=y.fromJSON(e.featureSet).features,o=e.layerDefinition,n=u.fromJSON(o.drawingInfo.renderer),s=r.fromJSON(e.popupInfo),i=[];for(const r of t){const e=await n.getSymbolAsync(r);r.symbol=e,r.popupTemplate=s,r.visible=!0,i.push(r)}return i}function P(e){const t=f.create(f.negativeInfinity),o=f.create(f.negativeInfinity);for(const r of e){if(r.polygons?.featureSet?.features)for(const e of r.polygons.featureSet.features)l.getBoundsXYZ(t,e.geometry),f.expandWithAABB(o,t);if(r.polylines?.featureSet?.features)for(const e of r.polylines.featureSet.features)l.getBoundsXYZ(t,e.geometry),f.expandWithAABB(o,t);if(r.points?.featureSet?.features)for(const e of r.points.featureSet.features)l.getBoundsXYZ(t,e.geometry),f.expandWithAABB(o,t);if(r.mapImages)for(const e of r.mapImages)l.getBoundsXYZ(t,e.extent),f.expandWithAABB(o,t)}return f.equals(o,f.negativeInfinity)?void 0:{xmin:o[0],ymin:o[1],zmin:o[2],xmax:o[3],ymax:o[4],zmax:o[5],spatialReference:a.WGS84}}e.computeExtent=P,e.fetchService=d,e.getGraphics=G,e.parseKML=p,e.sublayersFromJSON=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
