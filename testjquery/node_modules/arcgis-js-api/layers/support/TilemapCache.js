/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../chunks/tslib.es6","../../request","../../core/Accessor","../../core/ByteSizeUnit","../../core/Error","../../core/handleUtils","../../core/LRUCache","../../core/PooledArray","../../core/promiseUtils","../../core/reactiveUtils","../../core/scheduling","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","./TileKey","./Tilemap"],(function(e,t,i,r,l,a,s,o,n,c,h,p,f,m,u,d,y,v,_,b){"use strict";var T;e.TilemapCache=T=class extends r{constructor(e){super(e),this._pendingTilemapRequests={},this.request=i,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new o.LRUCache(2*l.ByteSizeUnit.MEGABYTES),this.addHandles([h.watch((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),h.initial)])}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}fetchTilemap(e,t,i,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,l);if(s)return Promise.resolve(s);const o=r?.signal;return r={...r,signal:null},new Promise(((e,t)=>{c.onAbort(o,(()=>t(c.createAbortError())));const i=b.tilemapDefinitionId(l);let a=this._pendingTilemapRequests[i];if(!a){a=b.Tilemap.fromDefinition(l,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)}))}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(new a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof b.Tilemap){const l=r.getAvailability(t,i);if("unavailable"===l)throw new a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return l}if(c.isAbortError(r))throw r;return"unknown"}))}fetchAvailabilityUpsample(e,t,i,r,l){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;a.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,l).catch((e=>{if(c.isAbortError(e))throw e;if(a.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r,l);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,l,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,l,a){if(!this._prefetchingEnabled||null==e)return;const o=`prefetch-${e}`;if(this.hasHandles(o))return;const n=new AbortController;a.then((()=>n.abort()),(()=>n.abort()));let h=!1;const f=s.makeHandle((()=>{h||(h=!0,n.abort())}));if(this.addHandles(f,o),await p.waitTicks(10,n.signal).catch((()=>{})),h||(h=!0,this.removeHandles(o)),c.isAborted(n))return;const m=new _.TileKey(e,t,i,r),u={...l,signal:n.signal},d=this.layer.tileInfo;for(let s=0;T._prefetches.length<T._maxPrefetch&&d.upsampleTile(m);++s){const e=this.fetchAvailability(m.level,m.row,m.col,u);T._prefetches.push(e);const t=()=>{T._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:f.objectToQuery({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const l=b.tilemapDefinitionId(r);return this._tilemapCache.get(l)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}},e.TilemapCache._maxPrefetch=4,e.TilemapCache._prefetches=new n({initialSize:T._maxPrefetch}),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"layer",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"minLOD",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"maxLOD",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"request",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"size",void 0),e.TilemapCache=T=t.__decorate([v.subclass("esri.layers.support.TilemapCache")],e.TilemapCache),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
