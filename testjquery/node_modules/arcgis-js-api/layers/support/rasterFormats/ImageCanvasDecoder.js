/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../core/Error","../../../core/promiseUtils","../../../chunks/Zlib"],(function(t,e,a){"use strict";class n{constructor(t){this._canvas=null,this._ctx=null,t&&(this._canvas=t.canvas,this._ctx=t.ctx||t.canvas&&t.canvas.getContext("2d"))}decode(a,i,r){if(!a||a.byteLength<10)throw new t("imagecanvasdecoder: decode","required a valid encoded data as input.");let{width:s=0,height:c=0,format:h}=i;const{applyJpegMask:o}=i;if(o&&(!s||!c))throw new t("imagecanvasdecoder: decode","image width and height are needed to apply jpeg mask directly to canvas");return new Promise(((t,l)=>{let d=null;"jpg"===h&&o&&(d=n._getMask(a,{width:s,height:c}));const g=new Blob([new Uint8Array(a)],{type:"image/"+h=="jpg"?"jpeg":h}),w=URL.createObjectURL(g),v=new Image;let _;v.src=w,v.onload=()=>{if(URL.revokeObjectURL(w),e.isAborted(r))return void l(e.createAbortError());s=v.width,c=v.height,this._canvas&&this._ctx?(this._canvas.width===s&&this._canvas.height===c||(this._canvas.width=s,this._canvas.height=c),this._ctx.clearRect(0,0,s,c)):(this._canvas=document.createElement("canvas"),this._canvas.width=s,this._canvas.height=c,this._ctx=this._canvas.getContext("2d")),this._ctx.drawImage(v,0,0);const a=this._ctx.getImageData(0,0,s,c);let n;if(_=a.data,i.renderOnCanvas){if(d)for(n=0;n<d.length;n++)d[n]?_[4*n+3]=255:_[4*n+3]=0;return this._ctx.putImageData(a,0,0),void t(null)}const h=s*c,o=new Uint8Array(h),g=new Uint8Array(h),u=new Uint8Array(h);if(d)for(n=0;n<h;n++)o[n]=_[4*n],g[n]=_[4*n+1],u[n]=_[4*n+2];else for(d=new Uint8Array(h),n=0;n<h;n++)o[n]=_[4*n],g[n]=_[4*n+1],u[n]=_[4*n+2],d[n]=_[4*n+3];t({width:s,height:c,pixels:[o,g,u],mask:d,pixelType:"u8"})},v.onerror=()=>{URL.revokeObjectURL(w),l("cannot load image")}}))}static _getMask(t,e){let n=null;try{const i=new Uint8Array(t),r=Math.ceil(i.length/2);let s=0;const c=i.length-2;for(s=r;s<c&&(255!==i[s]||217!==i[s+1]);s++);if(s+=2,s<i.length-1){const t=new a.Zlib(i.subarray(s)).getBytes();n=new Uint8Array(e.width*e.height);let r=0;for(let e=0;e<t.length;e++)for(let a=7;a>=0;a--)n[r++]=t[e]>>a&1}}catch(i){}return n}}return n}));
