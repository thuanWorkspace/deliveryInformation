/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../rasterFunctionConstants","../rasterFormats/pixelRangeUtils","./BaseRasterFunction","./LocalFunctionArguments","./localUtils"],(function(t,e,s,o,r,n,u,a,i,c,l){"use strict";let p=class extends i{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:o}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:n}=this.functionArguments,u=l.operandsCount[r];if(!(999===u||n.length===u||n.length<=1&&1===u))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${u}`};this.outputPixelType=this._getOutputPixelType("f32");const a=e.clone();a.pixelType=this.outputPixelType,a.statistics=null,a.histograms=null,a.colormap=null,a.attributeTable=null,a.bandCount=999!==u||o?s:1;const i=l.getOutputDomain(r);if(i){a.statistics=[];for(let t=0;t<a.bandCount;t++)a.statistics[t]={min:i[0],max:i[1],avg:(i[0]+i[1])/2,stddev:(i[0]+i[1])/10}}this.rasterInfo=a;return{success:!0,supportsGPU:1===a.bandCount&&u<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:l.local(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=l.operandsCount[t],s=Object.keys(u.localOperators).find((e=>u.localOperators[e]===t))?.toLowerCase()??"undefined",o=this.outputPixelType??"f32";let[r,n]=a.getPixelValueRange(o);const i=o.startsWith("u")||o.startsWith("s");return i&&(r-=1e-4,n+=1e-4),{imageCount:e,operationName:s,domainRange:[r,n],isOutputRounded:i}}};t.__decorate([e.property({json:{write:!0,name:"rasterFunction"}})],p.prototype,"functionName",void 0),t.__decorate([e.property({type:c,json:{write:!0,name:"rasterFunctionArguments"}})],p.prototype,"functionArguments",void 0),t.__decorate([e.property()],p.prototype,"rasterArgumentNames",void 0),p=t.__decorate([n.subclass("esri.layers.support.rasterFunctions.LocalFunction")],p);return p}));
