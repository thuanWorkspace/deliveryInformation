/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","./BandArithmeticFunctionArguments","./bandIndexUtils","./BaseRasterFunction"],(function(e,t,s,r,a,n,i,c,o){"use strict";const u=new Set(["vari","mtvi2","rtvi-core","evi"]);let d=class extends o{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const e=this.sourceRasterInfos[0];if(e.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const t=e.clone();t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.bandCount="sultan"===this.functionArguments.method?3:1,t.keyProperties={...t.keyProperties,BandProperties:void 0},this.rasterInfo=t;return{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(null==t)return t;const{method:s,bandIndexes:r}=this.functionArguments,a=r.split(" ").map((e=>parseFloat(e)));return c.calculateBandIndex(t,{method:s,bandIndexes:a,equation:r})}_getWebGLParameters(){const e=this.functionArguments.bandIndexes.split(" ").map((e=>parseFloat(e)-1));2===e.length&&e.push(0);const t=this.isInputBandIdsSwizzled?[0,1,2]:e;let s,r;const a=new Float32Array(3),{method:n}=this.functionArguments;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=c.getBandMatrix3([t[0],t[1],0]),r="ndxi";break;case"ndwi":s=c.getBandMatrix3([t[1],t[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=c.getBandMatrix3([t[0],t[1],0]),r="sr";break;case"ci-g":case"ci-re":s=c.getBandMatrix3([t[0],t[1],0]),r="ci";break;case"savi":s=c.getBandMatrix3([t[0],t[1],0]),r="savi",a[0]=e[2]+1;break;case"tsavi":s=c.getBandMatrix3([t[0],t[1],0]),r="tsavi",a[0]=e[2]+1,a[1]=e[3]+1,a[2]=e[4]+1;break;case"msavi":s=c.getBandMatrix3([t[0],t[1],0]),r="msavi";break;case"gemi":s=c.getBandMatrix3([t[0],t[1],0]),r="gemi";break;case"pvi":s=c.getBandMatrix3([t[0],t[1],0]),r="tsavi",a[0]=e[2]+1,a[1]=e[3]+1;break;case"vari":s=c.getBandMatrix3([t[0],t[1],t[2]]),r="vari";break;case"mtvi2":s=c.getBandMatrix3([t[0],t[1],t[2]]),r="mtvi2";break;case"rtvi-core":s=c.getBandMatrix3([t[0],t[1],t[2]]),r="rtvicore";break;case"evi":s=c.getBandMatrix3([t[0],t[1],t[2]]),r="evi";break;case"wndwi":s=c.getBandMatrix3([t[0],t[1],0]),r="wndwi",a[0]=e[3]?e[3]+1:.5;break;case"bai":s=c.getBandMatrix3([t[1],t[0],0]),r="bai";break;default:s=c.getBandMatrix3([0,1,2]),r="custom"}return{bandIndexMat3:s,indexType:r,adjustments:a}}_getInputBandIds(e){if("custom"===this.functionArguments.method)return e;const t=this.functionArguments.bandIndexes.split(" ").map((e=>parseFloat(e)-1)),s=e.length,r=t.map((e=>e>=s?s-1:e)),a=u.has(this.functionArguments.method)?3:2,n=r.slice(0,a).map((t=>e[t]));return 2===n.length&&n.push(0),n}};e.__decorate([t.property({json:{write:!0,name:"rasterFunction"}})],d.prototype,"functionName",void 0),e.__decorate([t.property({type:i,json:{write:!0,name:"rasterFunctionArguments"}})],d.prototype,"functionArguments",void 0),e.__decorate([t.property()],d.prototype,"rasterArgumentNames",void 0),d=e.__decorate([n.subclass("esri.layers.support.rasterFunctions.BandArithmeticFunction")],d);return d}));
