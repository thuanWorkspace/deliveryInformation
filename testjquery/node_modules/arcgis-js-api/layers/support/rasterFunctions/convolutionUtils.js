/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../PixelBlock","../rasterFunctionConstants","./mirror"],(function(e,n,o,t){"use strict";const l=new Map;function r(e){const n=Math.sqrt(e.length),o=e.slice(0,n),t=[1];for(let l=1;l<n;l++){let o=null;for(let t=0;t<n;t++){const r=e[t+l*n],i=e[t];if(null==o)if(0===i){if(r)return{separable:!1,row:null,col:null}}else o=r/i;else if(r/i!==o)return{separable:!1,row:null,col:null}}if(null==o)return{separable:!1,row:null,col:null};t.push(o)}return{separable:!0,row:o,col:t}}function i(e,n,o,t,l,r,i){const s=new Float32Array(n*o),c=r.length,u=i?0:t,a=i?t:0,h=i?1:n;for(let p=u;p<o-u;p++){const o=p*n;for(let i=a;i<n-a;i++){if(l&&!l[o+i])continue;let n=0;for(let l=0;l<c;l++)n+=e[o+i+(l-t)*h]*r[l];s[o+i]=n}}return s}function s(e,n,o,t,l,r,i){const s=new Float32Array(n*o),c=Math.floor(t/2),u=Math.floor(l/2);for(let a=c;a<o-c;a++){const o=a*n;for(let a=u;a<n-u;a++){if(r&&!r[o+a])continue;let h=0;for(let r=0;r<t;r++)for(let t=0;t<l;t++)h+=e[o+a+(r-c)*n+t-u]*i[r*l+t];s[o+a]=h}}return s}function c(e,o,l=!0){const{pixels:r,width:i,height:c,pixelType:u,mask:a}=e,h=r.length,p=[],{kernel:f,rows:v,cols:g}=o;for(let n=0;n<h;n++){const e=s(r[n],i,c,v,g,a,f);l&&t.mirror(e,i,c,v,g),p.push(e)}return new n({width:i,height:c,pixelType:u,pixels:p,mask:a})}function u(e,o,l,r=!0){const{pixels:s,width:c,height:u,pixelType:a,mask:h}=e,p=s.length,f=[],v=o.length,g=l.length,K=Math.floor(v/2),x=Math.floor(g/2);for(let n=0;n<p;n++){let e=i(s[n],c,u,K,h,o,!0);e=i(e,c,u,x,h,l,!1),r&&t.mirror(e,c,u,v,g),f.push(e)}return new n({width:c,height:u,pixelType:a,pixels:f,mask:h})}function a(e,n){const o=r(n.kernel),t=!1!==n.mirrorEdges,l=o.separable?u(e,o.row,o.col,t):c(e,n,t),{outputPixelType:i}=n;return i&&l.clamp(i),l}l.set(o.convolutionKernel.none,[0,0,0,0,1,0,0,0,0]),l.set(o.convolutionKernel.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),l.set(o.convolutionKernel.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),l.set(o.convolutionKernel.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),l.set(o.convolutionKernel.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),l.set(o.convolutionKernel.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),l.set(o.convolutionKernel.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),l.set(o.convolutionKernel.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),l.set(o.convolutionKernel.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),l.set(o.convolutionKernel.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),l.set(o.convolutionKernel.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),l.set(o.convolutionKernel.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),l.set(o.convolutionKernel.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),l.set(o.convolutionKernel.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),l.set(o.convolutionKernel.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),l.set(o.convolutionKernel.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),l.set(o.convolutionKernel.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),l.set(o.convolutionKernel.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),l.set(o.convolutionKernel.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),l.set(o.convolutionKernel.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),l.set(o.convolutionKernel.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),l.set(o.convolutionKernel.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),l.set(o.convolutionKernel.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]),e.convolute=a,e.convoluteSeparable=u,e.convolutionKernels=l,e.separateKernels=r,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
