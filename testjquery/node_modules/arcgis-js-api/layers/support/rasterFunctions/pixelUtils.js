/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../PixelBlock","../rasterFormats/pixelRangeUtils"],(function(t,e,n){"use strict";var l,i;t.NoDataInterpretation=void 0,(l=t.NoDataInterpretation||(t.NoDataInterpretation={}))[l.matchAny=0]="matchAny",l[l.matchAll=1]="matchAll",t.MissingBandAction=void 0,(i=t.MissingBandAction||(t.MissingBandAction={}))[i.bestMatch=0]="bestMatch",i[i.fail=1]="fail";const o=6;function s(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function r(t,e){return e?.length&&s(t)?t.extractBands(e):t}function a(t){if(!t?.length||t.some((t=>!s(t))))return null;if(1===t.length)return t[0]?.clone()??null;const n=t,{width:l,height:i,pixelType:o}=n[0];if(n.some((t=>t.width!==l||t.height!==i)))return null;const r=n.map((({mask:t})=>t)).filter((t=>null!=t));let a=null;r.length&&(a=new Uint8Array(l*i),a.set(r[0]),r.length>1&&g(r.slice(1),a));const h=[];n.forEach((({pixels:t})=>h.push(...t)));const f=n.map((({statistics:t})=>t)).filter((t=>t?.length)),c=[];return f.forEach((t=>c.push(...t))),new e({pixelType:o,width:l,height:i,mask:a,pixels:h,statistics:c.length?c:null})}function h(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let l=0;n[0][0]<0&&(l=n[0][0]);const i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),s=[];let r,a=0,h=0;const f=5===n[0].length;if(i>65536)return n.forEach((t=>{s[t[0]-l]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:l,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-l;a<i;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-l&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-l),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:f}}function f(t,e){if(!s(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let i=n.mask;const o=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:r,indexed2DColormap:a,offset:h,alphaSpecified:f}=e;let c=0;const u=l[0],p=new Uint8Array(u.length),x=new Uint8Array(u.length),d=new Uint8Array(u.length);let m,g=0;if(r){const t=r.length-1;if(null!=i)for(c=0;c<o;c++)i[c]&&(g=4*(u[c]-h),g<h||g>t?i[c]=0:(p[c]=r[g],x[c]=r[g+1],d[c]=r[g+2],i[c]=r[g+3]));else{for(i=new Uint8Array(o),c=0;c<o;c++)g=4*(u[c]-h),g<h||g>t?i[c]=0:(p[c]=r[g],x[c]=r[g+1],d[c]=r[g+2],i[c]=r[g+3]);n.mask=i}}else if(a)if(null!=i)for(c=0;c<o;c++)i[c]&&(m=a[u[c]],p[c]=m[0],x[c]=m[1],d[c]=m[2],i[c]=m[3]);else{for(i=new Uint8Array(o),c=0;c<o;c++)m=a[u[c]],p[c]=m[0],x[c]=m[1],d[c]=m[2],i[c]=m[3];n.mask=i}return n.pixels=[p,x,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=f,n}function c(t,n){if(!s(t))return null;const{pixels:l,mask:i}=t,o=l.length;let r=n.lut;const{offset:a}=n;r&&1===r[0].length&&(r=l.map((()=>r)));const h=[],f=n.outputPixelType||"u8";for(let e=0;e<o;e++){const t=u(l[e],i,r[e],a||0,f);h.push(t)}const c=new e({width:t.width,height:t.height,pixels:h,mask:i,pixelType:f});return c.updateStatistics(),c}function u(t,n,l,i,o){const s=t.length,r=e.createEmptyBand(o,s);if(n)for(let e=0;e<s;e++)n[e]&&(r[e]=l[t[e]-i]);else for(let e=0;e<s;e++)r[e]=l[t[e]-i];return r}function p(t,e){if(!s(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,o=e.length,r=Math.floor(o/2),a=e[Math.floor(r)],h=l[0];let f,c,u,p,x,d,m=!1;const g=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(i),k.fill(M?255:1),n.mask=k),x=0;x<i;x++)if(k[x]){for(f=h[x],m=!1,d=r,c=a,u=0,p=o-1;p-u>1;){if(f===c.value){m=!0;break}f>c.value?u=d:p=d,d=Math.floor((u+p)/2),c=e[Math.floor(d)]}m||(f===e[u].value?(c=e[u],m=!0):f===e[p].value?(c=e[p],m=!0):f<e[u].value?(m=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],m=!0):p===o-1?(m=!1,c=null):(c=e[p],m=!0))),m?(g[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return n.pixels=[g,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function x(t,l){if(!s(t))return null;const{width:i,height:o}=t,{inputRanges:r,outputValues:a,outputPixelType:h,noDataRanges:f,allowUnmatched:c,isLastInputRangeInclusive:u}=l,p=t.pixels[0],x=e.createEmptyBand(h,p.length),d=t.mask,m=new Uint8Array(i*o);d?m.set(d):m.fill(255);const g=t.pixelType.startsWith("f")?1e-6:0,y=r.map((t=>t-g));y[0]=r[0],y[y.length-1]=r[r.length-1]+(u?1e-6:0);const w=r.length/2,[k,M]=n.getPixelValueRange(h);for(let e=0;e<o;e++)for(let t=0;t<i;t++){const n=e*i+t;if(m[n]){const t=p[n];let e=!1;for(let l=w-1;l>=0;l--)if(t===y[2*l]||t>y[2*l]&&t<y[2*l+1]){x[n]=a[l],e=!0;break}e||(c?x[n]=t>M?M:t<k?k:t:m[n]=0)}}const A=f?.length;if(A)for(let e=0;e<o;e++)for(let t=0;t<i;t++){const n=e*i+t;if(!d||d[n]){const t=p[n];for(let e=0;e<A;e+=2)if(t>=f[e]&&t<=f[e+1]){x[n]=0,m[n]=0;break}}}return new e({width:i,height:o,pixelType:h,pixels:[x],mask:m})}function d(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let r=0;r<t.length;r++)if(l[r]){const n=t[r];if(s){let t=!1;for(let l=0;l<e.length;l+=2)if(n>=e[l]&&n<=e[l+1]){t=!0;break}t||(l[r]=0)}l[r]&&(n===o||i?.has(n))&&(l[r]=0)}}function m(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function g(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function y(t,n){if(!s(t))return null;const{width:l,height:i,pixels:o}=t,r=l*i,a=new Uint8Array(r);t.mask?a.set(t.mask):a.fill(255);const h=o.length,{includedRanges:f,noDataValues:c,outputPixelType:p,matchAll:x,lookups:y}=n;if(y){const t=[];for(let e=0;e<h;e++){const n=y[e],l=u(o[e],a,n.lut,n.offset||0,"u8");t.push(l)}1===t.length?a.set(t[0]):x?m(t,a):g(t,a)}else if(x){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(r);n.set(a),d(o[e],f?.slice(2*e,2*e+2),c?.[e],n),t.push(n)}1===t.length?a.set(t[0]):m(t,a)}else for(let e=0;e<h;e++)d(o[e],f?.slice(2*e,2*e+2),c?.[e],a);return new e({width:l,height:i,pixelType:p,pixels:o,mask:a})}function w(t){const{srcPixelType:l,inputRanges:i,outputValues:o,allowUnmatched:s,noDataRanges:r,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==l&&"s8"!==l&&"u16"!==l&&"s16"!==l)return null;const f=l.includes("16")?65536:256,c=l.includes("s")?-f/2:0,u=e.createEmptyBand(h,f),p=new Uint8Array(f);s&&p.fill(255);const[x,d]=n.getPixelValueRange(h);if(i?.length&&o?.length){const t=1e-6,e=i.map((e=>e-t));e[0]=i[0],a&&(e[e.length-1]=i[i.length-1]);for(let n=0;n<e.length;n++){const t=o[n]>d?d:o[n]<x?x:o[n],l=Math.ceil(e[2*n]-c),i=Math.floor(e[2*n+1]-c);for(let e=l;e<=i;e++)u[e]=t,p[e]=255}}if(r?.length)for(let e=0;e<r.length;e++){const t=Math.ceil(r[2*e]-c),n=Math.floor(r[2*e+1]-c);for(let e=t;e<=n;e++)p[e]=0}return{lut:u,offset:c,mask:p}}function k(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const l=t.includes("16")?65536:256,i=t.includes("s")?-l/2:0,o=new Uint8Array(l);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-i),n=Math.floor(e[2*s+1]-i);for(let e=t;e<=n;e++)o[e]=255}else o.fill(255);if(n)for(let s=0;s<n.length;s++)o[n[s]-i]=0;return{lut:o,offset:i}}function M(t,e,n,l,i,o,s,r){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+s<=n*t?0:i+s<n*t+t?i+s-n*t:t,ymax:o+r<=l*e?0:o+r<l*e+e?o+r-l*e:e}}function A(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,i=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,o=.01*Math.min(l,i),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>o?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>o?t.extent.xmin-e.extent.xmin:0)),r=Math.min.apply(null,s.map((t=>t.extent.xmin))),a=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),f=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((e.xmin-r)/l),y:Math.round((f-e.ymax)/i)},u={width:Math.round((h-r)/l),height:Math.round((f-a)/i)},p={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/i)};if(Math.round(u.width/n.pixelBlock.width)*Math.round(u.height/n.pixelBlock.height)!==s.length||c.x<0||c.y<0||u.width<p.width||u.height<p.height)return null;return{extent:e,pixelBlock:T(s.map((t=>t.pixelBlock)),u,{clipOffset:c,clipSize:p})}}function U(t,e,n,l,i,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=M(s,r,l,i,a,h,f,c);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+l*e;n<t&&n+e>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let d=u.ymin;d<u.ymax;d++){const n=(i*r+d-h)*f+(l*s-a)+p,o=d*s;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e[o+l]}else for(let d=u.ymin;d<u.ymax;d++){const n=(i*r+d-h)*f+(l*s-a)+p;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e}}function T(t,n,l={}){const{clipOffset:i,clipSize:o,alignmentInfo:r,blockWidths:a}=l;if(a)return b(t,n,{blockWidths:a});const h=t.find((t=>s(t)));if(null==h)return null;const f=o?o.width:n.width,c=o?o.height:n.height,u=h.width,p=h.height,x=n.width/u,d=n.height/p,m={offset:i||{x:0,y:0},mosaic:o||n,block:{width:u,height:p}},g=h.pixelType,y=e.getPixelArrayConstructor(g),w=h.pixels.length,k=[];let M,A;for(let e=0;e<w;e++){A=new y(f*c);for(let n=0;n<d;n++)for(let l=0;l<x;l++){const i=t[n*x+l];s(i)&&(M=i.pixels[e],U(A,M,m,l,n,r))}k.push(A)}const T=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),B=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),v=T?new Uint8Array(f*c):void 0,C=B?[]:void 0;if(v){for(let e=0;e<d;e++)for(let n=0;n<x;n++){const l=t[e*x+n],i=null!=l?l.mask:null;U(v,null!=i?i:l?255:0,m,n,e,r)}if(C)for(let e=0;e<w;e++){const n=new Uint8Array(f*c);for(let l=0;l<d;l++)for(let i=0;i<x;i++){const o=t[l*x+i],s=o?.bandMasks?.[e]??o?.mask;U(n,null!=s?s:o?255:0,m,i,l,r)}C.push(n)}}const P=new e({width:f,height:c,pixels:k,pixelType:g,bandMasks:C,mask:v});return P.updateStatistics(),P}function b(t,n,l){const i=t.find((t=>null!=t));if(null==i)return null;const o=t.some((t=>null==t||!!t.mask)),{width:r,height:a}=n,h=o?new Uint8Array(r*a):null,{blockWidths:f}=l,c=[],u=i.getPlaneCount(),p=e.getPixelArrayConstructor(i.pixelType);if(o)for(let e=0,y=0;e<t.length;y+=f[e],e++){const n=t[e];if(!s(n))continue;const l=n.mask;for(let t=0;t<a;t++)for(let i=0;i<f[e];i++)h[t*r+i+y]=null==l?255:l[t*n.width+i]}const x=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),d=x?[]:void 0,m=r*a;for(let e=0;e<u;e++){const n=new p(m),l=x?new Uint8Array(m):void 0;for(let i=0,o=0;i<t.length;o+=f[i],i++){const h=t[i];if(!s(h))continue;const c=h.pixels[e];if(null!=c){for(let t=0;t<a;t++)for(let e=0;e<f[i];e++)n[t*r+e+o]=c[t*h.width+e];if(l){const t=h.bandMasks?.[e]??h.mask;for(let e=0;e<a;e++)for(let n=0;n<f[i];n++)l[e*r+n+o]=t?t[e*h.width+n]:255}}}c.push(n),d&&l&&d.push(l)}const g=new e({width:r,height:a,mask:h,bandMasks:d,pixels:c,pixelType:i.pixelType});return g.updateStatistics(),g}function B(t,e,n){if(!s(t))return null;const{width:l,height:i}=t,o=e.x,r=e.y,a=n.width+o,h=n.height+r;if(o<0||r<0||a>l||h>i)return t;if(0===o&&0===r&&a===l&&h===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let s=0;s<i;s++){const t=s*l;for(let e=0;e<l;e++)f[t+e]=s<r||s>=h||e<o||e>=a?0:1}return t.updateStatistics(),t}function v(t){if(!s(t))return null;const e=t.clone(),{width:n,height:l,pixels:i}=t,o=i[0],r=e.pixels[0],a=t.mask;for(let s=2;s<l-1;s++){const t=new Map;for(let l=s-2;l<s+2;l++)for(let e=0;e<4;e++){const i=l*n+e;S(t,o[i],a?a[i]:1)}r[s*n]=C(t),r[s*n+1]=r[s*n+2]=r[s*n];let e=3;for(;e<n-1;e++){let l=(s-2)*n+e+1;S(t,o[l],a?a[l]:1),l=(s-1)*n+e+1,S(t,o[l],a?a[l]:1),l=s*n+e+1,S(t,o[l],a?a[l]:1),l=(s+1)*n+e+1,S(t,o[l],a?a[l]:1),l=(s-2)*n+e-3,P(t,o[l],a?a[l]:1),l=(s-1)*n+e-3,P(t,o[l],a?a[l]:1),l=s*n+e-3,P(t,o[l],a?a[l]:1),l=(s+1)*n+e-3,P(t,o[l],a?a[l]:1),r[s*n+e]=C(t)}r[s*n+e+1]=r[s*n+e]}for(let s=0;s<n;s++)r[s]=r[n+s]=r[2*n+s],r[(l-1)*n+s]=r[(l-2)*n+s];return e.updateStatistics(),e}function C(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function P(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function S(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function R(t,n,l){let{x:i,y:o}=n;const{width:r,height:a}=l;if(0===i&&0===o&&a===t.height&&r===t.width)return t;const{width:h,height:f}=t,c=Math.max(0,o),u=Math.max(0,i),p=Math.min(i+r,h),x=Math.min(o+a,f);if(p<0||x<0||!s(t))return null;i=Math.max(0,-i),o=Math.max(0,-o);const{pixels:d}=t,m=r*a,g=d.length,y=[];for(let s=0;s<g;s++){const n=d[s],l=e.createEmptyBand(t.pixelType,m);for(let t=c;t<x;t++){const e=t*h;let s=(t+o-c)*r+i;for(let t=u;t<p;t++)l[s++]=n[e+t]}y.push(l)}const w=new Uint8Array(m),k=t.mask;for(let e=c;e<x;e++){const t=e*h;let n=(e+o-c)*r+i;for(let e=u;e<p;e++)w[n++]=k?k[t+e]:1}const M=new e({width:l.width,height:l.height,pixelType:t.pixelType,pixels:y,mask:w});return M.updateStatistics(),M}function I(t,n=!0){if(!s(t))return null;const{pixels:l,width:i,height:o,mask:r,pixelType:a}=t,h=[],f=Math.round(i/2),c=Math.round(o/2),u=o-1,p=i-1;for(let s=0;s<l.length;s++){const t=l[s],r=e.createEmptyBand(a,f*c);let x=0;for(let e=0;e<o;e+=2)for(let l=0;l<i;l+=2){const o=t[e*i+l];if(n){const n=l===p?o:t[e*i+l+1],s=e===u?o:t[e*i+l+i],a=l===p?s:e===u?n:t[e*i+l+i+1];r[x++]=(o+n+s+a)/4}else r[x++]=o}h.push(r)}let x=null;if(null!=r){x=new Uint8Array(f*c);let t=0;for(let e=0;e<o;e+=2)for(let l=0;l<i;l+=2){const o=r[e*i+l];if(n){const n=l===p?o:r[e*i+l+1],s=e===u?o:r[e*i+l+i],a=l===p?s:e===u?n:r[e*i+l+i+1];x[t++]=o*n*s*a?1:0}else x[t++]=o}}return new e({width:f,height:c,pixelType:a,pixels:h,mask:x})}function D(t,e,n){if(!s(t))return null;const{width:l,height:i}=e;let{width:o,height:r}=t;const a=new Map,h={x:0,y:0},f=null==n?1:1+n;let c=t;for(let s=0;s<f;s++){const t=Math.ceil(o/l),n=Math.ceil(r/i);for(let o=0;o<n;o++){h.y=o*i;for(let n=0;n<t;n++){h.x=n*l;const t=R(c,h,e);a.set(`${s}/${o}/${n}`,t)}}s<f-1&&(c=I(c)),o=Math.round(o/2),r=Math.round(r/2)}return a}function _(t,e,n,l,i=0){const{width:o,height:s}=t,{width:r,height:a}=e,h=l.cols,f=l.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,d,m,g,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),T=new Uint32Array(M),b=new Uint32Array(M);let B,v,C=0;for(let P=0;P<u;P++)for(let t=0;t<c;t++){p=12*(P*c+t),x=n[p],d=n[p+1],m=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){C=(P*f+e)*k+t*h,v=(e+.5)/f;for(let t=0;t<e;t++)B=(t+.5)/h,A[C+t]=(x*B+d*v+m)*o+i,U[C+t]=(g*B+y*v+w)*s+i,T[C+t]=Math.floor(A[C+t]),b[C+t]=Math.floor(U[C+t])}p+=6,x=n[p],d=n[p+1],m=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){C=(P*f+e)*k+t*h,v=(e+.5)/f;for(let t=e;t<h;t++)B=(t+.5)/h,A[C+t]=(x*B+d*v+m)*o+i,U[C+t]=(g*B+y*v+w)*s+i,T[C+t]=Math.floor(A[C+t]),b[C+t]=Math.floor(U[C+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:T,offsets_yi:b,gridWidth:k}}function W(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:s}=_(t,t,n,{rows:l[0],cols:l[1]}),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<r;t++){const e=c*s+t,n=0===c?e:e-s,l=c===a-1?e:e+s,u=i[n]-i[l],p=o[l]-o[n];if(isNaN(u)||isNaN(p))h[c*r+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*r+t]=e}}return h}function E(t,n,l,i,o="nearest"){if(!s(t))return null;"majority"===o&&(t=v(t));const{pixels:r,mask:a,bandMasks:h,pixelType:f}=t,c=t.width,u=t.height,p=e.getPixelArrayConstructor(f),x=r.length,{width:d,height:m}=n;let g=!1;for(let e=0;e<l.length;e+=3)-1===l[e]&&-1===l[e+1]&&-1===l[e+2]&&(g=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=_({width:c,height:u},n,l,i,"majority"===o?.5:0);let U;const T=(t,e,n,l)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let o=0;o<m;o++){U=o*A;for(let s=0;s<d;s++){if(y[U]<0||w[U]<0)t[o*d+s]=0;else if(l)t[o*d+s]=e[k[U]+M[U]*c];else{const l=Math.floor(y[U]),r=Math.floor(w[U]),a=Math.ceil(y[U]),h=Math.ceil(w[U]),f=y[U]-l,u=w[U]-r;if(!n||n[l+r*c]&&n[a+r*c]&&n[l+h*c]&&n[a+h*c]){const n=(1-f)*e[l+r*c]+f*e[a+r*c],p=(1-f)*e[l+h*c]+f*e[a+h*c];t[o*d+s]=(1-u)*n+u*p+i}else t[o*d+s]=e[k[U]+M[U]*c]}U++}}},b=[];let B;const C=h?.length===x,P=[];for(let e=0;e<x;e++){if(C){const t=new Uint8Array(d*m);T(t,h[e],h[e],!0),P.push(t)}B=new p(d*m),T(B,r[e],C?h[e]:a,"nearest"===o||"majority"===o),b.push(B)}const S=new e({width:d,height:m,pixelType:f,pixels:b,bandMasks:C?P:void 0});if(null!=a)S.mask=new Uint8Array(d*m),T(S.mask,a,a,!0);else if(g){S.mask=new Uint8Array(d*m);for(let t=0;t<d*m;t++)S.mask[t]=y[t]<0||w[t]<0?0:1}return S.updateStatistics(),S}t.approximateTransform=E,t.clip=R,t.colorize=f,t.compositeBands=a,t.createColormapLUT=h,t.createMaskLUT=k,t.createRemapLUT=w,t.extractBands=r,t.getClipBounds=M,t.getLocalArithmeticNorthRotations=W,t.interpolateOffsets=_,t.isValidPixelBlock=s,t.lookupBandValues=u,t.lookupPixels=c,t.mask=y,t.maxMapSizeGpu=o,t.mosaic=T,t.mosaicPixelData=A,t.remap=x,t.remapColor=p,t.resampleByMajority=v,t.setValidBoundary=B,t.split=D,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
