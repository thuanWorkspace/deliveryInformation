/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../core/jsonMap","../PixelBlock","./pixelUtils"],(function(t,e,n,r){"use strict";const o=new Map;o.set("meter-per-second",1),o.set("kilometer-per-hour",.277778),o.set("knots",.514444),o.set("feet-per-second",.3048),o.set("mile-per-hour",.44704);const i=180/Math.PI,a=5,s=new e.JSONMap({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function l(t,e){return o.get(t)/o.get(e)||1}function c(t){return(450-t)%360}function h(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*i;return a=(360+a)%360,"geographic"===e&&(a=c(a)),[o,a]}function u(t,e="geographic"){let n=t[1];"geographic"===e&&(n=c(n)),n%=360;const r=t[0];return[r*Math.cos(n/i),r*Math.sin(n/i)]}function f(t,e,n,o="geographic"){if(!r.isValidPixelBlock(t)||null==n)return t;const i="vector-magdir"===e?t.clone():p(t,e),a=i.pixels[1];for(let r=0;r<a.length;r++)a[r]="geographic"===o?(a[r]+n[r]+270)%360:(a[r]+360-n[r])%360;return"vector-magdir"===e?i:p(i,"vector-magdir")}function p(t,e,o="geographic",i=1){if(!r.isValidPixelBlock(t))return t;const{pixels:a,width:s,height:l}=t,c=s*l,f=a[0],p=a[1],m=t.pixelType.startsWith("f")?t.pixelType:"f32",d=n.createEmptyBand(m,c),g=n.createEmptyBand(m,c);let M=0;for(let n=0;n<l;n++)for(let t=0;t<s;t++)"vector-uv"===e?([d[M],g[M]]=h([f[M],p[M]],o),d[M]*=i):([d[M],g[M]]=u([f[M],p[M]],o),d[M]*=i,g[M]*=i),M++;const x=new n({pixelType:m,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[d,g]});return x.updateStatistics(),x}function m(t,e,n=1){if(1===n||!r.isValidPixelBlock(t))return t;const o=t.clone(),{pixels:i,width:a,height:s}=o,l=i[0],c=i[1];let h=0;for(let r=0;r<s;r++)for(let t=0;t<a;t++)"vector-uv"===e?(l[h]*=n,c[h]*=n):l[h]*=n,h++;return o.updateStatistics(),o}function d(t,e,n,r,o){if(null==o||!o.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const i=o.xmin,a=o.ymax,s=(t.xmax-t.xmin)/e*r,l=(t.ymax-t.ymin)/n*r,c=(s+l)/2;return t.xmin=i+Math.floor((t.xmin-i)/s)*s,t.xmax=i+Math.ceil((t.xmax-i)/s)*s,t.ymin=a+Math.floor((t.ymin-a)/l)*l,t.ymax=a+Math.ceil((t.ymax-a)/l)*l,{extent:t,width:Math.round(t.width/s),height:Math.round(t.height/l),resolution:c}}const g=M(0,0,0);function M(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,i=13*o,a=-7*o,s=-2*o,l=-16*o,c=21.75,[h,u]=k(0,e+i,n,c),[f,p]=k(t-5.5,e+a,n,c),[m,d]=k(t+5.5,e+a,n,c),[g,M]=k(t-1.5,e+s,n,c),[x,w]=k(t+1.5,e+s,n,c),[y,P]=k(t-1.5,e+l,n,c),[b,v]=k(t+1.5,e+l,n,c);return[h,u,f,p,g,M,x,w,m,d,y,P,b,v]}function x(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,i=5*o,s=20*o,l=25*o,c=45,h=0,u=0,f=2,p=0,m=f*o,d=n?1:-1,g=r/2*d;let[M,x]=[h+g,u-s],[w,y]=[M+f*d,x],[P,b]=[w-p*d,y+m],[v,I]=[h-g,u-l],[S,A]=[v+p*d,I-m],_=Math.ceil(t/a),F=Math.floor(_/10);_-=8*F;const U=[],D=[];for(let a=0;a<_/2;a++,F--){F<=0&&_%2==1&&a===(_-1)/2&&(v=h,S=v+p*d,I=(I+x)/2,A=I-m);const[t,n]=k(v,I,e,c);if(F>0){const[r,o]=k(w,I,e,c),[i,a]=k(M,x,e,c);U.push(r),U.push(o),U.push(t),U.push(n),U.push(i),U.push(a)}else{const[r,o]=k(w,y,e,c),[i,a]=k(P,b,e,c),[s,l]=k(S,A,e,c);D.push(t),D.push(n),D.push(s),D.push(l),D.push(i),D.push(a),D.push(r),D.push(o)}I+=i,x+=i,y+=i,b+=i,A+=i}const[V,T]=k(h+g,u+s,e,c),B=(r/2+f)*d,[N,O]=k(h+B,u+s,e,c),[J,C]=k(h+g,u-l,e,c),[q,E]=k(h+B,u-l,e,c);return{pennants:U,barbs:D,shaft:[V,T,N,O,J,C,q,E]}}function k(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+i-n)%(2*Math.PI)]}const w=[0,1,3,6,10,16,21,27,33,40,47,55,63],y=[0,.5,1,1.5,2],P=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function b(t,e,n,r){const o=l(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*o)break}else if(t<=e[i]*o)break;return Math.min(i-1,e.length-2)}function v(t,e,n,r,o){let i=0;switch(e){case"beaufort_kn":i=b(t,w,"knots",n);break;case"beaufort_km":i=b(t,w,"kilometer-per-hour",n);break;case"beaufort_ft":i=b(t,w,"feet-per-second",n);break;case"beaufort_m":i=b(t,w,"meter-per-second",n);break;case"classified_arrow":i=b(t,o??[],r,n);break;case"ocean_current_m":i=b(t,y,"meter-per-second",n);break;case"ocean_current_kn":i=b(t,P,"knots",n)}return i}function I(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:i}=e,a=s.fromJSON(r),l=s.fromJSON(o),c=7*6,h=15;let u=0,f=0;const{width:p,height:m,mask:d}=t,x=t.pixels[0],k=t.pixels[1],w=null!=d?d.filter((t=>t>0)).length:p*m,y=new Float32Array(w*c),P=new Uint32Array(h*w),b=e.invertDirection?M(0,0,0,!1):g;for(let s=0;s<m;s++)for(let t=0;t<p;t++){const e=s*p+t;if(!d||d[s*p+t]){const r=(k[e]+360)%360/180*Math.PI,o=v(x[e],n,a,l,i);for(let n=0;n<b.length;n+=2)y[u++]=(t+.5)/p,y[u++]=(s+.5)/m,y[u++]=b[n],y[u++]=b[n+1]+r,y[u++]=o,y[u++]=x[e];const h=7*(u/c-1);P[f++]=h,P[f++]=h+1,P[f++]=h+2,P[f++]=h+0,P[f++]=h+4,P[f++]=h+3,P[f++]=h+0,P[f++]=h+2,P[f++]=h+3,P[f++]=h+2,P[f++]=h+5,P[f++]=h+3,P[f++]=h+5,P[f++]=h+6,P[f++]=h+3}}return{vertexData:y,indexData:P}}const S=[];function A(t,e){if(0===S.length)for(let a=0;a<30;a++)S.push(x(5*a,0,!e.invertDirection));const n=l(s.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:i}=t,c=t.pixels[0],h=t.pixels[1],u=6,f=[],p=[];let m=0,d=0;for(let s=0;s<o;s++)for(let t=0;t<r;t++){const e=s*r+t,l=c[e]*n;if((!i||i[s*r+t])&&l>=a){const n=(h[e]+360)%360/180*Math.PI,{pennants:i,barbs:a,shaft:c}=S[Math.min(Math.floor(l/5),29)];if(i.length+a.length===0)continue;let g=f.length/u;const M=(t+.5)/r,x=(s+.5)/o;for(let t=0;t<i.length;t+=2)f[m++]=M,f[m++]=x,f[m++]=i[t],f[m++]=i[t+1]+n,f[m++]=0,f[m++]=l;for(let t=0;t<a.length;t+=2)f[m++]=M,f[m++]=x,f[m++]=a[t],f[m++]=a[t+1]+n,f[m++]=0,f[m++]=l;for(let t=0;t<c.length;t+=2)f[m++]=M,f[m++]=x,f[m++]=c[t],f[m++]=c[t+1]+n,f[m++]=0,f[m++]=l;for(let t=0;t<i.length/6;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,g+=3;for(let t=0;t<a.length/8;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+2,p[d++]=g+3,g+=4;p[d++]=g+0,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+3,p[d++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function _(t,e){const n=4*6;let r=0,o=0;const{width:i,height:c,mask:h}=t,u=t.pixels[0],f=[],p=[],m=l(s.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?a:Number.MAX_VALUE;for(let a=0;a<c;a++)for(let t=0;t<i;t++){const e=u[a*i+t]*m;if((!h||h[a*i+t])&&e<d){for(let n=0;n<4;n++)f[r++]=(t+.5)/i,f[r++]=(a+.5)/c,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=e;const s=4*(r/n-1);p[o++]=s,p[o++]=s+1,p[o++]=s+2,p[o++]=s+1,p[o++]=s+2,p[o++]=s+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function F(t,e){return"simple_scalar"===e.style?_(t,e):"wind_speed"===e.style?A(t,e):I(t,e)}function U(t,e,r,o=[0,0],i=.5){const{width:a,height:s,mask:l}=t,[c,f]=t.pixels,[p,m]=o,d=Math.round((a-p)/r),g=Math.round((s-m)/r),M=d*g,x=new Float32Array(M),k=new Float32Array(M),w=new Uint8Array(M),y="vector-uv"===e;for(let n=0;n<g;n++)for(let t=0;t<d;t++){let e=0;const o=n*d+t,g=Math.max(0,n*r+m),M=Math.max(0,t*r+p),P=Math.min(s,g+r),b=Math.min(a,M+r);for(let t=g;t<P;t++)for(let n=M;n<b;n++){const r=t*a+n;if(!l||l[r]){e++;const t=y?[c[r],f[r]]:[c[r],(360+f[r])%360],[n,i]=y?t:u(t);x[o]+=n,k[o]+=i}}if(e>=(P-g)*(b-M)*(1-i)){w[o]=1;const[t,n]=h([x[o]/e,k[o]/e]);x[o]=t,k[o]=n}else w[o]=0,x[o]=0,k[o]=0}const P=new n({width:d,height:g,pixels:[x,k],mask:w});return P.updateStatistics(),P}t.convertToLocalDirections=f,t.convertVectorFieldData=p,t.convertVectorFieldUnit=m,t.createVFMesh=F,t.createVFMeshScalar=_,t.getUnitConversionFactor=l,t.sampleVectorField=U,t.snapImageToSymbolTile=d,t.unitKebabDict=s,t.uvComponentToVector=h,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
