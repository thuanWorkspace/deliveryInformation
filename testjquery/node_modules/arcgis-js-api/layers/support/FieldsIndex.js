/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../core/Error","../../core/JSONSupport","../../core/Logger","../../core/MapUtils","../../core/sql/UnknownTimeZone","./fieldUtils","../../time/timeZoneUtils","../../chunks/datetime"],(function(e,i,t,n,s,l,r,d){"use strict";function o(e){return"timeZone"in e}function a(e){return"timeZone"in e}function u(e){return"dateFieldsTimeZone"in e}const m=new Map;class f{static fromJSON(e){return new f(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new f(e.fields??[],p(e))}static fromLayerJSON(e){return new f(e.fields??[],p(e))}constructor(e=[],i){this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=i?new Map(i):null;const t=[];for(const n of this.fields){const e=n?.name,i=c(e);if(e&&i){const s=F(e);this._fieldsMap.set(e,n),this._fieldsMap.set(s,n),this._normalizedFieldsMap.set(i,n),t.push(`${s}:${n.type}:${this._timeZoneByFieldName?.get(e)}`),l.isDateField(n)?(this.dateFields.push(n),this._dateFieldsSet.add(n)):l.isNumericField(n)&&(this._numericFieldsSet.add(n),this.numericFields.push(n)),l.isObjectIDField(n)||l.isGlobalIDField(n)||(n.editable=null==n.editable||!!n.editable,n.nullable=null==n.nullable||!!n.nullable)}}t.sort(),this.uid=t.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)l.isObjectIDField(e)||l.isGlobalIDField(e)||e.nullable||void 0!==l.getFieldDefaultValue(e)||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===e?.uid}has(e){return null!=this.get(e)}get(e){if(!e)return;let i=this._fieldsMap.get(e);return i||(i=this._fieldsMap.get(F(e))??this._normalizedFieldsMap.get(c(e)),i&&this._fieldsMap.set(e,i),i)}getTimeZone(i){const n=this.get(i&&"string"!=typeof i?i.name:i);return n?this._timeZoneByFieldName?this._timeZoneByFieldName.get(n.name):"date"===n.type||"esriFieldTypeDate"===n.type?(t.getLogger("esri.layers.support.FieldsIndex").error(new e("getTimeZone:no-timezone-information",`no time zone information for field '${n.name}'`)),r.utc):h.has(n.type)?r.unknown:null:null}getLuxonTimeZone(e){const i=this.getTimeZone(e);return i?i===r.unknown?s.UnknownTimeZone.instance:i===r.utc?d.FixedOffsetZone.utcInstance:n.getOrCreateMapValue(m,i,(()=>d.IANAZone.create(i))):null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return l.isTimeOnlyField(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){return this.get(e)?.name??void 0}toJSON(){return{fields:this.fields.map((e=>i.isSerializable(e)?e.toJSON():e)),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function F(e){return e.trim().toLowerCase()}function c(e){return l.normalizeFieldName(e)?.toLowerCase()??""}const h=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function p(e){const i=new Map;if(!e.fields)return i;const t=!0===e.datesInUnknownTimezone,{timeInfo:n,editFieldsInfo:s}=e,l=(n?"startField"in n?n.startField:n.startTimeField:"")??"",d=(n?"endField"in n?n.endField:n.endTimeField:"")??"",m=u(e)?e.dateFieldsTimeZone??null:e.dateFieldsTimeReference?r.fromTimeReference(e.dateFieldsTimeReference):null,f=s?o(s)?s.timeZone??m:s.dateFieldsTimeReference?r.fromTimeReference(s.dateFieldsTimeReference):m??r.utc:null,c=n?a(n)?n.timeZone??m:n.timeReference?r.fromTimeReference(n.timeReference):m:null,p=new Map([[F(s?.creationDateField??""),f],[F(s?.editDateField??""),f],[F(l),c],[F(d),c]]);for(const{name:o,type:a}of e.fields)if(h.has(a))i.set(o,r.unknown);else if("date"!==a&&"esriFieldTypeDate"!==a)i.set(o,null);else if(t)i.set(o,r.unknown);else{const e=p.get(F(o??""))??m;i.set(o,e)}return i}return f}));
