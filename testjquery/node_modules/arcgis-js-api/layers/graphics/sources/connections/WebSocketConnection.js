/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/tslib.es6","../../../../core/Error","../../../../core/Logger","../../../../core/promiseUtils","../../../../core/urlUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../geometry/support/zscale","../../../support/StreamConnection"],(function(e,t,o,s,r,n,c,i,a,l,d,h,u){"use strict";var g;!function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"}(g||(g={})),e.WebSocketConnection=class extends u{constructor(e){super(),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:o,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=h.getGeometryZScaler(t,s,o),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),null!=this._websocket&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(null==this._websocket)return"disconnected";switch(this._websocket.readyState){case g.CONNECTING:case g.OPEN:return"connected";case g.CLOSING:case g.CLOSED:return"disconnected"}}sendMessageToSocket(e){null!=this._websocket?this._websocket.send(JSON.stringify(e)):this._outstandingMessages.push(e)}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,null!=this._websocket&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,c=0){try{if(this.destroyed)return;const t=n.addQueryParameters(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(i){const n=t/1e3;return this._config.maxReconnectionAttempts&&c>=this._config.maxReconnectionAttempts?(s.getLogger(this).error(new o("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(s.getLogger(this).error(new o("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,i)),await r.after(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),c+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=e=>{try{const t=JSON.parse(e.data);this._onMessage(t)}catch(t){return void s.getLogger(this).error(new o("websocket-connection","Failed to parse message, invalid JSON",{error:t}))}}}_createWebSocket(e){return new Promise(((t,o)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=e=>this._onClose(e),s.onerror=e=>this._onError(e),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=e=>{s.onopen=s.onclose=null,o(e)}}))}async _handshake(e=1e4){const t=this._websocket;if(null==t)return;const n=r.createResolver(),c=t.onmessage,{filter:i,outFields:a,spatialReference:l}=this._config;return n.timeout(e),t.onmessage=e=>{let r=null;try{r=JSON.parse(e.data)}catch(d){}r&&"object"==typeof r||(s.getLogger(this).error(new o("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),n.reject(),this.destroy()),r.spatialReference?.wkid!==l?.wkid&&(s.getLogger(this).error(new o("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,e.data)),n.reject(),this.destroy()),"json"!==r.format&&(s.getLogger(this).error(new o("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),n.reject(),this.destroy()),i&&r.filter!==i&&s.getLogger(this).error(new o("websocket-connection","Tried to set filter, but server doesn't support it")),a&&r.outFields!==a&&s.getLogger(this).error(new o("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=c;for(const o of this._outstandingMessages)t.send(JSON.stringify(o));this._outstandingMessages=[],n.resolve()},t.send(JSON.stringify({filter:i,outFields:a,format:"json",spatialReference:{wkid:l.wkid}})),n.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),s.getLogger(this).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&s.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}},t.__decorate([c.property()],e.WebSocketConnection.prototype,"connectionStatus",null),t.__decorate([c.property()],e.WebSocketConnection.prototype,"errorString",void 0),e.WebSocketConnection=t.__decorate([d.subclass("esri.layers.graphics.sources.connections.WebSocketConnection")],e.WebSocketConnection),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
