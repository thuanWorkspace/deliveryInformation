/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/has","../../../core/Loadable","../../../core/promiseUtils","../../../core/workers/workers","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/typeUtils","./support/clientSideDefaults","../../ogc/wfsUtils","../../../rest/support/FeatureSet","../../../time/timeZoneUtils","../../../geometry/Extent"],(function(e,t,r,a,o,s,i,n,c,l,u,p,y,d,m,f,h,S){"use strict";e.WFSSource=class extends s{constructor(){super(...arguments),this._connection=null,this.capabilities=d.createCapabilities(!1,!1),this.type="wfs",this.refresh=i.debounce((async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return f.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:S.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){const{url:t,customParameters:r,name:o,namespaceUri:s,fields:i,geometryType:n,swapXY:c}=this.layer,l="defaults"===this.layer.originOf("spatialReference")?void 0:this.layer.spatialReference;if(!t)throw new a("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await m.getCapabilities(t,{customParameters:r,...e}));const u=["fields","geometryType","name","namespaceUri","swapXY"].some((e=>null==this.layer[e]))?await m.getWFSLayerInfo(this.wfsCapabilities,o,s,{spatialReference:l,customParameters:r,signal:e?.signal}):{...m.prepareWFSLayerFields(i??[]),geometryType:n,name:o,namespaceUri:s,spatialReference:l,swapXY:c},p=m.findFeatureType(this.wfsCapabilities.readFeatureTypes(),u.name,u.namespaceUri),d=y.featureGeometryTypeKebabDictionary.toJSON(u.geometryType);return{customParameters:r,featureType:p,fields:u.fields?.map((e=>e.toJSON()))??[],geometryField:u.geometryField,geometryType:d,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:u.objectIdField,spatialReference:u.spatialReference?.toJSON(),swapXY:!!u.swapXY}}async _startWorker(e){const[t,r]=await i.eachAlways([this._createLoadOptions(e),n.open("WFSSourceWorker",{...e,strategy:o("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),a=t.error||r.error||null,s=r.value||null;if(a)throw s&&s.close(),a;const c=t.value;this._connection=r.value;const l=(await this._connection.invoke("load",c,e)).extent;this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:h.utc},extent:l,fields:c.fields,geometryType:c.geometryType,objectIdField:c.objectIdField,geometryField:c.geometryField,drawingInfo:d.createDrawingInfo(c.geometryType),name:c.featureType.title,wfsInfo:{name:c.featureType.name,featureUrl:c.getFeatureUrl,maxFeatures:3e3,swapXY:c.swapXY,supportedSpatialReferences:c.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:c.featureType.namespaceUri}}}},t.__decorate([c.property()],e.WFSSource.prototype,"capabilities",void 0),t.__decorate([c.property({constructOnly:!0})],e.WFSSource.prototype,"layer",void 0),t.__decorate([c.property()],e.WFSSource.prototype,"sourceJSON",void 0),t.__decorate([c.property()],e.WFSSource.prototype,"type",void 0),t.__decorate([c.property()],e.WFSSource.prototype,"wfsCapabilities",void 0),e.WFSSource=t.__decorate([p.subclass("esri.layers.graphics.sources.WFSSource")],e.WFSSource),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
