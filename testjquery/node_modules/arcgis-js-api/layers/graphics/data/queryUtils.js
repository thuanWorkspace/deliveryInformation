/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","exports","../../../core/jsonMap","../../../core/unitUtils","../../../geometry/projection","../../../geometry/support/extentUtils","../../../geometry/support/jsonUtils","../../../geometry/support/normalizeUtils","../../../geometry/support/spatialReferenceUtils","./projectionSupport"],(function(e,t,i,n,r,o,a,s,l,c){"use strict";const u=new i.JSONMap({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),f=Object.freeze({});async function m(e,t,i){const{outFields:n,orderByFields:r,groupByFieldsForStatistics:o,outStatistics:a}=e;if(n)for(let s=0;s<n.length;s++)n[s]=n[s].trim();if(r)for(let s=0;s<r.length;s++)r[s]=r[s].trim();if(o)for(let s=0;s<o.length;s++)o[s]=o[s].trim();if(a)for(let s=0;s<a.length;s++)a[s].onStatisticField&&(a[s].onStatisticField=a[s].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),p(e,t,i)}async function p(e,t,i){if(!e)return null;let{where:n}=e;if(e.where=n=n?.trim(),(!n||/^1 *= *1$/.test(n)||t&&t===n)&&(e.where=null),!e.geometry)return e;let r=await S(e);if(e.distance=0,e.units=null,"esriSpatialRelEnvelopeIntersects"===e.spatialRel){const{spatialReference:t}=e.geometry;r=o.getGeometryExtent(r),r.spatialReference=t}if(r){await c.checkProjectionSupport(r.spatialReference,i),r=g(r,i);const t=(await s.normalizeCentralMeridian(a.fromJSON(r)))[0];if(null==t)throw f;const n="quantizationParameters"in e&&e.quantizationParameters?.tolerance||"maxAllowableOffset"in e&&e.maxAllowableOffset||0,o=n&&y(r,i)?{densificationStep:8*n}:void 0,l=t.toJSON(),u=c.project(l,l.spatialReference,i,o);if(!u)throw f;u.spatialReference=i,e.geometry=u}return e}function y(e,t){if(!e)return!1;const i=e.spatialReference;return(a.isExtent(e)||a.isPolygon(e)||a.isPolyline(e))&&!l.equals(i,t)&&!r.canProjectWithoutEngine(i,t)}function g(e,t){const i=e.spatialReference;return y(e,t)&&a.isExtent(e)?{spatialReference:i,rings:[[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]]}:e}async function S(e){const{distance:t,units:i}=e,r=e.geometry;if(null==t||"vertexAttributes"in r)return r;const o=r.spatialReference,a=i?u.fromJSON(i):n.getUnitString(o),s=o&&(l.isGeographic(o)||l.isWebMercator(o))?r:await c.checkProjectionSupport(o,l.WGS84).then((()=>c.project(r,l.WGS84)));return(await R())(s.spatialReference,s,t,a)}async function R(){return(await new Promise(((t,i)=>e(["../../../geometry/geometryEngineJSON"],t,i)))).geodesicBuffer}t.normalizeQuery=m,t.normalizeQueryLike=p,t.queryEngineEmptyResult=f,t.unitsKebabDict=u,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
