/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../PopupTemplate","../renderers/ClassBreaksRenderer","../renderers/DictionaryRenderer","../renderers/DotDensityRenderer","../renderers/HeatmapRenderer","../renderers/PieChartRenderer","../renderers/Renderer","../renderers/SimpleRenderer","../renderers/UniqueValueRenderer","../renderers/support/jsonUtils","../renderers/support/types","../request","../symbols","../core/Clonable","../core/Collection","../core/Error","../core/lang","../core/Logger","../core/MultiOriginJSONSupport","../core/object","../core/promiseUtils","../core/sql","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/layerContainerType","../form/FormTemplate","../geometry/SpatialReference","./Layer","./graphics/sources/MemorySource","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/EditBusLayer","./mixins/FeatureEffectLayer","./mixins/FeatureLayerBase","./mixins/FeatureReductionLayer","./mixins/OperationalLayer","./mixins/OrderedLayer","./mixins/PortalLayer","./mixins/PublishableLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./support/arcgisLayerUrl","./support/commonProperties","./support/featureLayerUtils","./support/FeatureTemplate","./support/FeatureType","./support/fieldProperties","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","./support/serviceCapabilitiesUtils","./support/TimeInfo","./support/versionUtils","./support/source/DataLayerSource","../renderers/support/styleUtils","../rest/support/FeatureSet","../rest/support/Query","../rest/support/TopFeaturesQuery","../support/popupUtils","../webdoc/interfaces","../webdoc/support/opacityUtils"],(function(e,r,t,i,o,a,s,n,l,p,d,u,y,c,h,f,m,b,_,g,w,v,S,F,T,I,E,L,D,x,P,j,O,M,q,C,R,A,V,U,Q,N,G,J,$,B,W,z,K,Z,H,k,X,Y,ee,re,te,ie,oe,ae,se,ne,le,pe,de,ue,ye,ce,he,fe){"use strict";const me=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),be="FeatureLayer",_e="esri.layers.FeatureLayer",ge=g.getLogger(_e);function we(e,r){return new b("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${r}`,{layer:e})}function ve(e){return e&&e instanceof m}const Se=re.defineFieldProperties();function Fe(e,r,t){const i=!!t?.writeLayerSchema;return{enabled:i,ignoreOrigin:i}}let Te=class extends(N.FeatureLayerBase(G.FeatureReductionLayer(Q.FeatureEffectLayer(W.PublishableLayer(U.EditBusLayer(A.BlendLayer($.OrderedLayer(Z.TemporalLayer(K.ScaleRangeLayer(z.RefreshableLayer(R.ArcGISService(J.OperationalLayer(B.PortalLayer(w.MultiOriginJSONMixin(V.CustomParametersMixin(C.APIKeyMixin(f.ClonableMixin(M)))))))))))))))))){constructor(...r){super(...r),this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=O.WGS84,this.subtypeCode=null,this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=S.debounce((async(r,t,i)=>{const{save:o,saveAs:a}=await new Promise(((r,t)=>e(["./save/featureLayerUtils"],r,t)));switch(r){case he.SaveOperationType.SAVE:return o(this,t);case he.SaveOperationType.SAVE_AS:return a(this,i,t)}}))}destroy(){this.source?.destroy()}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(r).then((e=>this.initLayerProperties(e)))),Promise.resolve(this);const t=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(S.throwIfAbortError).then((async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const e=await this._fetchFirstValidLayerId(r);null!=e&&(this.layerId=e)}if(!this.url&&!this._hasMemorySource())throw new b("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(r))})).then((()=>X.ensureLayerCredential(this,"load",e)));return this.addResolvingPromise(t),Promise.resolve(this)}readCapabilities(e,r){return r=r.layerDefinition||r,ae.getFeatureLayerCapabilities(r,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,r){return this._readEditingEnabled(r,!1)}readEditingEnabledFromWebMap(e,r,t){return this._readEditingEnabled(r,!0,t)}writeEditingEnabled(e,r){this._writeEditingEnabled(e,r,!1)}writeEditingEnabledToWebMap(e,r,t,i){this._writeEditingEnabled(e,r,!0,i)}get effectiveEditingEnabled(){return X.computeEffectiveEditingEnabled(this)}readIsTable(e,r){return"Table"===(r=r?.layerDefinition??r).type||!r.geometryType}writeIsTable(e,r,t,i){i?.writeLayerSchema&&v.setDeepValue(t,e?"Table":"Feature Layer",r)}readGlobalIdField(e,r){return X.readGlobalIdField(r.layerDefinition||r)}readObjectIdField(e,r){return X.readObjectIdField(r.layerDefinition||r)}get parsedUrl(){const e=T.urlToObject(this.url);return null!=e&&(null!=this.dynamicDataSource?e.path=T.join(e.path,"dynamicLayer"):null!=this.layerId&&(e.path=T.join(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){te.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,r,t){r=r.layerDefinition||r;const i=r.drawingInfo?.renderer;if(i){const e=u.read(i,r,t)??void 0;return e||ge.error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:t}),e}return X.createDefaultRenderer(r,t)}set source(e){const r=this._get("source");r!==e&&(ve(r)&&this._resetMemorySource(r),ve(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof m?new q.MemorySource({layer:this,items:e}):e:null}readSource(e,r){const t=de.fromJSON(r.featureSet);return new q.MemorySource({layer:this,items:t?.features??[]})}readTemplates(e,r){const t=r.editFieldsInfo,i=t?.creatorField,o=t?.editorField;return e=e?.map((e=>Y.fromJSON(e))),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,r){const t=r.layerDefinition?.name??r.name,i=r.title||r.layerDefinition?.title;if(t){const e=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return this.url?H.titleFromUrlAndName(this.url,t):t;let r=t;if(!r&&this.url){const e=H.parse(this.url);null!=e&&(r=e.title)}if(!r)return;return"item-title-and-service-name"===this.sublayerTitleMode&&e&&e!==r&&(r=e+" - "+r),H.cleanTitle(r)}if("item-title"===this.sublayerTitleMode&&i)return i}readTitleFromWebMap(e,r){return r.title||r.layerDefinition?.name}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return t}readTypes(e,r){e=(r=r.layerDefinition||r).types;const t=r.editFieldsInfo,i=t?.creatorField,o=t?.editorField;return e?.map((e=>(e=ee.fromJSON(e),this._fixTemplates(e.templates,i),this._fixTemplates(e.templates,o),e)))}readVisible(e,r){return null!=r.layerDefinition?.defaultVisibility?!!r.layerDefinition.defaultVisibility:null!=r.visibility?!!r.visibility:void 0}async addAttachment(e,r){return X.addAttachment(this,e,r,be)}async updateAttachment(e,r,t){return X.updateAttachment(this,e,r,t,be)}async applyEdits(e,r){return X.applyEdits(this,e,r)}async uploadAssets(e,r){return X.uploadAssets(this,e,r)}on(e,r){return super.on(e,r)}createPopupTemplate(e){return ce.createPopupTemplate(this,e)}async createGraphicsSource(r){if(this._hasMemorySource()&&this.source)return this.source.load({signal:r});const{default:t}=await S.whenOrAbort(new Promise(((r,t)=>e(["./graphics/sources/FeatureLayerSource"],(e=>r(me(e))),t))),r);return new t({layer:this}).load({signal:r})}createQuery(){const e=X.createQuery(this);e.dynamicDataSource=this.dynamicDataSource;const r=null!=this.subtypeCode?`${this.subtypeField} = ${this.subtypeCode}`:null,t=F.sqlAnd(this.definitionExpression,r);return e.where=t||"1=1",e}async deleteAttachments(e,r){return X.deleteAttachments(this,e,r,be)}async fetchRecomputedExtents(e){return X.fetchRecomputedExtents(this,e,be)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let o=null;return t?.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(o=e),!!o)})),o}getFieldDomain(e,r){const t=r?.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,r){return X.queryAttachments(this,e,r,be)}async queryFeatures(e,r){const t=await this.load(),i=await t.source.queryFeatures(ue.from(e)??t.createQuery(),r);if(i?.features)for(const o of i.features)o.layer=o.sourceLayer=t;return i}async queryObjectIds(e,r){return X.queryObjectIds(this,e,r,be)}async queryFeatureCount(e,r){return X.queryFeatureCount(this,e,r,be)}async queryExtent(e,r){return X.queryExtent(this,e,r,be)}async queryRelatedFeatures(e,r){return X.queryRelatedFeatures(this,e,r,be)}async queryRelatedFeaturesCount(e,r){return X.queryRelatedFeaturesCount(this,e,r,be)}async queryTopFeatures(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopFeatures||!i?.query?.supportsTopFeaturesQuery)throw new b(be,"Layer source does not support queryTopFeatures capability");const o=await t.queryTopFeatures(ye.from(e),r);if(o?.features)for(const a of o.features)a.layer=a.sourceLayer=this;return o}async queryTopObjectIds(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopObjectIds||!i?.query.supportsTopFeaturesQuery)throw new b(be,"Layer source does not support queryTopObjectIds capability");return t.queryTopObjectIds(ye.from(e),r)}async queryTopFeaturesExtent(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopExtents||!i?.query?.supportsTopFeaturesQuery)throw new b(be,"Layer source does not support queryTopExtents capability");return t.queryTopExtents(ye.from(e),r)}async queryTopFeatureCount(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopCount||!i?.query?.supportsTopFeaturesQuery)throw new b(be,"Layer source does not support queryFeatureCount capability");return t.queryTopCount(ye.from(e),r)}read(e,r){const t=e.featureCollection;if(t){this.resourceInfo=e;const i=t.layers;i&&1===i.length&&(super.read(i[0],r),null!=t.showLegend&&super.read({showLegend:t.showLegend},r))}super.read(e,r),r&&"service"===r.origin&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,r){r={...r,origin:r?.origin??void 0,writeLayerSchema:r?.writeLayerSchema??this._hasMemorySource()};const{origin:t,layerContainerType:i,messages:o}=r;if(this.dynamicDataSource)return o?.push(we(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if(("web-map"===t||"web-scene"===t)&&"tables"!==i)return o?.push(we(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return o?.push(we(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&("web-map"===t||"web-scene"===t)&&"tables"===i)return o?.push(we(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,r)}clone(){if(this._hasMemorySource())throw new b(be,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&("memory"===this.source?.type||ne.serviceSupportsSpatialReference(this,e))}async save(e){return this._debouncedSaveOperations(he.SaveOperationType.SAVE,e)}async saveAs(e,r){return this._debouncedSaveOperations(he.SaveOperationType.SAVE_AS,r,e)}_readEditingEnabled(e,r,t){let i=e.layerDefinition?.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,r&&"web-map"===t?.origin&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map((e=>e.trim())).includes("editing")}_writeEditingEnabled(e,r,t,i){if(!e){const e=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";v.setDeepValue("layerDefinition.capabilities",e,r),t&&!i?.writeLayerSchema&&(r.capabilities=e)}}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}_fetchFirstValidLayerId(e){return c(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then((e=>{const r=e.data;if(r)return this.findFirstValidLayerId(r)}))}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),te.fixRendererFields(this.renderer,this.fieldsIndex),te.fixTimeInfoFields(this.timeInfo,this.fieldsIndex),pe.loadStyleRenderer(this,{origin:"service"})}async hasDataChanged(){return X.hasDataChanged(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||-1!==e.search(/\/FeatureServer\//i)||this.fields?.some((e=>"geometry"===e.type))||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,r){e&&e.forEach((e=>{const t=e.prototype?.attributes;t&&r&&delete t[r]}))}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new b("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new b("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach((e=>{e.layer=this,e.sourceLayer=this})),this.addHandles([e.on("after-add",(e=>{e.item.layer=this,e.item.sourceLayer=this})),e.on("after-remove",(e=>{e.item.layer=null,e.item.sourceLayer=null}))],"fl-source")}_resetMemorySource(e){e.forEach((e=>{e.layer=null,e.sourceLayer=null})),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};r.__decorate([L.reader("service","capabilities")],Te.prototype,"readCapabilities",null),r.__decorate([I.property({json:{origins:{"web-scene":{write:!1}},write:!0}})],Te.prototype,"charts",void 0),r.__decorate([I.property({readOnly:!0})],Te.prototype,"createQueryVersion",null),r.__decorate([I.property({json:{read:{source:"layerDefinition.copyrightText"}}})],Te.prototype,"copyright",void 0),r.__decorate([I.property({json:{read:{source:"layerDefinition.displayField"}}})],Te.prototype,"displayField",void 0),r.__decorate([I.property({types:h.symbolTypes,readOnly:!0})],Te.prototype,"defaultSymbol",void 0),r.__decorate([I.property({type:le.DataLayerSource})],Te.prototype,"dynamicDataSource",void 0),r.__decorate([I.property({type:Boolean})],Te.prototype,"editingEnabled",null),r.__decorate([L.reader(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],Te.prototype,"readEditingEnabled",null),r.__decorate([L.reader("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],Te.prototype,"readEditingEnabledFromWebMap",null),r.__decorate([x.writer(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],Te.prototype,"writeEditingEnabled",null),r.__decorate([x.writer("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],Te.prototype,"writeEditingEnabledToWebMap",null),r.__decorate([I.property({readOnly:!0})],Te.prototype,"effectiveEditingEnabled",null),r.__decorate([I.property({...Se.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:Fe}}}}})],Te.prototype,"fields",void 0),r.__decorate([I.property(Se.fieldsIndex)],Te.prototype,"fieldsIndex",void 0),r.__decorate([I.property({type:j,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],Te.prototype,"formTemplate",void 0),r.__decorate([I.property({json:{read:{source:"layerDefinition.extent"}}})],Te.prototype,"fullExtent",void 0),r.__decorate([I.property({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:Fe,writer(e,r,t){const i=e?X.geometryTypeKebabDict.toJSON(e):null;i&&v.setDeepValue(t,i,r)}}}},read:{source:"layerDefinition.geometryType",reader:X.geometryTypeKebabDict.read}}})],Te.prototype,"geometryType",void 0),r.__decorate([I.property({json:{read:{source:"layerDefinition.hasM"}}})],Te.prototype,"hasM",void 0),r.__decorate([I.property({json:{read:{source:"layerDefinition.hasZ"}}})],Te.prototype,"hasZ",void 0),r.__decorate([I.property(k.id)],Te.prototype,"id",void 0),r.__decorate([I.property({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],Te.prototype,"infoFor3D",void 0),r.__decorate([I.property({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],Te.prototype,"isTable",void 0),r.__decorate([L.reader("service","isTable",["type","geometryType"]),L.reader("isTable",["layerDefinition.type","layerDefinition.geometryType"])],Te.prototype,"readIsTable",null),r.__decorate([x.writer("web-map","isTable")],Te.prototype,"writeIsTable",null),r.__decorate([I.property(k.labelsVisible)],Te.prototype,"labelsVisible",void 0),r.__decorate([I.property({type:[ie],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:oe.reader,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:oe.reader,write:{enabled:!0,layerContainerTypes:P.excludeTables}}},name:"layerDefinition.drawingInfo.labelingInfo",read:oe.reader,write:!0}})],Te.prototype,"labelingInfo",void 0),r.__decorate([I.property((()=>{const e=_.clone(k.opacityDrawingInfo);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(e,r,t){v.setDeepValue(t,fe.opacityToTransparency(e),r)}}},e})())],Te.prototype,"opacity",void 0),r.__decorate([I.property(k.legendEnabled)],Te.prototype,"legendEnabled",void 0),r.__decorate([I.property({type:["show","hide"],json:(()=>{const e=_.clone(k.listMode.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],Te.prototype,"listMode",void 0),r.__decorate([L.reader("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],Te.prototype,"readGlobalIdField",null),r.__decorate([I.property({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:Fe}}}}})],Te.prototype,"objectIdField",void 0),r.__decorate([L.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],Te.prototype,"readObjectIdField",null),r.__decorate([I.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],Te.prototype,"operationalLayerType",void 0),r.__decorate([I.property(Se.outFields)],Te.prototype,"outFields",void 0),r.__decorate([I.property({readOnly:!0})],Te.prototype,"parsedUrl",null),r.__decorate([I.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Te.prototype,"path",void 0),r.__decorate([I.property(k.popupEnabled)],Te.prototype,"popupEnabled",void 0),r.__decorate([I.property({type:t,json:{name:"popupInfo",write:!0}})],Te.prototype,"popupTemplate",void 0),r.__decorate([I.property({readOnly:!0})],Te.prototype,"defaultPopupTemplate",null),r.__decorate([I.property({types:y.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:y.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:P.excludeTables,overridePolicy:(e,r,t)=>({ignoreOrigin:t?.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,r,t)=>({ignoreOrigin:t?.writeLayerSchema})}}})],Te.prototype,"renderer",null),r.__decorate([L.reader("service","renderer",["drawingInfo.renderer","defaultSymbol"]),L.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],Te.prototype,"readRenderer",null),r.__decorate([I.property()],Te.prototype,"resourceInfo",void 0),r.__decorate([I.property((()=>{const e=_.clone(k.screenSizePerspectiveEnabled);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],Te.prototype,"screenSizePerspectiveEnabled",void 0),r.__decorate([I.property({clonable:!1})],Te.prototype,"source",null),r.__decorate([E.cast("source")],Te.prototype,"castSource",null),r.__decorate([L.reader("portal-item","source",["featureSet"]),L.reader("web-map","source",["featureSet"])],Te.prototype,"readSource",null),r.__decorate([I.property({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],Te.prototype,"spatialReference",void 0),r.__decorate([I.property({type:Number})],Te.prototype,"subtypeCode",void 0),r.__decorate([I.property({type:[Y]})],Te.prototype,"templates",void 0),r.__decorate([L.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],Te.prototype,"readTemplates",null),r.__decorate([I.property({type:se})],Te.prototype,"timeInfo",void 0),r.__decorate([I.property()],Te.prototype,"title",void 0),r.__decorate([L.reader("service","title",["name"]),L.reader("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],Te.prototype,"readTitle",null),r.__decorate([L.reader("web-map","title",["layerDefinition.name","title"])],Te.prototype,"readTitleFromWebMap",null),r.__decorate([I.property({type:String})],Te.prototype,"sublayerTitleMode",void 0),r.__decorate([I.property({json:{read:!1}})],Te.prototype,"type",void 0),r.__decorate([I.property({type:String})],Te.prototype,"typeIdField",void 0),r.__decorate([L.reader("service","typeIdField"),L.reader("typeIdField",["layerDefinition.typeIdField"])],Te.prototype,"readTypeIdField",null),r.__decorate([I.property({type:[ee]})],Te.prototype,"types",void 0),r.__decorate([L.reader("service","types",["types"]),L.reader("types",["layerDefinition.types"])],Te.prototype,"readTypes",null),r.__decorate([I.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],Te.prototype,"visible",void 0),r.__decorate([L.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],Te.prototype,"readVisible",null),Te=r.__decorate([D.subclass(_e)],Te);return Te}));
