/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["require","../chunks/tslib.es6","../request","../core/Error","../core/JSONSupport","../core/Loadable","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../layers/mixins/EditBusLayer","../rest/utils","./support/EditMomentStack","./support/versionManagementUtils"],(function(e,t,r,n,i,s,o,a,l,d,u,c,m,g,f,p,h,v){"use strict";const V=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));let w=class extends(i.JSONSupportMixin(s)){constructor(e){super(e),this.url=null,this.sourceJSON=null,this.name=null,this.defaultVersionIdentifier=null,this.capabilities=null,this._applyEditsHandler=e=>{const{serviceUrl:t,gdbVersion:r,result:n}=e;t===this._featureServiceUrl&&n.then((e=>{const t=e.historicMoment;t&&this._addMomentToVersionItem(r,t)}))}}initialize(){this.url=o.removeTrailingSlash(this.url),this._featureServiceUrl=this.url.replace(/\/VersionManagementServer/i,"/FeatureServer"),v.versionCollection.has(this.url)||v.versionCollection.set(this.url,new Map);const e=(v.versionCollectionCount.get(this.url)??0)+1;v.versionCollectionCount.set(this.url,e),this.when().then((()=>this.addHandles(f.onApplyEditsEvent(this._applyEditsHandler))),(()=>{}))}destroy(){const e=(v.versionCollectionCount.get(this.url)??1)-1;v.versionCollectionCount.set(this.url,e),0===e&&v.versionCollection.delete(this.url),v.defaultVersionNameLookup.delete(this._featureServiceUrl)}read(e,t){this.sourceJSON=e,super.read(e,t)}readDefaultVersionIdentifier(e,t){return{name:t.defaultVersionName,guid:t.defaultVersionGuid}}writeDefaultVersionIdentifier(e,t){t.defaultVersionName=e.name,t.defaultVersionGuid=e.guid}load(e){return this.addResolvingPromise(this._fetchService(this.url,e)),Promise.resolve(this)}async createVersion(t){const[{createVersion:r},{default:n}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/createVersion"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/support/CreateVersionParameters"],(e=>t(V(e))),r)))]),i=n.from(t);return r(this.url,i)}async deleteVersion(t){const[{deleteVersion:r},{default:n}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/deleteVersion"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/support/DeleteVersionParameters"],(e=>t(V(e))),r)))]);let i;t.guid&&v.versionCollection.get(this.url)?.has(t.guid)&&(i=v.currentSessionId??void 0);const s=new n({versionName:t.name,sessionId:i});return r(this.url,s)}async getVersionInfoExtended(t){const{getVersion:r}=await new Promise(((t,r)=>e(["../rest/versionManagement/getVersion"],t,r)));return r(this.url,t.guid)}async getVersionInfos(t={}){const[{getVersionInfos:r},{default:n}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/getVersionInfos"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/support/GetVersionInfosParameters"],(e=>t(V(e))),r)))]),i=n.from(t);return r(this.url,i)}async reconcile(t,r={}){const[{reconcile:n},{default:i}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/reconcile"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/support/ReconcileParameters"],(e=>t(V(e))),r)))]),s=i.from(r);return s.sessionId=v.currentSessionId,n(this.url,t.guid,s)}async post(t){const[{post:r},{default:n}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/post"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/support/PostParameters"],(e=>t(V(e))),r)))]),i=n.from({sessionId:v.currentSessionId});return r(this.url,t.guid,i)}async alterVersion(t,r){const[{alterVersion:n},{default:i}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/alterVersion"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/support/AlterVersionParameters"],(e=>t(V(e))),r)))]),s=i.from(r);return n(this.url,t.guid,s)}async startReading(t){const{startReading:r}=await new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/startReading"],t,r))),n=await r(this.url,t.guid,v.currentSessionId);if(n){const e=await this.getVersionInfoExtended(t),r=new Date(e.modifiedDate),n={name:e.versionIdentifier.name,moment:r,lockType:"read"};this._addOrUpdateItem(t.guid,n),f.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,r)}return n}async stopReading(t){const{stopReading:r}=await new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/stopReading"],t,r))),n=await r(this.url,t.guid,v.currentSessionId);return n&&(v.versionCollection.get(this.url)?.delete(t.guid),f.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,null)),n}async startEditing(t){const{startEditing:r}=await new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/startEditing"],t,r))),n=await r(this.url,t.guid,v.currentSessionId);if(n){const e=await this.getVersionInfoExtended(t),r=new Date(e.modifiedDate),n=new h(r),i={name:t.name,moment:r,lockType:"edit",stack:n};this._addOrUpdateItem(t.guid,i),f.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,r)}return n}async stopEditing(t,r){if(r){const r=v.versionCollection.get(this.url)?.get(t.guid);if(r?.stack?.canRedo()){const[{deleteForwardEdits:n},{default:i}]=await Promise.all([new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/deleteForwardEdits"],t,r))),new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/support/DeleteForwardEditsParameters"],(e=>t(V(e))),r)))]);if(!await n(this.url,t.guid,new i({sessionId:v.currentSessionId,moment:r.moment})))return!1}}const{stopEditing:n}=await new Promise(((t,r)=>e(["../rest/versionManagement/gdbVersion/stopEditing"],t,r))),i=await n(this.url,t.guid,v.currentSessionId,r);if(i){const e=await this.getVersionInfoExtended(t),r=new Date(e.modifiedDate);this._addOrUpdateItem(t.guid,{name:t.name,moment:r,lockType:"read",editMomentStack:void 0}),f.emitUpdateMomentEvent(this._featureServiceUrl,null,t.name,r)}return i}getLockType(e){const t=v.versionCollection.get(this.url)?.get(e.guid)?.lockType;return t??"none"}changeVersionInternal(e,t,r){let n=null,i=null,s=null,o=null;const a=e=>!e||e===this.defaultVersionIdentifier.name,l=e=>{const t=v.versionCollection?.get(this.url)?.get(e.guid);s=e.name,o=t?.moment??null},d=(e,t)=>!e&&!t||!(!e||!t)&&e.toISOString()===t.toISOString();if("name"in t){if("none"!==this.getLockType(t))return!1;n=t.name,i=null,"name"in r?l(r):(s=this.defaultVersionIdentifier.name,o=r)}else n=this.defaultVersionIdentifier.name,i=t,"name"in r?l(r):(s=this.defaultVersionIdentifier.name,o=r);return(a(n)&&a(e.gdbVersion)&&d(e.historicMoment,i)||n===e.gdbVersion&&d(e.historicMoment,i))&&(e.gdbVersion=s,e.historicMoment=o),!0}async changeVersion(e,t,r){if("name"in r&&!await this.getVersionInfoExtended(r))throw new n("version-management-service:invalid-version","version does not exist");if("networkServiceUrl"in e){if(this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase())return this.changeVersionInternal(e,t,r)}else{let n;"layers"in e?(n=e.allTables.concat(e.allLayers),e.utilityNetworks&&e.utilityNetworks.forEach((e=>{this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase()&&this.changeVersionInternal(e,t,r)}))):n=e;for(const e of n)if("feature"===e.type){const n=/^(.*\/FeatureServer)\/\d+$/,i=e.url.replace(n,"$1");if(this._featureServiceUrl.toLowerCase()===i.toLowerCase()&&!this.changeVersionInternal(e,t,r))return!1}}return!0}async getVersionIdentifierFromName(e){try{const t=await this.getVersionInfos({includeHidden:!0});return t.find((t=>t.versionIdentifier.name===e))?.versionIdentifier||null}catch{return null}}async getVersionIdentifierFromGuid(t){const{getVersion:r}=await new Promise(((t,r)=>e(["../rest/versionManagement/getVersion"],t,r)));try{return(await r(this.url,t)).versionIdentifier}catch{return null}}canUndo(e){const t=v.versionCollection.get(this.url)?.get(e.guid);return!!t?.stack?.canUndo()}canRedo(e){const t=v.versionCollection.get(this.url)?.get(e.guid);return!!t?.stack?.canRedo()}undo(e){const t=v.versionCollection.get(this.url)?.get(e.guid),r=t?.stack?.undo()||void 0;if(t&&r){const r=t.stack.peek();f.emitUpdateMomentEvent(this._featureServiceUrl,null,e.name,r),v.versionCollection.get(this.url)?.set(e.guid,{...t,moment:r})}}redo(e){const t=v.versionCollection.get(this.url)?.get(e.guid),r=t?.stack?.redo()||void 0;t&&r&&(f.emitUpdateMomentEvent(this._featureServiceUrl,null,e.name,r),v.versionCollection.get(this.url)?.set(e.guid,{...t,moment:r}))}_addMomentToVersionItem(e,t){const r=v.versionCollection.get(this.url);if(r)for(const[n,i]of r){i.name===e&&this._addToStack(n,t)}}_canAddToStack(e,t){if(e){return e.getTime()<t.getTime()}return!0}_addToStack(e,t){const r=v.versionCollection.get(this.url),n=r?.get(e);return!!n?.stack&&(this._canAddToStack(n.stack.peek(),t)&&n.stack.push(t),r.set(e,{...n,moment:t}),!0)}_addOrUpdateItem(e,t){const r=v.versionCollection.get(this.url),n=r?.get(e);return n?(r.set(e,{...n,...t}),!0):!(!t.name||!t.lockType)&&(r?.set(e,{...t,lockType:t.lockType}),!0)}async _fetchService(e,t){if(this.sourceJSON){this.read(this.sourceJSON,{origin:"service",url:p.parseUrl(e)});const t=new o.Url(this.url).host;return void v.defaultVersionNameLookup.set(t,this.defaultVersionIdentifier.name)}const n=await r(e,{responseType:"json",query:{f:"json"},...t});this.read(n.data)}};t.__decorate([a.property()],w.prototype,"url",void 0),t.__decorate([a.property()],w.prototype,"sourceJSON",void 0),t.__decorate([a.property({type:String,json:{write:!0}})],w.prototype,"name",void 0),t.__decorate([a.property({json:{write:{target:{defaultVersionName:{type:String},defaultVersionGuid:{type:String}}},read:{source:["defaultVersionName","defaultVersionGuid"]}}})],w.prototype,"defaultVersionIdentifier",void 0),t.__decorate([c.reader("defaultVersionIdentifier",["defaultVersionName","defaultVersionGuid"])],w.prototype,"readDefaultVersionIdentifier",null),t.__decorate([g.writer("defaultVersionIdentifier",{defaultVersionName:{type:String},defaultVersionGuid:{type:String}})],w.prototype,"writeDefaultVersionIdentifier",null),t.__decorate([a.property({json:{write:!0}})],w.prototype,"capabilities",void 0),w=t.__decorate([m.subclass("esri.versionManagement.VersionManagementService")],w);return w}));
