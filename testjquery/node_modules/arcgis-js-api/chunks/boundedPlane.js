/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../core/has","../core/Logger","../core/mathUtils","../core/ObjectStack","./mat4","./mat4f64","./vec3","./vec3f64","../geometry/support/Axis","../geometry/support/lineSegment","../geometry/support/plane","../geometry/support/ray","../geometry/support/vector","../geometry/support/vectorStacks"],(function(t,e,n,i,o,s,r,a,c,u,l,g,d,p,b){"use strict";const f=n.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");class m{constructor(){this.plane=g.create(),this.origin=c.create(),this.basis1=c.create(),this.basis2=c.create()}}const h=m;function y(t=J){return{plane:g.create(t.plane),origin:c.clone(t.origin),basis1:c.clone(t.basis1),basis2:c.clone(t.basis2)}}function P(t,e,n){const i=tt.get();return i.origin=t,i.basis1=e,i.basis2=n,i.plane=g.wrap(0,0,0,0),A(i),i}function v(t,e=y()){return I(t.origin,t.basis1,t.basis2,e)}function S(t,e){a.copy(e.origin,t.origin),a.copy(e.basis1,t.basis1),a.copy(e.basis2,t.basis2),g.copy(e.plane,t.plane)}function I(t,e,n,i=y()){return a.copy(i.origin,t),a.copy(i.basis1,e),a.copy(i.basis2,n),A(i),D(i,"fromValues()"),i}function A(t){g.fromVectorsAndPoint(t.basis2,t.basis1,t.origin,t.plane)}function j(t,e,n){t!==n&&v(t,n);const i=a.scale(b.sv3d.get(),z(t),e);return a.add(n.origin,n.origin,i),n.plane[3]-=e,n}function M(t,e,n){return x(e,n),j(n,k(t,t.origin),n),n}function x(t,e=y()){const n=(t[2]-t[0])/2,i=(t[3]-t[1])/2;return a.set(e.origin,t[0]+n,t[1]+i,0),a.set(e.basis1,n,0,0),a.set(e.basis2,0,i,0),g.fromValues(0,0,1,0,e.plane),e}function V(t,e,n){return!!g.intersectRay(t.plane,e,n)&&G(t,n)}function N(t,e,n){if(V(t,e,n))return n;const i=w(t,e,b.sv3d.get());return a.add(n,e.origin,a.scale(b.sv3d.get(),e.direction,a.distance(e.origin,i)/a.length(e.direction))),n}function w(t,e,n){const o=K.get();H(t,e,o,K.get());let s=Number.POSITIVE_INFINITY;for(const r of et){const c=Z(t,r,Q.get()),u=b.sv3d.get();if(g.intersectLineSegment(o,c,u)){const t=a.direction(b.sv3d.get(),e.origin,u),o=Math.abs(i.acosClamped(a.dot(e.direction,t)));o<s&&(s=o,a.copy(n,u))}}return s===Number.POSITIVE_INFINITY?L(t,e,n):n}function L(t,e,n){if(V(t,e,n))return n;const i=K.get(),o=K.get();H(t,e,i,o);let s=Number.POSITIVE_INFINITY;for(const r of et){const c=Z(t,r,Q.get()),u=b.sv3d.get();if(g.intersectLineSegmentClamp(i,c,u)){const t=d.distance2(e,u);if(!g.isPointInside(o,u))continue;t<s&&(s=t,a.copy(n,u))}}return C(t,e.origin)<s&&O(t,e.origin,n),n}function O(t,e,n){const i=g.projectPoint(t.plane,e,b.sv3d.get()),o=l.projectPointClamp(X(t,t.basis1),i,-1,1,b.sv3d.get()),s=l.projectPointClamp(X(t,t.basis2),i,-1,1,b.sv3d.get());return a.subtract(n,a.add(b.sv3d.get(),o,s),t.origin),n}function T(t,e,n){const{origin:i,basis1:o,basis2:s}=t,r=a.subtract(b.sv3d.get(),e,i),c=p.projectPointSignedLength(o,r),u=p.projectPointSignedLength(s,r),l=p.projectPointSignedLength(z(t),r);return a.set(n,c,u,l)}function C(t,e){const n=T(t,e,b.sv3d.get()),{basis1:i,basis2:o}=t,s=a.length(i),r=a.length(o),c=Math.max(Math.abs(n[0])-s,0),u=Math.max(Math.abs(n[1])-r,0),l=n[2];return c*c+u*u+l*l}function E(t,e){return Math.sqrt(C(t,e))}function q(t,e){let n=Number.NEGATIVE_INFINITY;for(const i of et){const o=Z(t,i,Q.get()),s=l.distance2(o,e);s>n&&(n=s)}return Math.sqrt(n)}function R(t,e){return g.isPointInside(t.plane,e)&&G(t,e)}function _(t,e,n,i){return W(t,n,i)}function k(t,e){const n=-t.plane[3];return p.projectPointSignedLength(z(t),e)-n}function B(t,e,n,i){const o=k(t,e),s=a.scale($,z(t),n-o);return a.add(i,e,s),i}function F(t,e){return a.exactEquals(t.basis1,e.basis1)&&a.exactEquals(t.basis2,e.basis2)&&a.exactEquals(t.origin,e.origin)}function Y(t,e,n){return t!==n&&v(t,n),s.invert(nt,e),s.transpose(nt,nt),a.transformMat4(n.basis1,t.basis1,nt),a.transformMat4(n.basis2,t.basis2,nt),a.transformMat4(g.normal(n.plane),g.normal(t.plane),nt),a.transformMat4(n.origin,t.origin,e),g.setOffsetFromPoint(n.plane,n.plane,n.origin),n}function U(t,e,n,i){return t!==i&&v(t,i),s.fromRotation(it,e,n),a.transformMat4(i.basis1,t.basis1,it),a.transformMat4(i.basis2,t.basis2,it),A(i),i}function z(t){return g.normal(t.plane)}function W(t,e,n){switch(e){case u.Axis.X:a.copy(n,t.basis1),a.normalize(n,n);break;case u.Axis.Y:a.copy(n,t.basis2),a.normalize(n,n);break;case u.Axis.Z:a.copy(n,z(t))}return n}function G(t,e){const n=a.subtract(b.sv3d.get(),e,t.origin),i=a.squaredLength(t.basis1),o=a.squaredLength(t.basis2),s=a.dot(t.basis1,n),r=a.dot(t.basis2,n);return-s-i<0&&s-i<0&&-r-o<0&&r-o<0}function X(t,e){const n=Q.get();return a.copy(n.origin,t.origin),a.copy(n.vector,e),n}function Z(t,e,n){const{basis1:i,basis2:o,origin:s}=t,r=a.scale(b.sv3d.get(),i,e.origin[0]),c=a.scale(b.sv3d.get(),o,e.origin[1]);a.add(n.origin,r,c),a.add(n.origin,n.origin,s);const u=a.scale(b.sv3d.get(),i,e.direction[0]),l=a.scale(b.sv3d.get(),o,e.direction[1]);return a.scale(n.vector,a.add(u,u,l),2),n}function D(t,e){Math.abs(a.dot(t.basis1,t.basis2)/(a.length(t.basis1)*a.length(t.basis2)))>1e-6&&f.warn(e,"Provided basis vectors are not perpendicular"),Math.abs(a.dot(t.basis1,z(t)))>1e-6&&f.warn(e,"Basis vectors and plane normal are not perpendicular"),Math.abs(-a.dot(z(t),t.origin)-t.plane[3])>1e-6&&f.warn(e,"Plane offset is not consistent with plane origin")}function H(t,e,n,i){const o=z(t);g.fromVectorsAndPoint(o,e.direction,e.origin,n),g.fromVectorsAndPoint(g.normal(n),o,e.origin,i)}const J={plane:g.create(),origin:c.fromValues(0,0,0),basis1:c.fromValues(1,0,0),basis2:c.fromValues(0,1,0)},K=new o.ObjectStack(g.create),Q=new o.ObjectStack(l.create),$=c.create(),tt=new o.ObjectStack((()=>y())),et=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],nt=r.create(),it=r.create(),ot=Object.freeze(Object.defineProperty({__proto__:null,BoundedPlaneClass:h,altitudeAt:k,axisAt:_,closestPoint:L,closestPointOnSilhouette:w,copy:v,copyWithoutVerify:S,create:y,distance:E,distance2:C,distanceToSilhouette:q,elevate:j,equals:F,extrusionContainsPoint:R,fromAABoundingRect:x,fromValues:I,intersectRay:V,intersectRayClosestSilhouette:N,normal:z,projectPoint:O,projectPointLocal:T,rotate:U,setAltitudeAt:B,setExtent:M,transform:Y,up:J,updateUnboundedPlane:A,wrap:P},Symbol.toStringTag,{value:"Module"}));t.BoundedPlaneClass=h,t.altitudeAt=k,t.axisAt=_,t.boundedPlane=ot,t.closestPoint=L,t.closestPointOnSilhouette=w,t.copy=v,t.copyWithoutVerify=S,t.create=y,t.distance=E,t.distance2=C,t.distanceToSilhouette=q,t.elevate=j,t.equals=F,t.extrusionContainsPoint=R,t.fromAABoundingRect=x,t.fromValues=I,t.intersectRay=V,t.intersectRayClosestSilhouette=N,t.normal=z,t.projectPoint=O,t.projectPointLocal=T,t.rotate=U,t.setAltitudeAt=B,t.setExtent=M,t.transform=Y,t.up=J,t.updateUnboundedPlane=A,t.wrap=P}));
