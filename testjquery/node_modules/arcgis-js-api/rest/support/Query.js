/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../geometry","../../TimeExtent","../../core/jsonMap","../../core/JSONSupport","../../core/lang","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/ensureType","../../geometry/support/jsonUtils","../../layers/support/source/DataLayerSource","./FullTextSearch","./QuantizationParameters","./StatisticDefinition","../../geometry/SpatialReference","../../geometry/Point"],(function(e,t,r,o,i,s,a,n,p,l,c,u,d,y,h,m,_,S,w){"use strict";var f;const v=new o.JSONMap({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),g=new o.JSONMap({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let j=f=class extends i.JSONSupport{static from(e){return u.ensureClass(f,e)}constructor(e){super(e),this.aggregateIds=null,this.cacheHint=void 0,this.compactGeometryEnabled=!1,this.datumTransformation=null,this.defaultSpatialReferenceEnabled=!1,this.distance=void 0,this.dynamicDataSource=void 0,this.formatOf3DObjects=null,this.fullText=null,this.gdbVersion=null,this.geometry=null,this.geometryPrecision=void 0,this.groupByFieldsForStatistics=null,this.having=null,this.historicMoment=null,this.maxAllowableOffset=void 0,this.maxRecordCountFactor=1,this.multipatchOption=null,this.num=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.outStatistics=null,this.parameterValues=null,this.pixelSize=null,this.quantizationParameters=null,this.rangeValues=null,this.relationParameter=null,this.resultType=null,this.returnCentroid=!1,this.returnDistinctValues=!1,this.returnExceededLimitFeatures=!0,this.returnGeometry=!1,this.returnQueryGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.sourceSpatialReference=null,this.spatialRelationship="intersects",this.start=void 0,this.sqlFormat=null,this.text=null,this.timeExtent=null,this.timeReferenceUnknownClient=!1,this.units=null,this.where=null}castDatumTransformation(e){return"number"==typeof e||"object"==typeof e?e:null}writeHistoricMoment(e,t){t.historicMoment=e&&e.getTime()}writeParameterValues(e,t){if(e){const r={};for(const t in e){const o=e[t];Array.isArray(o)?r[t]=o.map((e=>e instanceof Date?e.getTime():e)):o instanceof Date?r[t]=o.getTime():r[t]=o}t.parameterValues=r}}writeStart(e,t){t.resultOffset=this.start,t.resultRecordCount=this.num||10,t.where="1=1"}writeWhere(e,t){t.where=e||"1=1"}clone(){return new f(s.clone({aggregateIds:this.aggregateIds,cacheHint:this.cacheHint,compactGeometryEnabled:this.compactGeometryEnabled,datumTransformation:this.datumTransformation,defaultSpatialReferenceEnabled:this.defaultSpatialReferenceEnabled,distance:this.distance,fullText:this.fullText,formatOf3DObjects:this.formatOf3DObjects,gdbVersion:this.gdbVersion,geometry:this.geometry,geometryPrecision:this.geometryPrecision,groupByFieldsForStatistics:this.groupByFieldsForStatistics,having:this.having,historicMoment:null!=this.historicMoment?new Date(this.historicMoment.getTime()):null,maxAllowableOffset:this.maxAllowableOffset,maxRecordCountFactor:this.maxRecordCountFactor,multipatchOption:this.multipatchOption,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,outStatistics:this.outStatistics,parameterValues:this.parameterValues,pixelSize:this.pixelSize,quantizationParameters:this.quantizationParameters,rangeValues:this.rangeValues,relationParameter:this.relationParameter,resultType:this.resultType,returnDistinctValues:this.returnDistinctValues,returnGeometry:this.returnGeometry,returnCentroid:this.returnCentroid,returnExceededLimitFeatures:this.returnExceededLimitFeatures,returnQueryGeometry:this.returnQueryGeometry,returnM:this.returnM,returnZ:this.returnZ,dynamicDataSource:this.dynamicDataSource,sourceSpatialReference:this.sourceSpatialReference,spatialRelationship:this.spatialRelationship,start:this.start,sqlFormat:this.sqlFormat,text:this.text,timeExtent:this.timeExtent,timeReferenceUnknownClient:this.timeReferenceUnknownClient,units:this.units,where:this.where}))}};j.MAX_MAX_RECORD_COUNT_FACTOR=5,e.__decorate([a.property({json:{write:!0}})],j.prototype,"aggregateIds",void 0),e.__decorate([a.property({type:Boolean,json:{write:!0}})],j.prototype,"cacheHint",void 0),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"compactGeometryEnabled",void 0),e.__decorate([a.property({json:{write:!0}})],j.prototype,"datumTransformation",void 0),e.__decorate([n.cast("datumTransformation")],j.prototype,"castDatumTransformation",null),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"defaultSpatialReferenceEnabled",void 0),e.__decorate([a.property({type:Number,json:{write:{overridePolicy:e=>({enabled:e>0})}}})],j.prototype,"distance",void 0),e.__decorate([a.property({type:y.DataLayerSource,json:{write:!0}})],j.prototype,"dynamicDataSource",void 0),e.__decorate([a.property({type:String,json:{write:!0}})],j.prototype,"formatOf3DObjects",void 0),e.__decorate([a.property({type:[h],json:{write:{enabled:!0,overridePolicy(){return{enabled:null!=this.fullText&&this.fullText.length>0}}}}})],j.prototype,"fullText",void 0),e.__decorate([a.property({type:String,json:{write:!0}})],j.prototype,"gdbVersion",void 0),e.__decorate([a.property({types:t.geometryTypes,json:{read:d.fromJSON,write:!0}})],j.prototype,"geometry",void 0),e.__decorate([a.property({type:Number,json:{write:!0}})],j.prototype,"geometryPrecision",void 0),e.__decorate([a.property({type:[String],json:{write:!0}})],j.prototype,"groupByFieldsForStatistics",void 0),e.__decorate([a.property({type:String,json:{write:!0}})],j.prototype,"having",void 0),e.__decorate([a.property({type:Date})],j.prototype,"historicMoment",void 0),e.__decorate([c.writer("historicMoment")],j.prototype,"writeHistoricMoment",null),e.__decorate([a.property({type:Number,json:{write:!0}})],j.prototype,"maxAllowableOffset",void 0),e.__decorate([a.property({type:Number,cast:e=>e<1?1:e>j.MAX_MAX_RECORD_COUNT_FACTOR?j.MAX_MAX_RECORD_COUNT_FACTOR:e,json:{write:{overridePolicy:e=>({enabled:e>1})}}})],j.prototype,"maxRecordCountFactor",void 0),e.__decorate([a.property({type:["xyFootprint"],json:{write:!0}})],j.prototype,"multipatchOption",void 0),e.__decorate([a.property({type:Number,json:{read:{source:"resultRecordCount"}}})],j.prototype,"num",void 0),e.__decorate([a.property({json:{write:!0}})],j.prototype,"objectIds",void 0),e.__decorate([a.property({type:[String],json:{write:!0}})],j.prototype,"orderByFields",void 0),e.__decorate([a.property({type:[String],json:{write:!0}})],j.prototype,"outFields",void 0),e.__decorate([a.property({type:S,json:{name:"outSR",write:!0}})],j.prototype,"outSpatialReference",void 0),e.__decorate([a.property({type:[_],json:{write:{enabled:!0,overridePolicy(){return{enabled:null!=this.outStatistics&&this.outStatistics.length>0}}}}})],j.prototype,"outStatistics",void 0),e.__decorate([a.property({json:{write:!0}})],j.prototype,"parameterValues",void 0),e.__decorate([c.writer("parameterValues")],j.prototype,"writeParameterValues",null),e.__decorate([a.property({type:w,json:{write:!0}})],j.prototype,"pixelSize",void 0),e.__decorate([a.property({type:m,json:{write:!0}})],j.prototype,"quantizationParameters",void 0),e.__decorate([a.property({type:[Object],json:{write:!0}})],j.prototype,"rangeValues",void 0),e.__decorate([a.property({type:String,json:{read:{source:"relationParam"},write:{target:"relationParam",overridePolicy(){return{enabled:"relation"===this.spatialRelationship}}}}})],j.prototype,"relationParameter",void 0),e.__decorate([a.property({type:String,json:{write:!0}})],j.prototype,"resultType",void 0),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"returnCentroid",void 0),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"returnDistinctValues",void 0),e.__decorate([a.property({type:Boolean,json:{default:!0,write:!0}})],j.prototype,"returnExceededLimitFeatures",void 0),e.__decorate([a.property({type:Boolean,json:{write:!0}})],j.prototype,"returnGeometry",void 0),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"returnQueryGeometry",void 0),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"returnM",void 0),e.__decorate([a.property({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],j.prototype,"returnZ",void 0),e.__decorate([a.property({type:S,json:{write:!0}})],j.prototype,"sourceSpatialReference",void 0),e.__decorate([p.enumeration(v,{ignoreUnknown:!1,name:"spatialRel"})],j.prototype,"spatialRelationship",void 0),e.__decorate([a.property({type:Number,json:{read:{source:"resultOffset"}}})],j.prototype,"start",void 0),e.__decorate([c.writer("start"),c.writer("num")],j.prototype,"writeStart",null),e.__decorate([a.property({type:String,json:{write:!0}})],j.prototype,"sqlFormat",void 0),e.__decorate([a.property({type:String,json:{write:!0}})],j.prototype,"text",void 0),e.__decorate([a.property({type:r,json:{write:!0}})],j.prototype,"timeExtent",void 0),e.__decorate([a.property({type:Boolean,json:{default:!1,write:!0}})],j.prototype,"timeReferenceUnknownClient",void 0),e.__decorate([p.enumeration(g,{ignoreUnknown:!1}),a.property({json:{write:{overridePolicy(e){return{enabled:!!e&&null!=this.distance&&this.distance>0}}}}})],j.prototype,"units",void 0),e.__decorate([a.property({type:String,json:{write:{overridePolicy(e){return{enabled:null!=e||null!=this.start&&this.start>0}}}}})],j.prototype,"where",void 0),e.__decorate([c.writer("where")],j.prototype,"writeWhere",null),j=f=e.__decorate([l.subclass("esri.rest.support.Query")],j);return j}));
