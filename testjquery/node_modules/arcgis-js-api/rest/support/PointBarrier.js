/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../chunks/tslib.es6","../../Graphic","../../PopupTemplate","../../symbols","../../core/Clonable","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../geometry/Point","../route/utils","./networkEnums"],(function(e,t,r,o,a,s,i,l,p,d,u,n,c,b,y,m){"use strict";var h;let g=h=class extends(a.ClonableMixin(s.JSONSupport)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return y.getPrefixedProperties(t.attributes,"Attr_")}writeCosts(e,t){y.setPrefixedProperties(e,t,"Attr_")}static fromGraphic(e){return new h({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?m.barrierTypeJsonMap.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?y.toKebabImpedanceAttributes(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?m.curbApproachJsonMap.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?m.fullEdgeJsonMap.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?m.statusJsonMap.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?m.barrierTypeJsonMap.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(y.fromKebabImpedanceAttributes(this.costs)):null,CurbApproach:null!=this.curbApproach?m.curbApproachJsonMap.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?m.fullEdgeJsonMap.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?m.statusJsonMap.toJSON(this.status):null};return new t({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};g.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],g.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e.__decorate([i.property()],g.prototype,"addedCost",void 0),e.__decorate([i.property({type:m.barrierTypeJsonMap.apiValues,json:{name:"attributes.BarrierType",read:{reader:m.barrierTypeJsonMap.read},write:{writer:m.barrierTypeJsonMap.write}}})],g.prototype,"barrierType",void 0),e.__decorate([i.property()],g.prototype,"costs",void 0),e.__decorate([u.reader("costs",["attributes"])],g.prototype,"readCosts",null),e.__decorate([c.writer("costs")],g.prototype,"writeCosts",null),e.__decorate([i.property({constructOnly:!0,type:m.curbApproachJsonMap.apiValues,json:{read:{source:"attributes.CurbApproach",reader:m.curbApproachJsonMap.read}}})],g.prototype,"curbApproach",void 0),e.__decorate([i.property({type:m.fullEdgeJsonMap.apiValues,json:{name:"attributes.FullEdge",read:{reader:m.fullEdgeJsonMap.read},write:{writer:m.fullEdgeJsonMap.write}}})],g.prototype,"fullEdge",void 0),e.__decorate([i.property({type:b,json:{write:!0}})],g.prototype,"geometry",void 0),e.__decorate([i.property({json:{name:"attributes.Name"}})],g.prototype,"name",void 0),e.__decorate([i.property({json:{name:"attributes.ObjectID"}})],g.prototype,"objectId",void 0),e.__decorate([i.property({type:r})],g.prototype,"popupTemplate",void 0),e.__decorate([i.property({type:m.sideOfEdgeJsonMap.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:m.sideOfEdgeJsonMap.read}}})],g.prototype,"sideOfEdge",void 0),e.__decorate([i.property({json:{read:{source:"attributes.SourceID"}}})],g.prototype,"sourceId",void 0),e.__decorate([i.property({json:{read:{source:"attributes.SourceOID"}}})],g.prototype,"sourceOid",void 0),e.__decorate([i.property({type:m.statusJsonMap.apiValues,json:{read:{source:"attributes.Status",reader:m.statusJsonMap.read}}})],g.prototype,"status",void 0),e.__decorate([i.property({types:o.symbolTypes})],g.prototype,"symbol",void 0),e.__decorate([i.property({readOnly:!0,json:{read:!1}})],g.prototype,"type",void 0),g=h=e.__decorate([n.subclass("esri.rest.support.PointBarrier")],g);return g}));
