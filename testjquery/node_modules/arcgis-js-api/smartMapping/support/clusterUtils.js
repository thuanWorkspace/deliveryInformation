/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../core/arrayUtils","../../core/MD5","../../renderers/visualVariables/support/sizeVariableUtils","../popup/support/utils","./utils"],(function(n,e,t,i,l,o){"use strict";const r="cluster_count";function a(n,e){return n.split(`cluster_${e}_`).pop()}function u(n){if(!n)return null;const{field:e,valueExpression:t,normalizationField:l,normalizationType:r,normalizationTotal:a}=n;let u=null;if(t)u=t;else if(e){const n=o.getNormalizationType({normalizationType:r,normalizationField:l,normalizationTotal:a});if(n){const t=n.toLowerCase();if(u=e.toLowerCase()+",norm:"+t,l)u+=","+l.toLowerCase();else if("percent-of-total"===t){let n=a;i.isValidNumber(n)&&0!==n||(n=null),u+=","+n}}}return u}function s(n){return t.createMD5Hash(n)}function p(n,e){const t=u(n);return`${e}_${null!=t?s(t):n.field}`}function f(n,e){return`cluster_${p(n,e)}`}function c(n,e){const t=e.getField(n);return t?.type}function d(n,e){const t="field"in e?e.field:null,i=t?c(t,n):null;return{field:t,fieldType:null!=i?i:null,valueExpression:"valueExpression"in e?e.valueExpression:null,valueExpressionTitle:"valueExpressionTitle"in e?e.valueExpressionTitle:null,normalizationField:"normalizationField"in e?e.normalizationField:null,normalizationType:"normalizationType"in e?e.normalizationType:null,normalizationTotal:"normalizationTotal"in e?e.normalizationTotal:null}}function T(n,e){const t="rotation"===e.type?e.rotationType:null,i=e.legendOptions?.title,l=e.field,o=l?c(l,n):null;return{field:l,fieldType:null!=o?o:null,rotationType:t,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle||e.valueExpression&&i,normalizationField:"normalizationField"in e?e.normalizationField:null,vvType:e.type}}function v(n){return n.map((n=>`{\n        "value": "${String(n.value)}",\n        "label": "${y(String(n.label))}"\n      }`))}function y(n){return n?n.replaceAll('"','\\"'):""}function m(n,e,t){return`\n  var uvInfos = [${v(n).join(", ")}];\n  var predominantType = Text($feature["${e}"]);\n  var label = "${y(t)}";\n\n  for (var i = 0; i < Count(uvInfos); i++) {\n    if (uvInfos[i].value == predominantType) {\n      label = uvInfos[i].label;\n      break;\n    }\n  }\n\n  return label;\n  `}function z(n,e){const t=[p(n,e)];return"date"===n.fieldType&&t.push(n.fieldType.toLowerCase()),n.rotationType&&t.push(n.rotationType.toLowerCase()),t.join("_")}function b(n,e){return{statisticHash:z(n,e),attributeInfo:n,statisticType:e}}function g(n,t,i=!0){const o=[],r=d(n,t);"class-breaks"===t.type?o.push(b(r,"avg")):"unique-value"===t.type&&o.push(b(r,"type"));const a=l.getPrimaryVisualVariables(t);for(const e of a){const t=T(n,e);o.push(b(t,"avg"))}return i?e.unique(o,((n,e)=>n.statisticHash===e.statisticHash)):o}n.clusterCountField=r,n.getClusterField=f,n.getClusterFieldHash=a,n.getPredominantTypeExpression=m,n.getRendererAttributeInfo=d,n.getStatisticId=p,n.getStatisticInfo=b,n.getStatisticInfos=g,n.getVariableAttributeInfo=T,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})}));
