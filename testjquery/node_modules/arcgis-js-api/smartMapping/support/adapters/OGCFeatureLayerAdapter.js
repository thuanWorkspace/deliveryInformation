/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../../chunks/tslib.es6","../../../core/arrayUtils","../../../core/Error","../../../core/reactiveUtils","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../layers/support/fieldUtils","../../statistics/support/predominanceUtils","../../statistics/support/utils","../../statistics/support/WorkerClient","../utils","./FeatureLayerAdapter","./support/utils","../../../statistics/utils"],(function(e,t,r,s,a,i,o,n,u,l,p,c,d,y,h,w){"use strict";let f=class extends y{constructor(e){super(e)}async _waitForLayerViewUpdate(e){if(!e)throw new r("ogc-feature-layer-adapter:insufficient-data","layerView is required to fetch the features");await s.whenOnce((()=>!e.updating))}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:i}=e;if(!i)throw new r("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const o=h.getSummaryStatsQuery(this,e,t),n=await i.whenLayerView(this.layer);await s.whenOnce((()=>!n.updating),a);const l=await n.queryFeatures(o,{signal:a}),p=h.getSummaryStatisticsFromFeatureSet(l,d.isAnyDateField(t)||u.isTimeOnlyField(t));return w.processSummaryStatisticsResult(p)}async _uvFromClientQuery(e,t){const{signal:a,view:i}=e;if(!i)throw new r("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const o=h.getUVQuery(this,e),n=await i.whenLayerView(this.layer);await s.whenOnce((()=>!n.updating),a);const u=await n.queryFeatures(o,{signal:a}),l=await h.getUniqueValuesFromFeatureSet(u,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:d.fieldDelimiter,view:e.view,signal:e.signal});return w.createUVResult(l,t,e.returnAllCodedValues,d.fieldDelimiter)}summaryStatistics(e){const{field:t,valueExpression:s,sqlExpression:a,features:i,view:o}=e,n=t?this.getField(t):null,u=!!s,l="3d"===o?.type;if(!s&&a&&!this.supportsSQLExpression)throw new r("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return u||i||l?this._summaryStatsFromMemory(e,n):this._summaryStatsFromClientQuery(e,n)}async uniqueValues(e){const{valueExpression:t,sqlExpression:s,features:a,view:i}=e,o=await h.getDomainsForFields(e,this),n=!!t,u="3d"===i?.type;if(!t&&s&&!this.supportsSQLExpression)throw new r("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return n||a||u?this._uvFromMemory(e,o):this._uvFromClientQuery(e,o)}histogram(e){const{features:t,valueExpression:s,normalizationType:a,sqlExpression:i}=e,o=t||!!s;if(!s&&i&&!this.supportsSQLExpression)throw new r("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return o||a?this._histogramFromMemory(e):this._histogramForField(e)}classBreaks(e){return!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new r("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const o=this.layer.createQuery();o.where=p.mergeWhereClauses(o.where,t);const n=await a.whenLayerView(this.layer);return await s.whenOnce((()=>!n.updating),i),n.queryFeatureCount(o,{signal:i})}generateRenderer(e,t){throw new r("ogc-feature-layer-adapter:not-supported","OGCFeatureLayer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:r,signal:s}=e,a=l.getArcadeForPredominantCategory(t),i=await this._uvFromMemory({valueExpression:a,view:r,signal:s});return h.getPredominantCategoriesFromUVInfos(i.uniqueValueInfos,t)}async getSampleFeatures(e,s){const{view:a,sampleSize:i,requiredFields:o,returnGeometry:n,signal:u}=e,l=this.layer.createQuery(),p=1;if(l.outSpatialReference=e.spatialReference||a?.spatialReference,l.returnGeometry=!!n,l.outFields=o,!a)throw new r("ogc-feature-layer-adapter:not-supported","view is required to get sample features for OGCFeatureLayer");const c=await a.whenLayerView(this.layer);if(h.getMissingFields(this,o,c).length)throw new r("ogc-feature-layer-adapter:not-supported","Required fields need to be passed in the outFields for OGCFeatureLayer");const d=await this._fetchFeaturesFromMemory(c,l,u,s),y=null!=i&&i>0&&i<=d.length?i:d.length;return t.pickRandom(d,y,p)}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.capabilities?.query?.supportsSqlExpression,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=c.WorkerClient.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};f=e.__decorate([n.subclass("esri.smartMapping.support.adapters.OGCFeatureLayerAdapter")],f);return f}));
