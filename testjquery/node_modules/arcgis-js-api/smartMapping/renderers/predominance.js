/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../core/Error","../../intl/messages","../../renderers/support/AuthoringInfo","../../renderers/support/AuthoringInfoVisualVariable","../../renderers/support/numberUtils","../../renderers/visualVariables/OpacityVariable","../heuristics/outline","./size","./type","./support/utils","../statistics/predominantCategories","../statistics/summaryStatistics","../statistics/support/predominanceUtils","../support/binningUtils","../support/adapters/support/layerUtils","../symbology/predominance"],(function(e,a,i,n,s,l,r,o,t,p,m,d,u,c,y,b,g){"use strict";async function f(e){if(!(e?.layer&&e.view&&e.fields?.length))throw new a("predominance-renderer:missing-parameters","'layer', 'view' and 'fields' parameters are required");if(e.fields.length<2)throw new a("predominance-renderer:invalid-parameters","Minimum 2 fields are required");if(e.fields.length>10)throw new a("predominance-renderer:invalid-parameters","Maximum 10 fields are supported");e.forBinning&&y.verifyBinningParams(e,"predominance-renderer");const i={...e,layer:e.layer,fields:e.fields};i.symbolType=i.symbolType||"2d",i.defaultSymbolEnabled??(i.defaultSymbolEnabled=!0),i.includeOpacityVariable=e.includeOpacityVariable||!1,i.includeSizeVariable=e.includeSizeVariable||!1,i.sortBy??(i.sortBy="count");const n=e.forBinning?b.binningCapableLayerTypes:b.featureCapableLayerTypes,s=b.createLayerAdapter(i.layer,n,e.forBinning);if(!s)throw new a("predominance-renderer:invalid-parameters","'layer' must be one of these types: "+b.getLayerTypeLabels(b.featureCapableLayerTypes).join(", "));i.layer=s;const l=null!=i.signal?{signal:i.signal}:null;await s.load(l);const r=s.geometryType,o=i.symbolType.includes("3d");if(i.outlineOptimizationEnabled="polygon"===r&&i.outlineOptimizationEnabled,i.includeSizeVariable||(i.sizeOptimizationEnabled=("point"===r||"multipoint"===r||"polyline"===r)&&i.sizeOptimizationEnabled),"mesh"===r)i.symbolType="3d-volumetric",i.colorMixMode=i.colorMixMode||"replace",i.edgesType=i.edgesType||"none",i.sizeOptimizationEnabled=!1;else{if(o&&("polyline"===r||"polygon"===r))throw new a("predominance-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(i.symbolType.includes("3d-volumetric")&&(!i.view||"3d"!==i.view.type))throw new a("predominance-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const t=i.fields.map((e=>e.name)),p=m.verifyBasicFieldValidity(s,t,"predominance-renderer:invalid-parameters");if(p)throw p;return i}async function h(e){let a=e.predominanceScheme,i=null,n=null;const s=await m.getBasemapInfo(e.basemap,e.view);if(i=null!=s.basemapId?s.basemapId:null,n=null!=s.basemapTheme?s.basemapTheme:null,a)return{scheme:g.cloneScheme(a),basemapId:i,basemapTheme:n};const l=g.getSchemes({basemapTheme:n,geometryType:e.geometryType,numColors:e.numColors,theme:e.theme,worldScale:e.worldScale,view:e.view});return l&&(a=l.primaryScheme,i=l.basemapId,n=l.basemapTheme),{scheme:a,basemapId:i,basemapTheme:n}}async function v(e,a,s,l){const r=await i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=e.layer,u={layer:e.layer,view:e.view,signal:e.signal},[c,y]=await Promise.all([d({layer:t,fields:l,view:e.view,signal:e.signal}),e.outlineOptimizationEnabled?o(u).catch(m.errorCallback):null]);let b=c;c?.predominantCategoryInfos||(b={predominantCategoryInfos:l.map((e=>({value:e,count:0})))});const g=y&&y.opacity,f=await p.createRenderer({layer:t,basemap:e.basemap,valueExpression:a.valueExpression,valueExpressionTitle:r.predominantCategory,numTypes:-1,defaultSymbolEnabled:e.defaultSymbolEnabled,sortBy:e.sortBy,typeScheme:s,statistics:{uniqueValueInfos:b.predominantCategoryInfos},legendOptions:e.legendOptions,outlineOptimizationEnabled:!1,sizeOptimizationEnabled:(!e.includeSizeVariable||!e.sizeOptimizationEnabled)&&e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,view:e.view,signal:e.signal}),{renderer:h,basemapId:v,basemapTheme:w,uniqueValueInfos:S,excludedUniqueValueInfos:T}=f,V=h.uniqueValueInfos??[],z={};for(const i of e.fields){const e=t.getField(i.name);z[e.name]=i.label||e&&e.alias||i.name}if(V.forEach(((e,a)=>{const i=z[e.value];e.label=i,S[a].label=i})),e.includeSizeVariable){let a=t.geometryType,i=null;if("polygon"===a){const n=s.sizeScheme,l=n.background;h.backgroundFillSymbol=m.createSymbol(a,{type:e.symbolType,color:l.color,outline:m.getSymbolOutlineFromScheme(l,a,g)}),i=n.marker.size,a="point"}else if("polyline"===a){i=s.width}else{i=s.size}const n=m.createColors(s.colors,V.length);V.forEach(((l,r)=>{const o=m.createSymbol(a,{type:e.symbolType,color:n[r],size:i,outline:m.getSymbolOutlineFromScheme(s,a,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}});l.symbol=o,S[r].symbol=o.clone()}))}return y&&y.visualVariables&&y.visualVariables.length&&(h.visualVariables=y.visualVariables.map((e=>e.clone()))),h.authoringInfo=new n({type:"predominance",fields:[...l]}),{renderer:h,predominantCategoryInfos:S,excludedCategoryInfos:T,predominanceScheme:s,basemapId:v,basemapTheme:w}}async function w(e,a,n){const s=await i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");return t.createVisualVariables({layer:e.layer,basemap:e.basemap,valueExpression:a.valueExpression,sqlExpression:a.statisticsQuery.sqlExpression,sqlWhere:a.statisticsQuery.sqlWhere,sizeScheme:n,sizeOptimizationEnabled:e.sizeOptimizationEnabled,worldScale:!!e.symbolType?.includes("3d-volumetric"),legendOptions:{title:s.sumOfCategories},view:e.view,signal:e.signal})}async function S(e,a){const o=await i.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=await u({layer:e.layer,valueExpression:a.valueExpression,sqlExpression:a.statisticsQuery.sqlExpression,sqlWhere:a.statisticsQuery.sqlWhere,view:e.view,signal:e.signal}),{avg:p,stddev:m}=t,d=null==p||null==m,c=1/e.fields.length*100;let y=d?100:p+1.285*m;y>100&&(y=100);const b=l.round([c,y],{strictBounds:!0}),g=new r({valueExpression:a.valueExpression,stops:[{value:b[0],opacity:.15},{value:b[1],opacity:1}],legendOptions:{title:o.strengthOfPredominance}}),f=new s({type:"opacity",minSliderValue:t.min,maxSliderValue:t.max});return{visualVariable:g,statistics:t,defaultValuesUsed:d,authoringInfo:new n({visualVariables:[f]})}}async function T(e){const a=await f(e),i=a.layer,n=(await h({basemap:a.basemap,geometryType:i.geometryType,numColors:a.fields.length,predominanceScheme:a.predominanceScheme,worldScale:!!a.symbolType?.includes("3d-volumetric"),view:a.view})).scheme,s=a.fields.map((e=>e.name)),l=c.getPredominanceExpressions(i,s),r=v(a,l.predominantCategory,n,s),o=a.includeSizeVariable?w(a,l.size,n.sizeScheme):null,t=a.includeOpacityVariable?S(a,l.opacity):null,[p,m,d]=await Promise.all([r,o,t]),u=[],y=[];if(m&&(Array.prototype.push.apply(u,m.visualVariables.map((e=>e.clone()))),delete m.sizeScheme,p.size=m,Array.prototype.push.apply(y,m.authoringInfo.visualVariables.map((e=>e.clone())))),d&&(u.push(d.visualVariable.clone()),p.opacity=d,Array.prototype.push.apply(y,d.authoringInfo.visualVariables.map((e=>e.clone())))),u.length){const e=p.renderer.visualVariables||[];Array.prototype.push.apply(e,u),p.renderer.visualVariables=e,p.renderer.authoringInfo.visualVariables=y}return p}e.createRenderer=T,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
