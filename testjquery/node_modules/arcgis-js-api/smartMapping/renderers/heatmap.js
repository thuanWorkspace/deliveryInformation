/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../Color","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Logger","../../core/Error","../../renderers/support/AuthoringInfo","../../renderers/support/HeatmapColorStop","../../renderers/support/heatmapUtils","./support/utils","../statistics/heatmapStatistics","../support/utils","../support/adapters/support/layerUtils","../symbology/heatmap"],(function(e,a,r,t,n,s,i,o,l,d,m,p,u,c,f,y,h,w,b,R,g){"use strict";const T=.01;async function L(e){if(!e?.layer||!e.view)throw new u("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const a={...e,layer:e.layer,view:e.view};a.radius??(a.radius=null==a.blurRadius?18:y.gaussianBlurRadiusPxToKernelDensityRadiusPt(a.blurRadius)),a.minRatio??(a.minRatio=.01),a.maxRatio??(a.maxRatio=1),a.fadeRatio??(a.fadeRatio=.2),a.fadeToTransparent??(a.fadeToTransparent=!0);const r=[R.LayerType.CSVLayer,R.LayerType.FeatureLayer,R.LayerType.OGCFeatureLayer,R.LayerType.GeoJSONLayer,R.LayerType.StreamLayer,R.LayerType.WFSLayer],t=R.createLayerAdapter(a.layer,r);if(!t)throw new u("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+R.getLayerTypeLabels(r).join(", "));a.layer=t;const n=null!=a.signal?{signal:a.signal}:null;await t.load(n);const s=await b.getFieldsList({field:a.field}),i=h.verifyBasicFieldValidity(t,s,"heatmap-renderer:invalid-parameters");if(i)throw i;return a}async function S(e){let a=e.scheme,r=null,t=null;const n=await h.getBasemapInfo(e.basemap,e.view);if(r=null!=n.basemapId?n.basemapId:null,t=null!=n.basemapTheme?n.basemapTheme:null,a)return{scheme:g.cloneScheme(a),basemapId:r,basemapTheme:t};const s=g.getSchemes({basemapTheme:t});return s&&(a=s.primaryScheme,r=s.basemapId,t=s.basemapTheme),{scheme:a,basemapId:r,basemapTheme:t}}async function I(e,r){const{fieldOffset:t}=e,{field:n,basemap:i,radius:o,fadeToTransparent:l,heatmapScheme:d,view:m}=r,{scheme:p,basemapId:u,basemapTheme:y}=await S({basemap:i,scheme:d,view:m}),w=p.colors,b=w.length,R=!e.count,L=R?[0,.04]:[e.min,e.max];let I;const x=r.fadeRatio??0,C=r.maxRatio??0,O=r.minRatio??0,D=(C-O)/(b-1),F=w[0],U=l?O:T,B=[new f({ratio:0,color:new a([F.r,F.g,F.b,0])}),new f({ratio:T,color:new a([F.r,F.g,F.b,0])}),new f({ratio:U,color:new a([F.r,F.g,F.b,U])})];h.createColors(w,b).forEach(((e,a)=>{const r=O+D*a;B.push(new f({ratio:r,color:e}))})),l&&(v(B,x),I=new c({fadeRatio:x}));const P=new s({authoringInfo:I,radius:o,colorStops:B,field:n,minDensity:L[0],maxDensity:L[1]});return null!=t&&(P.fieldOffset=t),{renderer:P,statistics:e,defaultValuesUsed:R,scheme:g.cloneScheme(p),basemapId:u,basemapTheme:y}}function v(e,a){const r=10*(1-a)+1,t=e.length-3,n=e[2].color.a;e.forEach(((e,s)=>{if(s<=2)return;const{color:i}=e,o=(s-3)/t;i.a=0===a?1:Math.min(Math.max(o*r+o+n,n),1)}))}async function x(e){const a=await L(e);return I(a.statistics??await w({layer:a.layer,field:a.field,fieldOffset:a.fieldOffset,radius:a.radius,view:a.view,signal:a.signal}),a)}function C(e){const{fadeRatio:a,renderer:r}=e,t=r.clone(),n=a??(t?.authoringInfo?.fadeRatio||0);return v(t.colorStops,n),t.authoringInfo?t.authoringInfo.fadeRatio=n:t.authoringInfo=new c({fadeRatio:n}),t}e.createRenderer=x,e.updateRenderer=C,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
