/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","../../../intl/substitute","../../../layers/support/fieldUtils","../../../popup/content/AttachmentsContent","../../../popup/content/Content","../../../popup/content/CustomContent","../../../popup/content/ExpressionContent","../../../popup/content/FieldsContent","../../../popup/content/MediaContent","../../../popup/content/RelationshipContent","../../../popup/content/TextContent","../../../popup/ExpressionInfo","../../../popup/FieldInfo","../../../popup/support/FieldInfoFormat","./utils","../../support/clusterUtils","../../../views/2d/layers/support/clusterUtils"],(function(e,t,n,s,o,i,l,u,r,a,p,f,d,c,m,y,F){"use strict";function b(e){const{fieldName:t,label:s,type:o}=e,i=null!=o&&n.numericTypes.includes(o),l=new d({fieldName:t,label:s,visible:!0,format:i?{places:"integer"===o||"small-integer"===o?0:2,digitSeparator:!0}:null});return"date"===o&&(l.format=new c({dateFormat:"short-date-short-time"})),l}function I(e,t){const n=e?t.getField(e):null;return null!=n?n.alias||n.name:void 0}function g(e,n,s){const{attributeInfo:o,statisticType:i}=n,{field:l,normalizationField:u}=o;let r,a="";if("avg"===i?r=u?s.clusters.avgNormFieldLabel:s.clusters.avgFieldLabel:"type"===i&&(r=s.clusters.predominantFieldLabel),r){const n=o.valueExpression?o.valueExpressionTitle:I(l,e),s=u&&I(u,e);a=t.substitute(r,{fieldLabel:n||"",normFieldLabel:s||""})}return a}function C(e,n,s,o){const{attributeInfo:i,statisticType:l}=n,{field:u,normalizationField:r}=i;let a,p="";if("avg"===l?a=r?o.clusters.avgNormFieldSummary:o.clusters.avgFieldSummary:"type"===l&&(a=o.clusters.predominantFieldSummary),a){const n=i.valueExpression?i.valueExpressionTitle:I(u,e),o=r&&I(r,e);p=t.substitute(a,{fieldLabel:n||"",normFieldLabel:o||"",fieldValue:"{"+s+"}"})}return p}function x(e){return{fieldInfo:b({fieldName:y.clusterCountField,label:e.clusters.numFeatures,type:"integer"}),fieldSummary:new p({text:t.substitute(e.clusters.countSummary,{count:`{${y.clusterCountField}}`})})}}async function v(e,t,n){if(!F.isClusterCompatibleRenderer(t))return null;const s=y.getStatisticInfos(e,t),o=n.clusters.predominantNoneValue,i="unique-value"===t.type?t.uniqueValueInfos??[]:[],{fieldInfo:l,fieldSummary:u}=x(n),r=[u],a=[l],d=[];for(const c of s){const{statisticType:t,attributeInfo:s}=c,l=y.getClusterField(s,t),u=g(e,c,n);if("avg"===t)r.push(new p({text:C(e,c,l,n)})),a.push(b({fieldName:l,label:u,type:"double"}));else if("type"===t){const t=`expression/${l}`;r.push(new p({text:C(e,c,t,n)})),d.push(new f({name:l,title:u,returnType:"string",expression:y.getPredominantTypeExpression(i,l,o)})),a.push(b({fieldName:t}))}}return{fieldInfos:a,expressionInfos:d,content:r}}async function h(e,t,n){if(!F.isClusterCompatibleRenderer(t))return null;const{fieldInfo:s,fieldSummary:o}=x(n),i=[o],l=[s],u=[],{fieldInfos:r,expressionInfos:a}=await m.getFieldAndExpressionInfos({renderer:t,layer:e,isFeatureReduction:!0}),p=await m.getContentFromFieldInfos(e,{fieldInfos:r,expressionInfos:a},!0);return i.push(...p),l.push(...r),u.push(...a),{fieldInfos:l,expressionInfos:u,content:i}}e.getContentAndInfos=v,e.getContentAndInfosForPieChart=h,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
