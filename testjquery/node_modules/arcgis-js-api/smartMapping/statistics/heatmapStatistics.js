/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../core/Error","../../layers/support/fieldUtils","../../renderers/support/heatmapUtils","./support/utils","../support/utils","../support/adapters/support/layerUtils"],(function(e,a,t,r,s,i){"use strict";const l=a.numericTypes;async function n(a){if(!a?.layer||!a.view)throw new e("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const n=[i.LayerType.CSVLayer,i.LayerType.FeatureLayer,i.LayerType.OGCFeatureLayer,i.LayerType.GeoJSONLayer,i.LayerType.WFSLayer],{layer:p,...u}=a,y=i.createLayerAdapter(p,n);if(!y)throw new e("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+i.getLayerTypeLabels(n).join(", "));const o={layerAdapter:y,...u};o.radius=null==o.radius?null==o.blurRadius?18:t.gaussianBlurRadiusPxToKernelDensityRadiusPt(o.blurRadius):o.radius;const d=null!=o.signal?{signal:o.signal}:null;await y.load(d);const c=o.field,f=c?y.getField(c):null,m=await s.getFieldsList({field:c}),L=r.verifyBasicFieldValidity(y,m,"heatmap-statistics:invalid-parameters");if(L)throw L;if(f){const e=r.verifyFieldType(y,f,"heatmap-statistics:invalid-parameters",l);if(e)throw e}return o}async function p(e){const{layerAdapter:a,...t}=await n(e);return a.heatmapStatistics(t)}return p}));
