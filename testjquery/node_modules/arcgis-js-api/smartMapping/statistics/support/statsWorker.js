/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["exports","./utils","../../../statistics/utils"],(function(a,e,i){"use strict";async function t(a){const{attribute:t,features:n}=a,{normalizationType:l,normalizationField:o,minValue:s,maxValue:r,fieldType:u}=t,m=await e.getDataValues({field:t.field,valueExpression:t.valueExpression,normalizationType:l,normalizationField:o,normalizationTotal:t.normalizationTotal,viewInfoParams:t.viewInfoParams,timeZone:t.timeZone,fieldInfos:t.fieldInfos},n),f=i.isNullCountSupported({normalizationType:l,normalizationField:o,minValue:s,maxValue:r}),d={value:.5,fieldType:u},c="esriFieldTypeString"===u?i.calculateStringStatistics({values:m,supportsNullCount:f,percentileParams:d}):i.calculateStatistics({values:m,minValue:s,maxValue:r,useSampleStdDev:!l,supportsNullCount:f,percentileParams:d});return i.processSummaryStatisticsResult(c,"esriFieldTypeDate"===u)}async function n(a){const{attribute:t,features:n}=a,l=await e.getDataValues({field:t.field,field2:t.field2,field3:t.field3,fieldDelimiter:t.fieldDelimiter,valueExpression:t.valueExpression,viewInfoParams:t.viewInfoParams,timeZone:t.timeZone,fieldInfos:t.fieldInfos},n,!1),o=i.calculateUniqueValuesCount(l);return i.createUVResult(o,t.domains,t.returnAllCodedValues,t.fieldDelimiter)}async function l(a){const{attribute:t,features:n}=a,{field:l,normalizationType:o,normalizationField:s,normalizationTotal:r,classificationMethod:u}=t,m=await e.getDataValues({field:l,valueExpression:t.valueExpression,normalizationType:o,normalizationField:s,normalizationTotal:r,viewInfoParams:t.viewInfoParams,timeZone:t.timeZone,fieldInfos:t.fieldInfos},n),f=i.calculateClassBreaks(m,{field:l,normalizationType:o,normalizationField:s,normalizationTotal:r,classificationMethod:u,standardDeviationInterval:t.standardDeviationInterval,numClasses:t.numClasses,minValue:t.minValue,maxValue:t.maxValue});return i.resolveCBResult(f,u)}async function o(a){const{attribute:t,features:n}=a,{field:l,normalizationType:o,normalizationField:s,normalizationTotal:r,classificationMethod:u}=t,m=await e.getDataValues({field:l,valueExpression:t.valueExpression,normalizationType:o,normalizationField:s,normalizationTotal:r,viewInfoParams:t.viewInfoParams,timeZone:t.timeZone,fieldInfos:t.fieldInfos},n);return i.calculateHistogram(m,{field:l,normalizationType:o,normalizationField:s,normalizationTotal:r,classificationMethod:u,standardDeviationInterval:t.standardDeviationInterval,numBins:t.numBins,minValue:t.minValue,maxValue:t.maxValue})}async function s(a){const{attribute:i,features:t}=a,{field:n,radius:l,fieldOffset:o,transform:s,spatialReference:r}=i,u=i.size??[0,0],m=e.quantizeFeatures(t??[],s,r,u),{count:f,min:d,max:c,mean:p,stdDev:v}=e.calculateHeatmapStats(m,l??void 0,o,n,u[0],u[1]);return{count:f,min:d,max:c,avg:p,stddev:v}}a.classBreaks=l,a.heatmapStatistics=s,a.histogram=o,a.summaryStatistics=t,a.uniqueValues=n,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})}));
