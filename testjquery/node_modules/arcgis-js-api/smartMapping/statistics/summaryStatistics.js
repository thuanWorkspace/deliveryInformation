/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
define(["../../core/Error","../../layers/support/fieldUtils","./support/utils","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils"],(function(i,e,s,a,r,t){"use strict";const n=[...e.numericTypes,...r.dateTypes,"time-only","string"];async function l(l){if(!l?.layer||!(l.field||l.valueExpression||l.sqlExpression))throw new i("summary-statistics:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(l.valueExpression&&!l.sqlExpression&&!l.view)throw new i("summary-statistics:missing-parameters","View is required when 'valueExpression' is specified");l.forBinning&&a.verifyBinningParams(l,"summary-statistics");const{layer:o,...p}=l,m=l.forBinning?t.binningCapableLayerTypes:t.defaultSupportedLayerTypes,y=t.createLayerAdapter(o,m,l.forBinning);if(!y)throw new i("summary-statistics:invalid-parameters","'layer' must be one of these types: "+t.getLayerTypeLabels(m).join(", "));const u={layerAdapter:y,...p};u.normalizationType=r.getNormalizationType(u);const d=null!=u.signal?{signal:u.signal}:null;await y.load(d);const f=u.field,c=u.normalizationType,w=u.valueExpression||u.sqlExpression,v=f?y.getField(f):null,g=await r.getFieldsList({field:u.field,normalizationField:u.normalizationField,valueExpression:u.valueExpression}),E=s.verifyBasicFieldValidity(y,g,"summary-statistics:invalid-parameters");if(E)throw E;if(v){const a=s.verifyFieldType(y,v,"summary-statistics:invalid-parameters",n);if(a)throw a;if((r.isAnyDateField(v)||e.isTimeOnlyField(v))&&c)throw new i("summary-statistics:invalid-parameters","Normalization is not allowed for date fields")}else if(w&&c)throw new i("summary-statistics:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified");const x=s.verifyFilterValidty(u.filter,"summary-statistics:invalid-parameters");if(x)throw x;return u}async function o(i){const{layerAdapter:e,...s}=await l(i);return e.summaryStatistics(s)}return o}));
